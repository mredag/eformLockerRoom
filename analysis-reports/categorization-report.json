{
  "summary": {
    "active": 311,
    "documentation": 48,
    "unknown": 7,
    "config": 6,
    "legacy": 4,
    "temporary": 20,
    "build": 92,
    "redundant": 1,
    "test": 9
  },
  "recommendations": {
    "active": {
      "count": 311,
      "files": [
        ".env",
        ".env.example",
        ".gitattributes",
        ".gitignore",
        ".kiro\\settings\\mcp.json",
        ".kiro\\specs\\admin-panel-relay-control\\tasks.md",
        ".kiro\\specs\\admin-panel-ui-improvements\\design.md",
        ".kiro\\specs\\admin-panel-ui-improvements\\tasks.md",
        ".kiro\\specs\\maksisoft-integration\\tasks.md",
        ".kiro\\steering\\maksisoft-spec-help.md",
        ".nvmrc",
        "app\\agent\\eform-agent.service",
        "app\\agent\\jest.config.js",
        "app\\agent\\package.json",
        "app\\agent\\README.md",
        "app\\agent\\src\\index.ts",
        "app\\agent\\src\\services\\update-agent.js",
        "app\\agent\\src\\services\\update-agent.ts",
        "app\\agent\\src\\services\\__tests__\\update-agent.test.js",
        "app\\agent\\src\\services\\__tests__\\update-agent.test.ts",
        "app\\agent\\src\\types\\update-types.ts",
        "app\\agent\\src\\__tests__\\setup.ts",
        "app\\agent\\test-build.js",
        "app\\agent\\tsconfig.json",
        "app\\data\\eform.db",
        "app\\data\\eform.db-shm",
        "app\\data\\eform.db-wal",
        "app\\gateway\\data\\eform.db",
        "app\\gateway\\data\\eform.db-shm",
        "app\\gateway\\data\\eform.db-wal",
        "app\\gateway\\package.json",
        "app\\gateway\\src\\controllers\\configuration.ts",
        "app\\gateway\\src\\controllers\\provisioning.ts",
        "app\\gateway\\src\\index.ts",
        "app\\gateway\\src\\routes\\admin.ts",
        "app\\gateway\\src\\routes\\configuration.ts",
        "app\\gateway\\src\\routes\\heartbeat.ts",
        "app\\gateway\\src\\routes\\provisioning.ts",
        "app\\gateway\\src\\routes\\__tests__\\heartbeat.test.ts",
        "app\\gateway\\src\\services\\configuration.ts",
        "app\\gateway\\src\\services\\locker-coordination.ts",
        "app\\gateway\\src\\services\\provisioning.ts",
        "app\\gateway\\src\\services\\__tests__\\locker-coordination.test.ts",
        "app\\gateway\\src\\utils\\config-test.ts",
        "app\\gateway\\src\\utils\\provision.ts",
        "app\\gateway\\src\\__tests__\\failure-scenarios\\system-resilience.test.ts",
        "app\\gateway\\src\\__tests__\\integration\\database-test.test.ts",
        "app\\gateway\\src\\__tests__\\integration\\full-system-integration.test.ts",
        "app\\gateway\\src\\__tests__\\integration\\multi-room-coordination.test.ts",
        "app\\gateway\\src\\__tests__\\integration\\multi-service-integration.test.ts",
        "app\\gateway\\src\\__tests__\\validation\\comprehensive-performance-validation.test.ts",
        "app\\gateway\\src\\__tests__\\validation\\comprehensive-system-validation.test.ts",
        "app\\gateway\\src\\__tests__\\validation\\power-interruption-validation.test.ts",
        "app\\gateway\\src\\__tests__\\validation\\system-validation.test.ts",
        "app\\gateway\\tsconfig.json",
        "app\\gateway\\__tests__\\configuration.test.ts",
        "app\\gateway\\__tests__\\provisioning.test.ts",
        "app\\kiosk\\data\\eform.db",
        "app\\kiosk\\data\\eform.db-shm",
        "app\\kiosk\\data\\eform.db-wal",
        "app\\kiosk\\package.json",
        "app\\kiosk\\src\\controllers\\i18n-controller.ts",
        "app\\kiosk\\src\\controllers\\qr-handler.ts",
        "app\\kiosk\\src\\controllers\\session-manager.ts",
        "app\\kiosk\\src\\controllers\\ui-controller.ts",
        "app\\kiosk\\src\\controllers\\__tests__\\i18n-controller.test.ts",
        "app\\kiosk\\src\\controllers\\__tests__\\qr-handler-vip.test.ts",
        "app\\kiosk\\src\\controllers\\__tests__\\qr-handler.test.ts",
        "app\\kiosk\\src\\controllers\\__tests__\\session-manager.test.ts",
        "app\\kiosk\\src\\controllers\\__tests__\\ui-controller-enhanced.test.ts",
        "app\\kiosk\\src\\hardware\\modbus-controller.ts",
        "app\\kiosk\\src\\hardware\\rfid-handler.ts",
        "app\\kiosk\\src\\hardware\\rs485-diagnostics.ts",
        "app\\kiosk\\src\\hardware\\__tests__\\modbus-controller.test.ts",
        "app\\kiosk\\src\\hardware\\__tests__\\modbus-error-handling.test.ts",
        "app\\kiosk\\src\\hardware\\__tests__\\rfid-handler.test.ts",
        "app\\kiosk\\src\\hardware\\__tests__\\rs485-diagnostics.test.ts",
        "app\\kiosk\\src\\index.ts",
        "app\\kiosk\\src\\middleware\\security-middleware.ts",
        "app\\kiosk\\src\\middleware\\__tests__\\security-middleware.test.ts",
        "app\\kiosk\\src\\services\\heartbeat-client.ts",
        "app\\kiosk\\src\\services\\rate-limiter.ts",
        "app\\kiosk\\src\\services\\rfid-user-flow.ts",
        "app\\kiosk\\src\\services\\__tests__\\heartbeat-client.test.ts",
        "app\\kiosk\\src\\services\\__tests__\\rate-limiter.test.ts",
        "app\\kiosk\\src\\services\\__tests__\\rfid-user-flow-vip.test.ts",
        "app\\kiosk\\src\\services\\__tests__\\rfid-user-flow.test.ts",
        "app\\kiosk\\src\\types\\node-hid.d.ts",
        "app\\kiosk\\src\\ui\\index.html",
        "app\\kiosk\\src\\ui\\static\\app-simple.js",
        "app\\kiosk\\src\\ui\\static\\app.js",
        "app\\kiosk\\src\\ui\\static\\i18n.js",
        "app\\kiosk\\src\\ui\\static\\package.json",
        "app\\kiosk\\src\\ui\\static\\performance-tracker.js",
        "app\\kiosk\\src\\ui\\static\\pi-config.js",
        "app\\kiosk\\src\\ui\\static\\styles-simple.css",
        "app\\kiosk\\src\\ui\\static\\styles.css",
        "app\\kiosk\\src\\ui\\static\\__tests__\\app-simple.test.js",
        "app\\kiosk\\src\\__tests__\\e2e\\complete-user-flows.test.ts",
        "app\\kiosk\\src\\__tests__\\heartbeat-commands-vip.test.ts",
        "app\\kiosk\\src\\__tests__\\integration\\rfid-qr-integration.test.ts",
        "app\\kiosk\\src\\__tests__\\master-pin.test.ts",
        "app\\kiosk\\src\\__tests__\\qr-security.test.ts",
        "app\\kiosk\\src\\__tests__\\rfid-integration.test.ts",
        "app\\kiosk\\src\\__tests__\\soak\\hardware-endurance.test.ts",
        "app\\kiosk\\src\\__tests__\\soak\\simple-test.test.ts",
        "app\\kiosk\\src\\__tests__\\ui-controller.test.ts",
        "app\\kiosk\\src\\__tests__\\validation\\actual-hardware-validation.test.ts",
        "app\\kiosk\\src\\__tests__\\validation\\hardware-integration-validation.test.ts",
        "app\\kiosk\\tsconfig.json",
        "app\\kiosk\\tsconfig.tsbuildinfo",
        "app\\kiosk\\vitest.config.ts",
        "app\\panel\\.env.example",
        "app\\panel\\config\\system.json",
        "app\\panel\\data\\eform.db",
        "app\\panel\\data\\eform.db-shm",
        "app\\panel\\data\\eform.db-wal",
        "app\\panel\\frontend\\public\\vite.svg",
        "app\\panel\\frontend\\tsconfig.app.tsbuildinfo",
        "app\\panel\\package.json",
        "app\\panel\\public\\assets\\index-CH19RiHT.js",
        "app\\panel\\public\\assets\\index-D8ygJgM8.css",
        "app\\panel\\public\\assets\\ui-B2zvOGH9.js",
        "app\\panel\\public\\assets\\vendor-gH-7aFTg.js",
        "app\\panel\\public\\index.html",
        "app\\panel\\public\\vite.svg",
        "app\\panel\\src\\controllers\\config-controller.ts",
        "app\\panel\\src\\controllers\\i18n-controller.ts",
        "app\\panel\\src\\controllers\\__tests__\\i18n-controller.test.ts",
        "app\\panel\\src\\index.ts",
        "app\\panel\\src\\middleware\\auth-middleware.ts",
        "app\\panel\\src\\middleware\\rate-limit.ts",
        "app\\panel\\src\\middleware\\security-middleware.ts",
        "app\\panel\\src\\middleware\\__tests__\\security-middleware.test.ts",
        "app\\panel\\src\\routes\\auth-routes.ts",
        "app\\panel\\src\\routes\\locker-naming-routes.ts",
        "app\\panel\\src\\routes\\locker-routes.ts",
        "app\\panel\\src\\routes\\maksi-routes.ts",
        "app\\panel\\src\\routes\\performance-routes.ts",
        "app\\panel\\src\\routes\\relay-routes.ts",
        "app\\panel\\src\\routes\\vip-routes.ts",
        "app\\panel\\src\\services\\auth-service.ts",
        "app\\panel\\src\\services\\authorization-service.ts",
        "app\\panel\\src\\services\\maksi-config.md",
        "app\\panel\\src\\services\\maksi-types.ts",
        "app\\panel\\src\\services\\maksi.ts",
        "app\\panel\\src\\services\\permission-service.ts",
        "app\\panel\\src\\services\\pin-rotation-service.ts",
        "app\\panel\\src\\services\\session-manager.ts",
        "app\\panel\\src\\services\\__tests__\\authorization-service.test.ts",
        "app\\panel\\src\\types\\fastify.d.ts",
        "app\\panel\\src\\validation\\simple-validation.js",
        "app\\panel\\src\\validation\\task-8.4-implementation-summary.md",
        "app\\panel\\src\\validation\\vip-transfer-validation.ts",
        "app\\panel\\src\\views\\config.html",
        "app\\panel\\src\\views\\configuration-panel.html",
        "app\\panel\\src\\views\\dashboard.html",
        "app\\panel\\src\\views\\locker-naming.html",
        "app\\panel\\src\\views\\lockers.html",
        "app\\panel\\src\\views\\login.html",
        "app\\panel\\src\\views\\performance-dashboard.html",
        "app\\panel\\src\\views\\relay.html",
        "app\\panel\\src\\views\\static\\i18n.js",
        "app\\panel\\src\\views\\vip.html",
        "app\\panel\\src\\__tests__\\auth-middleware.test.ts",
        "app\\panel\\src\\__tests__\\auth-service.test.ts",
        "app\\panel\\src\\__tests__\\command-status.test.ts",
        "app\\panel\\src\\__tests__\\integration\\vip-workflow-integration.test.ts",
        "app\\panel\\src\\__tests__\\locker-routes-vip.test.ts",
        "app\\panel\\src\\__tests__\\maksi-data-mapping.test.ts",
        "app\\panel\\src\\__tests__\\maksi-integration.test.ts",
        "app\\panel\\src\\__tests__\\maksi-manual-validation.js",
        "app\\panel\\src\\__tests__\\maksi-modal-display.test.ts",
        "app\\panel\\src\\__tests__\\maksi-mvp-validation.test.ts",
        "app\\panel\\src\\__tests__\\maksi-rate-limiter.test.ts",
        "app\\panel\\src\\__tests__\\maksi-routes.test.ts",
        "app\\panel\\src\\__tests__\\maksi-service.test.ts",
        "app\\panel\\src\\__tests__\\maksi-test-summary.md",
        "app\\panel\\src\\__tests__\\MAKSISOFT_MVP_VALIDATION_REPORT.md",
        "app\\panel\\src\\__tests__\\performance\\panel-performance.test.ts",
        "app\\panel\\src\\__tests__\\permission-service.test.ts",
        "app\\panel\\src\\__tests__\\session-manager.test.ts",
        "app\\panel\\src\\__tests__\\setup.ts",
        "app\\panel\\src\\__tests__\\ui-improvements\\accessibility-audit-tool.ts",
        "app\\panel\\src\\__tests__\\ui-improvements\\accessibility-enhancements.js",
        "app\\panel\\src\\__tests__\\ui-improvements\\accessibility-validation-report.md",
        "app\\panel\\src\\__tests__\\ui-improvements\\accessibility-validation.test.ts",
        "app\\panel\\src\\__tests__\\ui-improvements\\ACCESSIBILITY_VALIDATION_SUMMARY.md",
        "app\\panel\\src\\__tests__\\ui-improvements\\api-integration.test.ts",
        "app\\panel\\src\\__tests__\\ui-improvements\\click-to-select.test.ts",
        "app\\panel\\src\\__tests__\\ui-improvements\\comprehensive-coverage.test.ts",
        "app\\panel\\src\\__tests__\\ui-improvements\\generate-accessibility-report.ts",
        "app\\panel\\src\\__tests__\\ui-improvements\\README.md",
        "app\\panel\\src\\__tests__\\ui-improvements\\rfid-display.test.ts",
        "app\\panel\\src\\__tests__\\ui-improvements\\run-accessibility-validation.ts",
        "app\\panel\\src\\__tests__\\ui-improvements\\run-ui-tests.ts",
        "app\\panel\\src\\__tests__\\ui-improvements\\status-translation.test.ts",
        "app\\panel\\src\\__tests__\\ui-improvements\\visual-regression.test.ts",
        "app\\panel\\src\\__tests__\\validation\\end-of-day-csv-validation.test.ts",
        "app\\panel\\src\\__tests__\\vip-routes.test.ts",
        "app\\panel\\tsconfig.json",
        "app\\panel\\tsconfig.tsbuildinfo",
        "app\\panel\\vitest.config.ts",
        "assets\\index-D_ryMEPs.js",
        "assets\\index-X8b7Z_4p.css",
        "demo\\codex-like-login.html",
        "LICENSE",
        "migrations\\001_initial_schema.sql",
        "migrations\\002_provisioning_and_config.sql",
        "migrations\\003_complete_schema.sql",
        "migrations\\004_staff_users.sql",
        "migrations\\005_vip_transfer_audit.sql",
        "migrations\\006_pin_rotation_system.sql",
        "migrations\\007_soak_testing_tables.sql",
        "migrations\\008_clean_default_users.sql",
        "migrations\\015_add_command_duration.sql",
        "migrations\\016_locker_naming_system.sql",
        "migrations\\017_fix_locker_naming_trigger.sql",
        "migrations\\018_performance_monitoring.sql",
        "package.json",
        "shared\\controllers\\health-controller.ts",
        "shared\\controllers\\__tests__\\health-controller.test.ts",
        "shared\\data\\test\\test-1755810829494.db",
        "shared\\data\\test\\test-1755810839501.db",
        "shared\\data\\test\\test-1755810849515.db",
        "shared\\data\\test\\test-1755810859530.db",
        "shared\\data\\test\\test-1755810869535.db",
        "shared\\data\\test\\test-1755849355388.db",
        "shared\\data\\test\\test-1755849360406.db",
        "shared\\data\\test\\test-1755849365408.db",
        "shared\\data\\test\\test-1755849370413.db",
        "shared\\data\\test\\test-1755849375428.db",
        "shared\\database\\base-repository.ts",
        "shared\\database\\command-queue-repository.ts",
        "shared\\database\\connection.ts",
        "shared\\database\\database-manager.ts",
        "shared\\database\\event-repository.ts",
        "shared\\database\\index.ts",
        "shared\\database\\kiosk-heartbeat-repository.ts",
        "shared\\database\\locker-repository.ts",
        "shared\\database\\migration-runner.ts",
        "shared\\database\\repository-factory.ts",
        "shared\\database\\schema.sql",
        "shared\\database\\vip-contract-repository.ts",
        "shared\\database\\vip-history-repository.ts",
        "shared\\database\\vip-transfer-repository.ts",
        "shared\\database\\vitest.config.ts",
        "shared\\database\\__tests__\\command-queue-repository.test.ts",
        "shared\\database\\__tests__\\database-manager.test.ts",
        "shared\\database\\__tests__\\locker-repository.test.ts",
        "shared\\package.json",
        "shared\\services\\command-queue-manager.ts",
        "shared\\services\\config-manager.ts",
        "shared\\services\\cookie-cleanup-service.ts",
        "shared\\services\\cookie-manager.ts",
        "shared\\services\\event-logger.ts",
        "shared\\services\\hardware-soak-tester.ts",
        "shared\\services\\health-monitor.ts",
        "shared\\services\\heartbeat-manager.ts",
        "shared\\services\\i18n-service.ts",
        "shared\\services\\locker-naming-service.ts",
        "shared\\services\\locker-state-manager.ts",
        "shared\\services\\log-retention-manager.ts",
        "shared\\services\\performance-monitor.ts",
        "shared\\services\\rate-limiter.ts",
        "shared\\services\\security-validation.ts",
        "shared\\services\\session-conflict-detector.ts",
        "shared\\services\\websocket-service.ts",
        "shared\\services\\__tests__\\command-queue-manager.test.ts",
        "shared\\services\\__tests__\\config-manager.test.ts",
        "shared\\services\\__tests__\\event-logger.test.ts",
        "shared\\services\\__tests__\\hardware-soak-tester.test.ts",
        "shared\\services\\__tests__\\health-monitor.test.ts",
        "shared\\services\\__tests__\\i18n-regression.test.ts",
        "shared\\services\\__tests__\\i18n-service.test.ts",
        "shared\\services\\__tests__\\locker-assignment-release.test.ts",
        "shared\\services\\__tests__\\locker-naming-service.test.ts",
        "shared\\services\\__tests__\\locker-state-manager-enhanced.test.ts",
        "shared\\services\\__tests__\\locker-state-manager-simple.test.ts",
        "shared\\services\\__tests__\\locker-state-manager.test.ts",
        "shared\\services\\__tests__\\log-retention-manager.test.ts",
        "shared\\services\\__tests__\\rate-limiter.test.ts",
        "shared\\services\\__tests__\\security-validation.test.ts",
        "shared\\services\\__tests__\\websocket-service.test.ts",
        "shared\\tsconfig.json",
        "shared\\types\\core-entities.ts",
        "shared\\types\\index.ts",
        "shared\\types\\system-config.ts",
        "src\\cli\\config-test.ts",
        "src\\cli\\provision.ts",
        "src\\controllers\\configuration.ts",
        "src\\controllers\\provisioning.ts",
        "src\\controllers\\__tests__\\configuration.test.ts",
        "src\\controllers\\__tests__\\provisioning.test.ts",
        "src\\database\\connection.ts",
        "src\\database\\schema.sql",
        "src\\index.ts",
        "src\\routes\\configuration.ts",
        "src\\routes\\provisioning.ts",
        "src\\services\\configuration.ts",
        "src\\services\\provisioning.ts",
        "src\\services\\__tests__\\configuration.test.ts",
        "src\\services\\__tests__\\provisioning.test.ts",
        "src\\types\\core-entities.d.ts",
        "src\\types\\core-entities.d.ts.map",
        "src\\types\\core-entities.js",
        "src\\types\\core-entities.js.map",
        "src\\types\\core-entities.ts",
        "src\\types\\index.ts",
        "src\\views\\configuration-panel.html",
        "tsconfig.json"
      ],
      "action": "Preserve - critical for system operation",
      "priority": "preserve"
    },
    "documentation": {
      "count": 48,
      "files": [
        ".github\\workflows\\e2e-tests.yml",
        ".kiro\\specs\\admin-panel-ui-improvements\\requirements.md",
        ".kiro\\specs\\eform-locker-system\\design.md",
        ".kiro\\specs\\eform-locker-system\\requirements.md",
        ".kiro\\specs\\kiosk-ui-overhaul\\tasks.md",
        ".kiro\\specs\\maksisoft-integration\\design.md",
        ".kiro\\specs\\maksisoft-integration\\requirements.md",
        ".kiro\\specs\\repository-cleanup-v3\\requirements.md",
        ".kiro\\specs\\system-modernization-v2\\tasks.md",
        ".kiro\\steering\\development-environment.md",
        ".kiro\\steering\\project-development-guide.md",
        "deploy-maksisoft-to-pi.ps1",
        "docs\\API_REFERENCE.md",
        "docs\\card-assignment-testing-guide.md",
        "docs\\configuration-system.md",
        "docs\\CROSS_PLATFORM_IMPROVEMENTS.md",
        "docs\\DEPLOYMENT.md",
        "docs\\DEPLOYMENT_README.md",
        "docs\\DEVELOPMENT_ENVIRONMENT_SETUP.md",
        "docs\\integrations\\maksisoft-integration-guide.md",
        "docs\\kiosk-startup-troubleshooting.md",
        "docs\\kiosk-troubleshooting-guide.md",
        "docs\\maintenance\\system-fixes-reference.md",
        "docs\\MONITORING_GUIDE.md",
        "docs\\multiple-relay-cards-setup.md",
        "docs\\operational-runbook.md",
        "docs\\performance-monitoring-guide.md",
        "docs\\pi-configuration-guide.md",
        "docs\\PRODUCTION_READY_SUMMARY.md",
        "docs\\project-structure.md",
        "docs\\QUICK_REFERENCE.md",
        "docs\\raspberry-pi-deployment-guide.md",
        "docs\\raspberry-pi-performance-optimizations.md",
        "docs\\raspberry-pi-setup-guide-v2.md",
        "docs\\raspberry-pi-setup-guide.md",
        "docs\\RASPBERRY_PI_ENVIRONMENT_SETUP.md",
        "docs\\README.md",
        "docs\\rollback-procedures.md",
        "docs\\SYSTEM_DOCUMENTATION.md",
        "docs\\task-14-validation-report.json",
        "docs\\troubleshooting\\COMMAND_QUEUE_DATABASE_PATH_ISSUE_REPORT.md",
        "docs\\troubleshooting\\DIRECT_RELAY_TROUBLESHOOTING_REPORT.md",
        "docs\\troubleshooting\\hardware-integration-guide.md",
        "docs\\troubleshooting\\incident-reports\\kiosk-assignment-failure-2025-08.md",
        "docs\\troubleshooting\\RASPBERRY_PI_MIGRATION_FIX.md",
        "docs\\troubleshooting\\README.md",
        "README.md",
        "test-assignment-debug.sh"
      ],
      "action": "Review and consolidate - keep essential docs",
      "priority": "low"
    },
    "unknown": {
      "count": 7,
      "files": [
        ".kiro\\panel-maksisoft-integration.md",
        ".vscode\\settings.json",
        "data\\eform.db",
        "data\\eform.db-shm",
        "data\\eform.db-wal",
        "favicon.ico",
        "favicon.svg"
      ],
      "action": "Review manually - categorization needed",
      "priority": "medium"
    },
    "config": {
      "count": 6,
      "files": [
        ".kiro\\specs\\eform-locker-system\\tasks.md",
        "config\\development.json",
        "config\\production-final.json",
        "config\\production.json",
        "config\\README.md",
        "config\\system.json"
      ],
      "action": "Preserve - required for system configuration",
      "priority": "preserve"
    },
    "legacy": {
      "count": 4,
      "files": [
        ".kiro\\specs\\repository-cleanup-v3\\design.md",
        ".kiro\\specs\\repository-cleanup-v3\\tasks.md",
        "cleanup-opening-lockers.sql",
        "fix-opening-status.sql"
      ],
      "action": "Review and archive - may have historical value",
      "priority": "low"
    },
    "temporary": {
      "count": 20,
      "files": [
        "debug-maksisoft-button-click.js",
        "debug-maksisoft-button-issue.js",
        "debug-maksisoft-buttons.js",
        "debug-maksisoft-error.js",
        "file-categorization-report.json",
        "logs\\pi-optimization-validation.json",
        "task-16-acceptance-testing-report.json",
        "test-actual-rfid-assignment.js",
        "test-assignment.json",
        "test-env-vars.js",
        "test-locker-assignment.js",
        "test-maksisoft-button-fix.js",
        "test-maksisoft-buttons-working.html",
        "test-maksisoft-buttons.html",
        "test-maksisoft-connection.js",
        "test-maksisoft-final-verification.js",
        "test-maksisoft-timeout-fix.js",
        "test-rfid-flow-fixed.js",
        "test-status-display.html",
        "test-status-fix.js"
      ],
      "action": "Remove immediately - safe to delete",
      "priority": "high"
    },
    "build": {
      "count": 92,
      "files": [
        "deploy-maksisoft-to-pi.sh",
        "package-lock.json",
        "scripts\\analyze-repository.js",
        "scripts\\backup-maksisoft-integration.ps1",
        "scripts\\backup-maksisoft-integration.sh",
        "scripts\\backup.sh",
        "scripts\\canary-deploy.sh",
        "scripts\\check-rfid-devices.js",
        "scripts\\cleanup-repository.js",
        "scripts\\configure-pi-model.sh",
        "scripts\\debug-pi-commands.sh",
        "scripts\\dependency-scanner.js",
        "scripts\\deploy-accessibility-improvements.ps1",
        "scripts\\deploy-accessibility-improvements.sh",
        "scripts\\deploy-kiosk-ui.sh",
        "scripts\\deploy-to-pi.sh",
        "scripts\\deploy-websocket-fix.ps1",
        "scripts\\deploy-websocket-fix.sh",
        "scripts\\deploy.sh",
        "scripts\\deployment-monitor.sh",
        "scripts\\diagnose-modbus-issue.js",
        "scripts\\diagnose-panel-relay-issue.js",
        "scripts\\e2e-setup-report.json",
        "scripts\\emergency-close-relay.js",
        "scripts\\emergency-relay-reset.js",
        "scripts\\file-categorizer.js",
        "scripts\\fix-database-path.js",
        "scripts\\fix-duplicate-migrations.js",
        "scripts\\fix-kiosk-startup.sh",
        "scripts\\fix-panel-port.sh",
        "scripts\\hardware-diagnostics.js",
        "scripts\\health-check-kiosk.sh",
        "scripts\\health-check.sh",
        "scripts\\init-database-manual.sh",
        "scripts\\install-production.sh",
        "scripts\\install.sh",
        "scripts\\migrate.ts",
        "scripts\\package.sh",
        "scripts\\pi-database-fix.sh",
        "scripts\\prepare-release.sh",
        "scripts\\production-startup.js",
        "scripts\\quick-fix-validation.sh",
        "scripts\\README-analysis-tools.md",
        "scripts\\README.md",
        "scripts\\repository-analyzer.js",
        "scripts\\reset-users.js",
        "scripts\\restore-auth.js",
        "scripts\\restore.sh",
        "scripts\\run-comprehensive-tests.ps1",
        "scripts\\run-comprehensive-tests.sh",
        "scripts\\run-cookie-diagnostics.sh",
        "scripts\\run-e2e-admin-panel-tests.js",
        "scripts\\run-integration-tests.ps1",
        "scripts\\run-system-validation.ps1",
        "scripts\\run-system-validation.sh",
        "scripts\\safety-assessor.js",
        "scripts\\setup-config.js",
        "scripts\\setup-database.sh",
        "scripts\\setup-logs-dir.sh",
        "scripts\\setup-pi-environment.sh",
        "scripts\\sign-package.sh",
        "scripts\\simple-relay-test.js",
        "scripts\\start-all-clean.sh",
        "scripts\\start-kiosk-clean.sh",
        "scripts\\systemd\\eform-agent.service",
        "scripts\\systemd\\eform-gateway.service",
        "scripts\\systemd\\eform-kiosk.service",
        "scripts\\systemd\\eform-panel.service",
        "scripts\\test-admin-panel-e2e.ps1",
        "scripts\\test-admin-panel-e2e.sh",
        "scripts\\test-basic-relay-control.js",
        "scripts\\test-card-assignment.bat",
        "scripts\\test-multiple-relay-cards.js",
        "scripts\\test-queue-vs-direct.js",
        "scripts\\test-relay-activation.js",
        "scripts\\test-relays-1-8.js",
        "scripts\\test-rfid-simple.js",
        "scripts\\test-services-startup.js",
        "scripts\\test-websocket-connection.js",
        "scripts\\test-websocket-realtime-updates.js",
        "scripts\\test-websocket-realtime-updates.ps1",
        "scripts\\test-websocket-simple.ps1",
        "scripts\\uninstall.sh",
        "scripts\\upgrade-nodejs.ps1",
        "scripts\\upgrade-nodejs.sh",
        "scripts\\validate-deployment.sh",
        "scripts\\validate-hardware-integration.js",
        "scripts\\validate-integration.js",
        "scripts\\validate-maksisoft-mvp.js",
        "scripts\\validate-nodejs20-compatibility.js",
        "scripts\\validate-system-requirements.js",
        "scripts\\validate-waveshare-hardware.js"
      ],
      "action": "Preserve - required for deployment",
      "priority": "preserve"
    },
    "redundant": {
      "count": 1,
      "files": [
        "deploy-status-fix.ps1"
      ],
      "action": "Remove after verification - likely safe",
      "priority": "medium"
    },
    "test": {
      "count": 9,
      "files": [
        "tests\\integration\\accessibility-requirements.test.ts",
        "tests\\integration\\admin-panel-ui-improvements.test.ts",
        "tests\\integration\\backend-integration.test.ts",
        "tests\\integration\\real-time-state-sync.test.ts",
        "tests\\integration\\real-time-sync.test.ts",
        "tests\\integration\\run-integration-tests.ts",
        "tests\\integration\\session-management-lifecycle.test.ts",
        "tests\\integration\\turkish-language-validation.test.ts",
        "tests\\integration\\websocket-realtime-ui-updates.test.ts"
      ],
      "action": "Preserve - important for code quality",
      "priority": "preserve"
    }
  },
  "details": {
    ".env": {
      "primary": "active",
      "confidence": "medium",
      "reasons": [
        "Matches active filename pattern",
        "Contains config keywords: configuration, config",
        "Contains documentation keywords: # "
      ],
      "alternatives": [
        "config",
        "documentation"
      ],
      "metadata": {
        "path": ".env",
        "size": 1224,
        "modified": "2025-08-28T08:12:46.227Z",
        "extension": "",
        "basename": ".env",
        "directory": ".",
        "content": "# Eform Locker Panel Configuration\r\n\r\n# Server Configuration\r\nNODE_ENV=production\r\nPANEL_PORT=3001\r\n\r\n# Security Configuration\r\nCOOKIE_SECRET=eform-panel-secret-key-change-in-production\r\nHTTPS_ENABLED=false\r\n\r\n# Database Configuration\r\nDATABASE_PATH=./data/eform.db\r\n\r\n# Logging\r\nLOG_LEVEL=info\r\n\r\n# Authentication\r\nSESSION_TIMEOUT=28800\r\n\r\n# Hardware Configuration (for Kiosk)\r\nMODBUS_PORT=/dev/ttyUSB0\r\nMODBUS_BAUDRATE=9600\r\n\r\n# Kiosk Configuration\r\nKIOSK_ID=kiosk-1\r\nZONE=main\r\nGATEWAY_URL=http://",
        "lineCount": 42,
        "isEmpty": false
      }
    },
    ".env.example": {
      "primary": "active",
      "confidence": "medium",
      "reasons": [
        "Matches active filename pattern",
        "Contains config keywords: configuration, config",
        "Contains documentation keywords: # "
      ],
      "alternatives": [
        "config",
        "documentation"
      ],
      "metadata": {
        "path": ".env.example",
        "size": 1293,
        "modified": "2025-08-28T08:08:49.406Z",
        "extension": ".example",
        "basename": ".env.example",
        "directory": ".",
        "content": "# Eform Locker Panel Configuration\n\n# Server Configuration\nNODE_ENV=production\nPANEL_PORT=3003\n\n# Security Configuration\nCOOKIE_SECRET=your-secure-cookie-secret-change-this\nHTTPS_ENABLED=false\n\n# Database Configuration\nDATABASE_PATH=./data/eform.db\n\n# Logging\nLOG_LEVEL=info\n\n# Authentication\nSESSION_TIMEOUT=28800\n\n# Hardware Configuration (for Kiosk)\nMODBUS_PORT=/dev/ttyUSB0\nMODBUS_BAUDRATE=9600\n\n# Kiosk Configuration\nKIOSK_ID=kiosk-1\nZONE=main\nGATEWAY_URL=http://127.0.0.1:3000\n\n# Maksisoft Inte",
        "lineCount": 45,
        "isEmpty": false
      }
    },
    ".gitattributes": {
      "primary": "active",
      "confidence": "medium",
      "reasons": [
        "Matches active filename pattern"
      ],
      "alternatives": [],
      "metadata": {
        "path": ".gitattributes",
        "size": 200,
        "modified": "2025-08-26T00:03:42.258Z",
        "extension": "",
        "basename": ".gitattributes",
        "directory": ".",
        "content": "* text=auto\r\n*.js text eol=lf\r\n*.ts text eol=lf\r\n*.json text eol=lf\r\n*.md text eol=lf\r\n*.sh text eol=lf\r\n*.sql text eol=lf\r\n*.html text eol=lf\r\n*.css text eol=lf\r\n*.yml text eol=lf\r\n*.yaml text eol=lf",
        "lineCount": 11,
        "isEmpty": false
      }
    },
    ".github\\workflows\\e2e-tests.yml": {
      "primary": "documentation",
      "confidence": "low",
      "reasons": [
        "Contains documentation keywords: setup"
      ],
      "alternatives": [],
      "metadata": {
        "path": ".github\\workflows\\e2e-tests.yml",
        "size": 3022,
        "modified": "2025-08-26T00:05:49.201Z",
        "extension": ".yml",
        "basename": "e2e-tests.yml",
        "directory": ".github\\workflows",
        "content": "name: End-to-End Tests\r\n\r\non:\r\n  push:\r\n    branches: [ main, develop ]\r\n  pull_request:\r\n    branches: [ main ]\r\n\r\njobs:\r\n  e2e-tests:\r\n    runs-on: ubuntu-latest\r\n    \r\n    strategy:\r\n      matrix:\r\n        node-version: [20.x]\r\n    \r\n    steps:\r\n    - name: Checkout code\r\n      uses: actions/checkout@v4\r\n      \r\n    - name: Use Node.js ${{ matrix.node-version }}\r\n      uses: actions/setup-node@v4\r\n      with:\r\n        node-version: ${{ matrix.node-version }}\r\n        cache: 'npm'\r\n        \r\n ",
        "lineCount": 122,
        "isEmpty": false
      }
    },
    ".gitignore": {
      "primary": "active",
      "confidence": "medium",
      "reasons": [
        "Matches active filename pattern",
        "Matches config filename pattern",
        "Contains temporary keywords: debug"
      ],
      "alternatives": [
        "config",
        "temporary"
      ],
      "metadata": {
        "path": ".gitignore",
        "size": 1570,
        "modified": "2025-08-27T20:33:18.561Z",
        "extension": "",
        "basename": ".gitignore",
        "directory": ".",
        "content": "# Dependencies\r\nnode_modules/\r\nnpm-debug.log*\r\nyarn-debug.log*\r\nyarn-error.log*\r\n\r\n# Build outputs\r\ndist/\r\nbuild/\r\n*.tsbuildinfo\r\n\r\n# Environment variables\r\n.env\r\n.env.local\r\n.env.development.local\r\n.env.test.local\r\n.env.production.local\r\n\r\n# Database files\r\ndata/\r\n*.db\r\n*.sqlite\r\n*.sqlite3\r\n\r\n# Logs\r\nlogs/\r\n*.log\r\n\r\n# Runtime data\r\npids/\r\n*.pid\r\n*.seed\r\n*.pid.lock\r\n\r\n# Coverage directory used by tools like istanbul\r\ncoverage/\r\n*.lcov\r\n\r\n# nyc test coverage\r\n.nyc_output\r\n\r\n# Dependency directori",
        "lineCount": 126,
        "isEmpty": false
      }
    },
    ".kiro\\panel-maksisoft-integration.md": {
      "primary": "unknown",
      "confidence": "low",
      "reasons": [
        "No matching patterns or content indicators"
      ],
      "metadata": {
        "path": ".kiro\\panel-maksisoft-integration.md",
        "size": 12941,
        "modified": "2025-08-28T06:33:42.767Z",
        "extension": ".md",
        "basename": "panel-maksisoft-integration.md",
        "directory": ".kiro",
        "content": "docs/panel-maksisoft-integration.md\r\nPurpose\r\n\r\nSearch a Maksisoft member by RFID on the panel lockers page. Add a button to each locker card. The panel server calls Maksisoft. The browser shows a modal with the result.\r\n\r\nWhy we add this\r\n\r\nSpeed up staff workflow on the lockers page.\r\nAvoid CORS by calling Maksisoft from the server.\r\nKeep Maksisoft cookies and credentials on the server.\r\nKeep the feature optional with one flag.\r\nAuto refresh the session cookie when it expires.\r\n\r\nFlow\r\n\r\nOpera",
        "lineCount": 394,
        "isEmpty": false
      }
    },
    ".kiro\\settings\\mcp.json": {
      "primary": "active",
      "confidence": "low",
      "reasons": [
        "Contains active keywords: type"
      ],
      "alternatives": [],
      "metadata": {
        "path": ".kiro\\settings\\mcp.json",
        "size": 421,
        "modified": "2025-08-25T15:49:53.454Z",
        "extension": ".json",
        "basename": "mcp.json",
        "directory": ".kiro\\settings",
        "content": "{\r\n  \"mcpServers\": {\r\n    \"browser\": {\r\n      \"command\": \"uvx\",\r\n      \"args\": [\"browser-mcp-server@latest\"],\r\n      \"env\": {\r\n        \"FASTMCP_LOG_LEVEL\": \"ERROR\"\r\n      },\r\n      \"disabled\": false,\r\n      \"autoApprove\": [\r\n        \"browser_navigate\",\r\n        \"browser_click\",\r\n        \"browser_type\",\r\n        \"browser_scroll\",\r\n        \"browser_screenshot\",\r\n        \"browser_get_page_content\"\r\n      ]\r\n    }\r\n  }\r\n}",
        "lineCount": 20,
        "isEmpty": false
      }
    },
    ".kiro\\specs\\admin-panel-relay-control\\tasks.md": {
      "primary": "active",
      "confidence": "low",
      "reasons": [
        "Contains active keywords: import",
        "Contains documentation keywords: # "
      ],
      "alternatives": [
        "documentation"
      ],
      "metadata": {
        "path": ".kiro\\specs\\admin-panel-relay-control\\tasks.md",
        "size": 5999,
        "modified": "2025-08-28T18:22:20.963Z",
        "extension": ".md",
        "basename": "tasks.md",
        "directory": ".kiro\\specs\\admin-panel-relay-control",
        "content": "# Implementation Plan\r\n\r\n- [x] 1. Verify command queue architecture and shared database access\r\n\r\n  - Confirm both panel and kiosk services use the same SQLite database path for command queue\r\n  - If separate databases, implement gateway endpoint /api/commands/enqueue for centralized queuing\r\n  - Test CommandQueueManager import and initialization in panel service\r\n  - _Requirements: 2.1, 2.2_\r\n\r\n- [x] 2. Implement single locker open API route\r\n\r\n  - Add POST /api/lockers/:kioskId/:lockerId/open ",
        "lineCount": 116,
        "isEmpty": false
      }
    },
    ".kiro\\specs\\admin-panel-ui-improvements\\design.md": {
      "primary": "active",
      "confidence": "low",
      "reasons": [
        "Contains active keywords: interface, let",
        "Contains documentation keywords: # , ## "
      ],
      "alternatives": [
        "documentation"
      ],
      "metadata": {
        "path": ".kiro\\specs\\admin-panel-ui-improvements\\design.md",
        "size": 13874,
        "modified": "2025-08-28T18:22:20.968Z",
        "extension": ".md",
        "basename": "design.md",
        "directory": ".kiro\\specs\\admin-panel-ui-improvements",
        "content": "# Design Document\r\n\r\n## Overview\r\n\r\nThe Admin Panel UI Improvements feature enhances the existing eForm Locker System's staff management interface to provide better visibility and usability. The improvements focus on three key areas: displaying complete RFID card information instead of generic text, correcting Turkish status translations, and implementing proper visual indicators for different locker states.\r\n\r\nThe design leverages the existing real-time WebSocket infrastructure and maintains co",
        "lineCount": 492,
        "isEmpty": false
      }
    },
    ".kiro\\specs\\admin-panel-ui-improvements\\requirements.md": {
      "primary": "documentation",
      "confidence": "medium",
      "reasons": [
        "Contains documentation keywords: # , ## ",
        "Contains active keywords: interface, let"
      ],
      "alternatives": [
        "active"
      ],
      "metadata": {
        "path": ".kiro\\specs\\admin-panel-ui-improvements\\requirements.md",
        "size": 3973,
        "modified": "2025-08-28T02:19:58.727Z",
        "extension": ".md",
        "basename": "requirements.md",
        "directory": ".kiro\\specs\\admin-panel-ui-improvements",
        "content": "# Requirements Document\r\n\r\n## Introduction\r\n\r\nThe Admin Panel UI Improvements feature addresses critical usability issues in the eForm Locker System's staff management interface. Currently, the panel displays incomplete RFID information, incorrect status text, and lacks proper visual indicators for locker ownership states. This feature will enhance the admin panel to provide clear, actionable information with proper Turkish localization and improved user experience.\r\n\r\n## Requirements\r\n\r\n### Req",
        "lineCount": 60,
        "isEmpty": false
      }
    },
    ".kiro\\specs\\admin-panel-ui-improvements\\tasks.md": {
      "primary": "active",
      "confidence": "low",
      "reasons": [
        "Contains active keywords: class",
        "Contains documentation keywords: # "
      ],
      "alternatives": [
        "documentation"
      ],
      "metadata": {
        "path": ".kiro\\specs\\admin-panel-ui-improvements\\tasks.md",
        "size": 3871,
        "modified": "2025-08-28T18:22:20.963Z",
        "extension": ".md",
        "basename": "tasks.md",
        "directory": ".kiro\\specs\\admin-panel-ui-improvements",
        "content": "# Implementation Plan\r\n\r\n- [x] 1. Update CSS styling for locker status indicators\r\n\r\n  - Add new CSS class `.state-sahipli` with red background color (#dc3545) for owned lockers\r\n  - Update existing CSS classes to ensure proper color coding: `.state-bos` (green), `.state-aciliyor` (blue), `.state-engelli` (gray), `.state-hata` (gray)\r\n  - Ensure text contrast ratios meet accessibility standards (minimum 4.5:1) for all status colors\r\n  - Test color indicators across different locker states and sc",
        "lineCount": 69,
        "isEmpty": false
      }
    },
    ".kiro\\specs\\eform-locker-system\\design.md": {
      "primary": "documentation",
      "confidence": "medium",
      "reasons": [
        "Contains documentation keywords: # , ## ",
        "Contains active keywords: type"
      ],
      "alternatives": [
        "active"
      ],
      "metadata": {
        "path": ".kiro\\specs\\eform-locker-system\\design.md",
        "size": 19598,
        "modified": "2025-08-20T10:53:14.468Z",
        "extension": ".md",
        "basename": "design.md",
        "directory": ".kiro\\specs\\eform-locker-system",
        "content": "# Design Document\r\n\r\n## Overview\r\n\r\nThe Eform Locker System is a distributed, multi-room locker management solution built on Node.js with TypeScript. The architecture consists of three main components: Kiosks (room-level controllers), a central Management Panel, and a Gateway service that coordinates communication. The system uses RFID as the primary access method with optional QR codes, operates offline-first, and supports VIP locker contracts.\r\n\r\n## Architecture\r\n\r\n### System Components\r\n\r\n```",
        "lineCount": 600,
        "isEmpty": false
      }
    },
    ".kiro\\specs\\eform-locker-system\\requirements.md": {
      "primary": "documentation",
      "confidence": "medium",
      "reasons": [
        "Contains documentation keywords: # , ## ",
        "Contains redundant keywords: backup"
      ],
      "alternatives": [
        "redundant"
      ],
      "metadata": {
        "path": ".kiro\\specs\\eform-locker-system\\requirements.md",
        "size": 11338,
        "modified": "2025-08-20T10:52:45.874Z",
        "extension": ".md",
        "basename": "requirements.md",
        "directory": ".kiro\\specs\\eform-locker-system",
        "content": "# Requirements Document\r\n\r\n## Introduction\r\n\r\nThe Eform Locker System is a comprehensive RFID-based locker management solution designed for multi-room facilities such as gyms, spas, or recreational centers. The system operates without user registration, using RFID cards as the primary access method with optional static QR codes as backup. The system supports VIP locker contracts, staff management panels, and operates offline with minimal maintenance requirements.\r\n\r\n## Requirements\r\n\r\n### Requir",
        "lineCount": 146,
        "isEmpty": false
      }
    },
    ".kiro\\specs\\eform-locker-system\\tasks.md": {
      "primary": "config",
      "confidence": "low",
      "reasons": [
        "Contains config keywords: configuration, config",
        "Contains documentation keywords: # ",
        "Contains build keywords: build"
      ],
      "alternatives": [
        "documentation",
        "build"
      ],
      "metadata": {
        "path": ".kiro\\specs\\eform-locker-system\\tasks.md",
        "size": 17859,
        "modified": "2025-08-22T15:18:49.696Z",
        "extension": ".md",
        "basename": "tasks.md",
        "directory": ".kiro\\specs\\eform-locker-system",
        "content": "# Implementation Plan\r\n\r\n- [x] 0. Provisioning and configuration distribution\r\n\r\n\r\n  - [x] 0.1 Create kiosk provisioning system\r\n\r\n    - Build initial registration flow with secret generation and QR/one-time code panel binding\r\n    - Implement clean rollback mechanism for failed provisioning attempts\r\n    - Add kiosk identity validation and secure enrollment process\r\n    - _Requirements: 10.1_\r\n\r\n  - [x] 0.2 Implement configuration distribution system\r\n\r\n    - Create config push mechanism to kio",
        "lineCount": 397,
        "isEmpty": false
      }
    },
    ".kiro\\specs\\kiosk-ui-overhaul\\tasks.md": {
      "primary": "documentation",
      "confidence": "low",
      "reasons": [
        "Contains documentation keywords: # "
      ],
      "alternatives": [],
      "metadata": {
        "path": ".kiro\\specs\\kiosk-ui-overhaul\\tasks.md",
        "size": 5942,
        "modified": "2025-08-28T18:22:20.963Z",
        "extension": ".md",
        "basename": "tasks.md",
        "directory": ".kiro\\specs\\kiosk-ui-overhaul",
        "content": "# Implementation Plan\r\n\r\n- [x] 1. Create Simplified Kiosk HTML Structure\r\n\r\n  - Replace existing app/kiosk/src/ui/index.html with clean, minimal structure\r\n  - Remove complex overlay systems and background grids\r\n  - Create simple header, main content, and footer layout\r\n  - Add basic meta tags optimized for touch screens and Pi performance\r\n  - _Requirements: 1.1, 1.2, 8.4_\r\n\r\n- [x] 2. Implement Performance-Optimized CSS\r\n\r\n  - Create new app/kiosk/src/ui/static/styles-simple.css\r\n    with Pi-o",
        "lineCount": 157,
        "isEmpty": false
      }
    },
    ".kiro\\specs\\maksisoft-integration\\design.md": {
      "primary": "documentation",
      "confidence": "medium",
      "reasons": [
        "Contains documentation keywords: # , ## ",
        "Contains active keywords: function, interface"
      ],
      "alternatives": [
        "active"
      ],
      "metadata": {
        "path": ".kiro\\specs\\maksisoft-integration\\design.md",
        "size": 7460,
        "modified": "2025-08-28T06:46:05.575Z",
        "extension": ".md",
        "basename": "design.md",
        "directory": ".kiro\\specs\\maksisoft-integration",
        "content": "# Design Document\r\n\r\n## Overview\r\n\r\nThe Maksisoft Integration feature adds RFID-based member search functionality to the admin panel's locker management interface. The design follows a simple client-server architecture where the panel server acts as a proxy to the Maksisoft API, handling authentication and session management while the browser provides the user interface through modal dialogs.\r\n\r\n## Architecture\r\n\r\n### High-Level Flow\r\n```\r\nBrowser → Panel Server → Maksisoft API → Panel Server → ",
        "lineCount": 257,
        "isEmpty": false
      }
    },
    ".kiro\\specs\\maksisoft-integration\\requirements.md": {
      "primary": "documentation",
      "confidence": "low",
      "reasons": [
        "Contains documentation keywords: # , ## ",
        "Contains active keywords: interface"
      ],
      "alternatives": [
        "active"
      ],
      "metadata": {
        "path": ".kiro\\specs\\maksisoft-integration\\requirements.md",
        "size": 5645,
        "modified": "2025-08-28T06:41:55.234Z",
        "extension": ".md",
        "basename": "requirements.md",
        "directory": ".kiro\\specs\\maksisoft-integration",
        "content": "# Requirements Document\r\n\r\n## Introduction\r\n\r\nThe Maksisoft Integration feature enables facility staff to quickly search for member information using RFID cards directly from the admin panel's locker management interface. This integration connects the eForm Locker System with the existing Maksisoft member management system, allowing staff to verify member details, check membership status, and access member profiles without leaving the locker management workflow. The feature is designed to speed ",
        "lineCount": 78,
        "isEmpty": false
      }
    },
    ".kiro\\specs\\maksisoft-integration\\tasks.md": {
      "primary": "active",
      "confidence": "low",
      "reasons": [
        "Contains active keywords: type, var",
        "Contains config keywords: configuration, config",
        "Contains documentation keywords: # "
      ],
      "alternatives": [
        "config",
        "documentation"
      ],
      "metadata": {
        "path": ".kiro\\specs\\maksisoft-integration\\tasks.md",
        "size": 4247,
        "modified": "2025-08-28T07:53:53.762Z",
        "extension": ".md",
        "basename": "tasks.md",
        "directory": ".kiro\\specs\\maksisoft-integration",
        "content": "# Implementation Plan\r\n\r\n- [x] 1. Set up environment configuration and types\r\n\r\n  - Create environment variables: MAKSI_BASE, MAKSI_SEARCH_PATH, MAKSI_CRITERIA_FOR_RFID=0, MAKSI_BOOTSTRAP_COOKIE, MAKSI_ENABLED\r\n  - Define TypeScript types for exact response format: {success:true,hits:[...]} or {success:false,error:'...'}\r\n  - Document criteria=0 for RFID searches throughout implementation\r\n  - _Requirements: 5.1_\r\n\r\n- [x] 2. Implement Maksisoft service layer\r\n\r\n  - [x] 2.1 Create basic Maksisoft",
        "lineCount": 109,
        "isEmpty": false
      }
    },
    ".kiro\\specs\\repository-cleanup-v3\\design.md": {
      "primary": "legacy",
      "confidence": "medium",
      "reasons": [
        "Matches legacy filename pattern",
        "Contains documentation keywords: # , ## ",
        "Contains active keywords: function"
      ],
      "alternatives": [
        "documentation",
        "active"
      ],
      "metadata": {
        "path": ".kiro\\specs\\repository-cleanup-v3\\design.md",
        "size": 8602,
        "modified": "2025-08-28T19:55:06.988Z",
        "extension": ".md",
        "basename": "design.md",
        "directory": ".kiro\\specs\\repository-cleanup-v3",
        "content": "# Design Document\r\n\r\n## Overview\r\n\r\nThis design outlines a systematic approach to cleaning up the eForm Locker System repository by analyzing, categorizing, and organizing files based on their current relevance and purpose. The cleanup will be performed in phases to ensure no critical functionality is lost while achieving a clean, maintainable repository structure.\r\n\r\n## Architecture\r\n\r\n### Cleanup Process Flow\r\n\r\n```mermaid\r\ngraph TD\r\n    A[Repository Analysis] --> B[File Categorization]\r\n    B",
        "lineCount": 248,
        "isEmpty": false
      }
    },
    ".kiro\\specs\\repository-cleanup-v3\\requirements.md": {
      "primary": "documentation",
      "confidence": "medium",
      "reasons": [
        "Contains documentation keywords: # , ## ",
        "Matches legacy filename pattern"
      ],
      "alternatives": [
        "legacy"
      ],
      "metadata": {
        "path": ".kiro\\specs\\repository-cleanup-v3\\requirements.md",
        "size": 4997,
        "modified": "2025-08-28T19:53:32.669Z",
        "extension": ".md",
        "basename": "requirements.md",
        "directory": ".kiro\\specs\\repository-cleanup-v3",
        "content": "# Requirements Document\r\n\r\n## Introduction\r\n\r\nThe eForm Locker System repository has accumulated numerous markdown files, scripts, and artifacts over development iterations. Many of these files are outdated, redundant, or no longer serve a purpose in the current production system. This cleanup initiative aims to organize, consolidate, and remove unnecessary files while preserving essential documentation and operational scripts.\r\n\r\n## Requirements\r\n\r\n### Requirement 1: Documentation Cleanup and O",
        "lineCount": 79,
        "isEmpty": false
      }
    },
    ".kiro\\specs\\repository-cleanup-v3\\tasks.md": {
      "primary": "legacy",
      "confidence": "medium",
      "reasons": [
        "Matches legacy filename pattern",
        "Contains documentation keywords: # , reference",
        "Contains build keywords: build"
      ],
      "alternatives": [
        "documentation",
        "build"
      ],
      "metadata": {
        "path": ".kiro\\specs\\repository-cleanup-v3\\tasks.md",
        "size": 5872,
        "modified": "2025-08-28T20:19:00.391Z",
        "extension": ".md",
        "basename": "tasks.md",
        "directory": ".kiro\\specs\\repository-cleanup-v3",
        "content": "# Implementation Plan\r\n\r\n- [x] 1. Create repository analysis tools\r\n\r\n  - Write file scanner script to inventory all repository files with metadata\r\n  - Implement file categorization logic based on naming patterns and content analysis\r\n  - Create dependency scanner to find file references in codebase\r\n  - Build safety assessment tool to identify files safe for removal\r\n  - _Requirements: 1.1, 2.1, 4.1_\r\n\r\n- [x] 2. Analyze and categorize root-level markdown files\r\n\r\n  - Scan all .md files in repo",
        "lineCount": 141,
        "isEmpty": false
      }
    },
    ".kiro\\specs\\system-modernization-v2\\tasks.md": {
      "primary": "documentation",
      "confidence": "low",
      "reasons": [
        "Contains documentation keywords: # "
      ],
      "alternatives": [],
      "metadata": {
        "path": ".kiro\\specs\\system-modernization-v2\\tasks.md",
        "size": 11905,
        "modified": "2025-08-28T18:22:20.963Z",
        "extension": ".md",
        "basename": "tasks.md",
        "directory": ".kiro\\specs\\system-modernization-v2",
        "content": "# Implementation Plan\r\n\r\n**NOTE: Tasks have been simplified for small business gym locker system. Removed over-engineered features like:**\r\n\r\n- Complex analytics and reporting dashboards\r\n- Advanced filtering and search systems\r\n- Multi-level priority and assignment workflows\r\n- Full WCAG AA compliance (basic accessibility sufficient)\r\n- Enterprise-grade security and audit systems\r\n- Load testing for 100+ kiosks (2-3 kiosks realistic)\r\n- Complex telemetry and monitoring systems\r\n\r\n**Focus: Simpl",
        "lineCount": 298,
        "isEmpty": false
      }
    },
    ".kiro\\steering\\development-environment.md": {
      "primary": "documentation",
      "confidence": "medium",
      "reasons": [
        "Contains documentation keywords: # , ## ",
        "Contains build keywords: build"
      ],
      "alternatives": [
        "build"
      ],
      "metadata": {
        "path": ".kiro\\steering\\development-environment.md",
        "size": 5132,
        "modified": "2025-08-27T20:42:09.528Z",
        "extension": ".md",
        "basename": "development-environment.md",
        "directory": ".kiro\\steering",
        "content": "---\r\ninclusion: always\r\n---\r\n\r\n# Development Environment Context\r\n\r\n## 🏗️ **Project Setup**\r\nThis is an **eForm Locker System** with distributed development:\r\n- **Development**: Windows PC with Kiro AI Assistant\r\n- **Production**: Raspberry Pi with hardware relay control\r\n- **Communication**: SSH, Git, and API testing tools\r\n\r\n## 🖥️ **Development Machine (Windows PC)**\r\n- **OS**: Windows with PowerShell\r\n- **Role**: Code development, building, and Git management\r\n- **Tools Available**:\r\n  - Ki",
        "lineCount": 130,
        "isEmpty": false
      }
    },
    ".kiro\\steering\\maksisoft-spec-help.md": {
      "primary": "active",
      "confidence": "low",
      "reasons": [
        "Contains active keywords: export, type",
        "Contains documentation keywords: # "
      ],
      "alternatives": [
        "documentation"
      ],
      "metadata": {
        "path": ".kiro\\steering\\maksisoft-spec-help.md",
        "size": 9839,
        "modified": "2025-08-28T07:03:58.307Z",
        "extension": ".md",
        "basename": "maksisoft-spec-help.md",
        "directory": ".kiro\\steering",
        "content": "1) Env and minimal types\r\n# panel/.env\r\nMAKSI_BASE=https://eformhatay.maksionline.com\r\nMAKSI_SEARCH_PATH=/react-system/api_php/user_search/users.php\r\nMAKSI_CRITERIA_FOR_RFID=0\r\nMAKSI_BOOTSTRAP_COOKIE=PHPSESSID=...; AC-C=ac-c\r\nMAKSI_ENABLED=true\r\n\r\n// app/panel/src/services/maksi-types.ts\r\nexport type MaksiHit = {\r\n  id:number; name:string; phone:string; type:number;\r\n  sex:string; gsm:string; photo:string;\r\n  checkListDate:string; checkListStatus:string;\r\n  endDate:string; proximity:string; tc:s",
        "lineCount": 288,
        "isEmpty": false
      }
    },
    ".kiro\\steering\\project-development-guide.md": {
      "primary": "documentation",
      "confidence": "medium",
      "reasons": [
        "Contains documentation keywords: # , ## ",
        "Matches documentation filename pattern",
        "Contains active keywords: interface"
      ],
      "alternatives": [
        "documentation",
        "active"
      ],
      "metadata": {
        "path": ".kiro\\steering\\project-development-guide.md",
        "size": 15051,
        "modified": "2025-08-27T20:41:39.036Z",
        "extension": ".md",
        "basename": "project-development-guide.md",
        "directory": ".kiro\\steering",
        "content": "# eForm Locker System - Development Guide\r\n\r\n## 🏗️ **Project Architecture Overview**\r\n\r\nThis is a **distributed eForm Locker System** with hardware relay control:\r\n\r\n### **Services Architecture**\r\n\r\n- **Gateway** (Port 3000): Main API coordinator, handles admin requests\r\n- **Kiosk** (Port 3002): Hardware control service, manages Modbus communication\r\n- **Panel** (Port 3001): Admin web interface, direct relay control\r\n- **Agent** (Optional): Background task processing and automation\r\n\r\n### **Har",
        "lineCount": 526,
        "isEmpty": false
      }
    },
    ".nvmrc": {
      "primary": "active",
      "confidence": "medium",
      "reasons": [
        "Matches active filename pattern",
        "Matches config filename pattern"
      ],
      "alternatives": [
        "config"
      ],
      "metadata": {
        "path": ".nvmrc",
        "size": 4,
        "modified": "2025-08-26T00:03:47.165Z",
        "extension": "",
        "basename": ".nvmrc",
        "directory": ".",
        "content": "20.x",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    ".vscode\\settings.json": {
      "primary": "unknown",
      "confidence": "low",
      "reasons": [
        "No matching patterns or content indicators"
      ],
      "metadata": {
        "path": ".vscode\\settings.json",
        "size": 39,
        "modified": "2025-08-25T00:45:04.199Z",
        "extension": ".json",
        "basename": "settings.json",
        "directory": ".vscode",
        "content": "{\r\n    \"html.autoClosingTags\": false\r\n}",
        "lineCount": 3,
        "isEmpty": false
      }
    },
    "app\\agent\\eform-agent.service": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\agent directory"
      ],
      "metadata": {
        "path": "app\\agent\\eform-agent.service",
        "size": 742,
        "modified": "2025-08-20T20:21:07.134Z",
        "extension": ".service",
        "basename": "eform-agent.service",
        "directory": "app\\agent",
        "content": "[Unit]\r\nDescription=Eform Locker System Update Agent\r\nAfter=network.target\r\nWants=network.target\r\n\r\n[Service]\r\nType=simple\r\nUser=eform\r\nGroup=eform\r\nWorkingDirectory=/opt/eform/app/agent\r\nExecStart=/usr/bin/node dist/index.js\r\nRestart=always\r\nRestartSec=10\r\nStandardOutput=journal\r\nStandardError=journal\r\nSyslogIdentifier=eform-agent\r\n\r\n# Security settings\r\nNoNewPrivileges=true\r\nPrivateTmp=true\r\nProtectSystem=strict\r\nProtectHome=true\r\nReadWritePaths=/opt/eform /tmp/eform-updates\r\nCapabilityBoundin",
        "lineCount": 36,
        "isEmpty": false
      }
    },
    "app\\agent\\jest.config.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\agent directory"
      ],
      "metadata": {
        "path": "app\\agent\\jest.config.js",
        "size": 311,
        "modified": "2025-08-21T18:10:02.083Z",
        "extension": ".js",
        "basename": "jest.config.js",
        "directory": "app\\agent",
        "content": "module.exports = {\r\n  testEnvironment: 'node',\r\n  roots: ['<rootDir>/src'],\r\n  testMatch: ['**/__tests__/**/*.test.js'],\r\n  collectCoverageFrom: [\r\n    'src/**/*.js',\r\n    '!src/**/*.test.js',\r\n    '!src/**/__tests__/**'\r\n  ],\r\n  coverageDirectory: 'coverage',\r\n  coverageReporters: ['text', 'lcov', 'html']\r\n};",
        "lineCount": 12,
        "isEmpty": false
      }
    },
    "app\\agent\\package.json": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\agent directory"
      ],
      "metadata": {
        "path": "app\\agent\\package.json",
        "size": 629,
        "modified": "2025-08-23T14:32:27.867Z",
        "extension": ".json",
        "basename": "package.json",
        "directory": "app\\agent",
        "content": "{\r\n  \"name\": \"eform-agent\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"Eform Locker System Update Agent\",\r\n  \"main\": \"dist/index.js\",\r\n\r\n  \"scripts\": {\r\n    \"build\": \"esbuild src/index.ts --bundle --platform=node --target=es2018 --outfile=dist/index.js --format=cjs --external:sqlite3\",\r\n    \"start\": \"node dist/index.js\",\r\n    \"dev\": \"npm run build && npm start\",\r\n    \"test\": \"jest\"\r\n  },\r\n  \"dependencies\": {\r\n    \"sqlite3\": \"^5.1.6\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/node\": \"^20.0.0\",\r\n  ",
        "lineCount": 25,
        "isEmpty": false
      }
    },
    "app\\agent\\README.md": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\agent directory"
      ],
      "metadata": {
        "path": "app\\agent\\README.md",
        "size": 2481,
        "modified": "2025-08-20T20:21:43.152Z",
        "extension": ".md",
        "basename": "README.md",
        "directory": "app\\agent",
        "content": "# Eform Update Agent\r\n\r\nThe Update Agent handles automatic system updates with security verification for the Eform Locker System.\r\n\r\n## Features\r\n\r\n- **Automatic Updates**: Checks for updates every 30 minutes\r\n- **Security Verification**: \r\n  - SHA256 checksum validation\r\n  - Minisign signature verification\r\n- **Safe Application**: \r\n  - Service stop/start management\r\n  - Automatic backup creation\r\n  - Health verification after updates\r\n  - Automatic rollback on failure\r\n\r\n## Security\r\n\r\nThe upd",
        "lineCount": 98,
        "isEmpty": false
      }
    },
    "app\\agent\\src\\index.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\agent\\src directory"
      ],
      "metadata": {
        "path": "app\\agent\\src\\index.ts",
        "size": 1038,
        "modified": "2025-08-23T14:28:14.837Z",
        "extension": ".ts",
        "basename": "index.ts",
        "directory": "app\\agent\\src",
        "content": "#!/usr/bin/env node\r\n\r\nimport { UpdateAgent } from './services/update-agent';\r\n\r\n/**\r\n * Eform Update Agent\r\n * \r\n * Handles automatic updates with security verification:\r\n * - SHA256 checksum validation\r\n * - Minisign signature verification\r\n * - Automatic rollback on failure\r\n * - 30-minute update check intervals\r\n */\r\n\r\nasync function main() {\r\n  console.log('Starting Eform Update Agent...');\r\n  \r\n  try {\r\n    const updateAgent = new UpdateAgent();\r\n    \r\n    // Start automatic update checkin",
        "lineCount": 44,
        "isEmpty": false
      }
    },
    "app\\agent\\src\\services\\update-agent.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\agent\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\agent\\src\\services\\update-agent.js",
        "size": 122,
        "modified": "2025-08-23T12:53:02.731Z",
        "extension": ".js",
        "basename": "update-agent.js",
        "directory": "app\\agent\\src\\services",
        "content": "\"use strict\";\n\nclass UpdateAgent {\n  constructor() {\n    // Basic implementation\n  }\n}\n\nmodule.exports = { UpdateAgent };\n",
        "lineCount": 10,
        "isEmpty": false
      }
    },
    "app\\agent\\src\\services\\update-agent.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\agent\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\agent\\src\\services\\update-agent.ts",
        "size": 10018,
        "modified": "2025-08-23T14:28:14.845Z",
        "extension": ".ts",
        "basename": "update-agent.ts",
        "directory": "app\\agent\\src\\services",
        "content": "import { createHash } from 'crypto';\r\nimport { promises as fs } from 'fs';\r\nimport * as fsSync from 'fs';\r\nimport { spawn } from 'child_process';\r\nimport * as path from 'path';\r\nimport * as https from 'https';\r\n\r\ninterface UpdatePackage {\r\n  version: string;\r\n  url: string;\r\n  sha256: string;\r\n  signature: string;\r\n}\r\n\r\ninterface UpdateResult {\r\n  success: boolean;\r\n  error?: string;\r\n  rolledBack?: boolean;\r\n}\r\n\r\nclass UpdateAgent {\r\n  private readonly updateDir = '/tmp/eform-updates';\r\n  priva",
        "lineCount": 324,
        "isEmpty": false
      }
    },
    "app\\agent\\src\\services\\__tests__\\update-agent.test.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\agent\\src\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\agent\\src\\services\\__tests__\\update-agent.test.js",
        "size": 4154,
        "modified": "2025-08-21T18:10:53.815Z",
        "extension": ".js",
        "basename": "update-agent.test.js",
        "directory": "app\\agent\\src\\services\\__tests__",
        "content": "const { createHash } = require('crypto');\r\n\r\n// Mock external dependencies\r\njest.mock('fs', () => ({\r\n  promises: {\r\n    mkdir: jest.fn(),\r\n    readFile: jest.fn(),\r\n    writeFile: jest.fn(),\r\n    unlink: jest.fn()\r\n  }\r\n}));\r\n\r\njest.mock('https');\r\njest.mock('child_process');\r\n\r\n// Mock UpdateAgent class for testing\r\nclass MockUpdateAgent {\r\n  constructor() {\r\n    this.updateDir = '/tmp/eform-updates';\r\n    this.backupDir = '/opt/eform/backups';\r\n    this.installDir = '/opt/eform';\r\n    this.pu",
        "lineCount": 143,
        "isEmpty": false
      }
    },
    "app\\agent\\src\\services\\__tests__\\update-agent.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\agent\\src\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\agent\\src\\services\\__tests__\\update-agent.test.ts",
        "size": 9653,
        "modified": "2025-08-23T14:28:14.853Z",
        "extension": ".ts",
        "basename": "update-agent.test.ts",
        "directory": "app\\agent\\src\\services\\__tests__",
        "content": "import { UpdateAgent } from '../update-agent';\r\nimport { promises as fs } from 'fs';\r\nimport { createHash } from 'crypto';\r\nimport * as path from 'path';\r\n\r\n// Mock external dependencies\r\njest.mock('fs', () => ({\r\n  promises: {\r\n    mkdir: jest.fn(),\r\n    readFile: jest.fn(),\r\n    writeFile: jest.fn(),\r\n    unlink: jest.fn()\r\n  }\r\n}));\r\n\r\njest.mock('https');\r\njest.mock('child_process');\r\n\r\ndescribe('UpdateAgent', () => {\r\n  let updateAgent: UpdateAgent;\r\n  const mockFs = fs as jest.Mocked<typeof",
        "lineCount": 261,
        "isEmpty": false
      }
    },
    "app\\agent\\src\\types\\update-types.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\agent\\src\\types directory"
      ],
      "metadata": {
        "path": "app\\agent\\src\\types\\update-types.ts",
        "size": 1147,
        "modified": "2025-08-23T14:28:14.859Z",
        "extension": ".ts",
        "basename": "update-types.ts",
        "directory": "app\\agent\\src\\types",
        "content": "export interface UpdatePackage {\r\n  version: string;\r\n  url: string;\r\n  sha256: string;\r\n  signature: string; // minisign signature\r\n  component: 'gateway' | 'kiosk' | 'panel' | 'agent';\r\n  rollback_threshold?: number; // Percentage of failed deployments to trigger rollback\r\n}\r\n\r\nexport interface UpdateStatus {\r\n  current_version: string;\r\n  available_version?: string;\r\n  status: 'idle' | 'checking' | 'downloading' | 'verifying' | 'applying' | 'rolling_back' | 'failed';\r\n  last_check: Date;\r\n  l",
        "lineCount": 43,
        "isEmpty": false
      }
    },
    "app\\agent\\src\\__tests__\\setup.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\agent\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\agent\\src\\__tests__\\setup.ts",
        "size": 453,
        "modified": "2025-08-23T14:28:14.863Z",
        "extension": ".ts",
        "basename": "setup.ts",
        "directory": "app\\agent\\src\\__tests__",
        "content": "// Global test setup for UpdateAgent tests\r\n\r\n// Mock console methods to reduce noise in tests\r\nglobal.console = {\r\n  ...console,\r\n  log: jest.fn(),\r\n  error: jest.fn(),\r\n  warn: jest.fn(),\r\n  info: jest.fn()\r\n};\r\n\r\n// Mock timers for update interval testing\r\njest.mock('timers', () => ({\r\n  setTimeout: jest.fn(),\r\n  setInterval: jest.fn(),\r\n  clearTimeout: jest.fn(),\r\n  clearInterval: jest.fn()\r\n}));\r\n\r\n// Set test timeout\r\njest.setTimeout(10000);\r\n",
        "lineCount": 22,
        "isEmpty": false
      }
    },
    "app\\agent\\test-build.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\agent directory"
      ],
      "metadata": {
        "path": "app\\agent\\test-build.js",
        "size": 261,
        "modified": "2025-08-20T20:23:06.289Z",
        "extension": ".js",
        "basename": "test-build.js",
        "directory": "app\\agent",
        "content": "// Simple test to verify UpdateAgent can be imported\r\nimport { UpdateAgent } from './src/services/update-agent.ts';\r\n\r\nconsole.log('UpdateAgent imported successfully:', typeof UpdateAgent);\r\nconsole.log('UpdateAgent constructor:', UpdateAgent.constructor.name);",
        "lineCount": 5,
        "isEmpty": false
      }
    },
    "app\\agent\\tsconfig.json": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\agent directory"
      ],
      "metadata": {
        "path": "app\\agent\\tsconfig.json",
        "size": 621,
        "modified": "2025-08-23T14:23:56.821Z",
        "extension": ".json",
        "basename": "tsconfig.json",
        "directory": "app\\agent",
        "content": "{\r\n  \"extends\": \"../../tsconfig.json\",\r\n  \"compilerOptions\": {\r\n    \"outDir\": \"./dist\",\r\n    \"rootDir\": \"./src\",\r\n    \"module\": \"CommonJS\",\r\n    \"target\": \"ES2020\",\r\n    \"composite\": true,\r\n    \"moduleResolution\": \"node\",\r\n    \"allowSyntheticDefaultImports\": true,\r\n    \"esModuleInterop\": true,\r\n    \"strict\": true,\r\n    \"skipLibCheck\": true,\r\n    \"forceConsistentCasingInFileNames\": true,\r\n    \"resolveJsonModule\": true,\r\n    \"declaration\": true,\r\n    \"declarationMap\": true,\r\n    \"sourceMap\": true\r",
        "lineCount": 28,
        "isEmpty": false
      }
    },
    "app\\data\\eform.db": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\data directory"
      ],
      "metadata": {
        "path": "app\\data\\eform.db",
        "size": 4096,
        "modified": "2025-08-25T13:01:50.071Z",
        "extension": ".db",
        "basename": "eform.db",
        "directory": "app\\data",
        "content": "[BINARY FILE]",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "app\\data\\eform.db-shm": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\data directory"
      ],
      "metadata": {
        "path": "app\\data\\eform.db-shm",
        "size": 32768,
        "modified": "2025-08-25T13:01:50.073Z",
        "extension": ".db-shm",
        "basename": "eform.db-shm",
        "directory": "app\\data",
        "content": "[BINARY FILE]",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "app\\data\\eform.db-wal": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\data directory"
      ],
      "metadata": {
        "path": "app\\data\\eform.db-wal",
        "size": 0,
        "modified": "2025-08-25T13:01:50.072Z",
        "extension": ".db-wal",
        "basename": "eform.db-wal",
        "directory": "app\\data",
        "content": "",
        "lineCount": 1,
        "isEmpty": true
      }
    },
    "app\\gateway\\data\\eform.db": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\data directory"
      ],
      "metadata": {
        "path": "app\\gateway\\data\\eform.db",
        "size": 4096,
        "modified": "2025-08-23T15:05:27.237Z",
        "extension": ".db",
        "basename": "eform.db",
        "directory": "app\\gateway\\data",
        "content": "[BINARY FILE]",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "app\\gateway\\data\\eform.db-shm": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\data directory"
      ],
      "metadata": {
        "path": "app\\gateway\\data\\eform.db-shm",
        "size": 32768,
        "modified": "2025-08-28T08:01:42.267Z",
        "extension": ".db-shm",
        "basename": "eform.db-shm",
        "directory": "app\\gateway\\data",
        "content": "[BINARY FILE]",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "app\\gateway\\data\\eform.db-wal": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\data directory"
      ],
      "metadata": {
        "path": "app\\gateway\\data\\eform.db-wal",
        "size": 2002352,
        "modified": "2025-08-26T00:41:53.194Z",
        "extension": ".db-wal",
        "basename": "eform.db-wal",
        "directory": "app\\gateway\\data",
        "content": "[BINARY FILE]",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "app\\gateway\\package.json": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway directory"
      ],
      "metadata": {
        "path": "app\\gateway\\package.json",
        "size": 950,
        "modified": "2025-08-25T12:46:15.448Z",
        "extension": ".json",
        "basename": "package.json",
        "directory": "app\\gateway",
        "content": "{\r\n  \"name\": \"@eform/gateway\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"Eform Locker System - Gateway Service\",\r\n  \"main\": \"dist/index.js\",\r\n  \"type\": \"commonjs\",\r\n  \"scripts\": {\r\n    \"build\": \"esbuild src/index.ts --bundle --platform=node --target=es2018 --outfile=dist/index.js --external:sqlite3 --format=cjs\",\r\n    \"dev\": \"tsx watch src/index.ts\",\r\n    \"start\": \"node dist/index.js\",\r\n    \"test\": \"vitest --run\",\r\n    \"test:watch\": \"vitest\",\r\n    \"provision\": \"tsx src/utils/provision.ts\",\r\n    ",
        "lineCount": 35,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\controllers\\configuration.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\controllers directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\controllers\\configuration.ts",
        "size": 8573,
        "modified": "2025-08-23T14:28:14.881Z",
        "extension": ".ts",
        "basename": "configuration.ts",
        "directory": "app\\gateway\\src\\controllers",
        "content": "import { FastifyRequest, FastifyReply } from 'fastify';\r\nimport { ConfigurationService } from '../services/configuration';\r\nimport { SystemConfig } from '../../../../shared/types/index';\r\n\r\nexport class ConfigurationController {\r\n  private configService: ConfigurationService;\r\n\r\n  constructor() {\r\n    this.configService = new ConfigurationService();\r\n  }\r\n\r\n  /**\r\n   * Get default configuration template\r\n   */\r\n  async getDefaultConfig(request: FastifyRequest, reply: FastifyReply) {\r\n    try {\r\n",
        "lineCount": 308,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\controllers\\provisioning.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\controllers directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\controllers\\provisioning.ts",
        "size": 5920,
        "modified": "2025-08-23T14:28:14.888Z",
        "extension": ".ts",
        "basename": "provisioning.ts",
        "directory": "app\\gateway\\src\\controllers",
        "content": "import { FastifyRequest, FastifyReply } from 'fastify';\r\nimport { ProvisioningService } from '../services/provisioning';\r\nimport { KioskRegistrationRequest } from '../../../../shared/types/index';\r\n\r\nexport class ProvisioningController {\r\n  private provisioningService: ProvisioningService;\r\n\r\n  constructor() {\r\n    this.provisioningService = new ProvisioningService();\r\n  }\r\n\r\n  /**\r\n   * Generate a new provisioning token for a zone\r\n   * POST /api/provisioning/token\r\n   */\r\n  async generateToken",
        "lineCount": 207,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\index.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\index.ts",
        "size": 3676,
        "modified": "2025-08-27T03:38:22.228Z",
        "extension": ".ts",
        "basename": "index.ts",
        "directory": "app\\gateway\\src",
        "content": "// Ensure EFORM_DB_PATH is set before any database imports\nif (!process.env.EFORM_DB_PATH) {\n  const path = require('path');\n  // Resolve to project root from app/gateway/src/\n  const projectRoot = path.resolve(__dirname, '../../..');\n  process.env.EFORM_DB_PATH = path.join(projectRoot, 'data', 'eform.db');\n  console.log(`🔧 Gateway: Set EFORM_DB_PATH to ${process.env.EFORM_DB_PATH}`);\n}\n\nimport Fastify from \"fastify\";\nimport { DatabaseManager } from \"../../../shared/database/database-manager.js",
        "lineCount": 125,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\routes\\admin.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\routes directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\routes\\admin.ts",
        "size": 7011,
        "modified": "2025-08-26T05:41:20.862Z",
        "extension": ".ts",
        "basename": "admin.ts",
        "directory": "app\\gateway\\src\\routes",
        "content": "/**\r\n * Admin Routes for Gateway Service\r\n * Provides administrative locker control endpoints\r\n */\r\n\r\nimport { FastifyInstance, FastifyRequest, FastifyReply } from 'fastify';\r\n\r\ninterface AdminLockerOpenRequest {\r\n  Body: {\r\n    staff_user: string;\r\n    reason?: string;\r\n  };\r\n}\r\n\r\ninterface AdminBulkOpenRequest {\r\n  Body: {\r\n    locker_ids: number[];\r\n    staff_user: string;\r\n    reason?: string;\r\n    exclude_vip?: boolean;\r\n  };\r\n}\r\n\r\nexport async function registerAdminRoutes(fastify: FastifyI",
        "lineCount": 229,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\routes\\configuration.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\routes directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\routes\\configuration.ts",
        "size": 1974,
        "modified": "2025-08-23T14:28:14.891Z",
        "extension": ".ts",
        "basename": "configuration.ts",
        "directory": "app\\gateway\\src\\routes",
        "content": "import { FastifyInstance } from 'fastify';\r\nimport { ConfigurationController } from '../controllers/configuration';\r\n\r\nexport async function configurationRoutes(fastify: FastifyInstance) {\r\n  const configController = new ConfigurationController();\r\n\r\n  // Panel endpoints (staff management interface)\r\n  \r\n  // Get default configuration template\r\n  fastify.get('/default', configController.getDefaultConfig.bind(configController));\r\n  \r\n  // Create new configuration package\r\n  fastify.post('/package",
        "lineCount": 44,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\routes\\heartbeat.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\routes directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\routes\\heartbeat.ts",
        "size": 10134,
        "modified": "2025-08-25T12:46:15.451Z",
        "extension": ".ts",
        "basename": "heartbeat.ts",
        "directory": "app\\gateway\\src\\routes",
        "content": "import { FastifyInstance, FastifyRequest, FastifyReply } from 'fastify';\r\nimport { HeartbeatManager } from '../../../../shared/services/heartbeat-manager';\r\nimport { KioskStatus } from '../../../../src/types/core-entities';\r\n\r\ninterface HeartbeatRequest {\r\n  kiosk_id: string;\r\n  zone: string;\r\n  version: string;\r\n  config_hash?: string;\r\n  hardware_id?: string;\r\n}\r\n\r\ninterface CommandPollRequest {\r\n  kiosk_id: string;\r\n  limit?: number;\r\n}\r\n\r\ninterface CommandCompleteRequest {\r\n  command_id: str",
        "lineCount": 339,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\routes\\provisioning.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\routes directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\routes\\provisioning.ts",
        "size": 2672,
        "modified": "2025-08-23T14:28:14.907Z",
        "extension": ".ts",
        "basename": "provisioning.ts",
        "directory": "app\\gateway\\src\\routes",
        "content": "import { FastifyInstance } from 'fastify';\r\nimport { ProvisioningController } from '../controllers/provisioning';\r\n\r\nexport async function provisioningRoutes(fastify: FastifyInstance) {\r\n  const controller = new ProvisioningController();\r\n\r\n  // Generate provisioning token\r\n  fastify.post('/token', {\r\n    schema: {\r\n      body: {\r\n        type: 'object',\r\n        required: ['zone'],\r\n        properties: {\r\n          zone: { type: 'string', minLength: 1 }\r\n        }\r\n      },\r\n      response: {\r\n",
        "lineCount": 101,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\routes\\__tests__\\heartbeat.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\routes\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\routes\\__tests__\\heartbeat.test.ts",
        "size": 11218,
        "modified": "2025-08-23T14:28:14.917Z",
        "extension": ".ts",
        "basename": "heartbeat.test.ts",
        "directory": "app\\gateway\\src\\routes\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport Fastify, { FastifyInstance } from 'fastify';\r\nimport { heartbeatRoutes } from '../heartbeat';\r\nimport { DatabaseConnection } from '../../../../../shared/database/connection';\r\n\r\n// Mock the database connection\r\nvi.mock('../../../../../shared/database/connection.js', () => ({\r\n  DatabaseConnection: {\r\n    getInstance: vi.fn(() => ({\r\n      initializeSchema: vi.fn(),\r\n      get: vi.fn(),\r\n      all: vi.fn(),\r\n      r",
        "lineCount": 371,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\services\\configuration.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\services\\configuration.ts",
        "size": 13936,
        "modified": "2025-08-23T14:28:14.927Z",
        "extension": ".ts",
        "basename": "configuration.ts",
        "directory": "app\\gateway\\src\\services",
        "content": "import { createHash } from 'crypto';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { DatabaseConnection } from '../../../../shared/database/connection';\r\nimport { \r\n  SystemConfig, \r\n  ConfigurationPackage, \r\n  ConfigurationDeployment, \r\n  KioskConfigStatus \r\n} from '../../../../shared/types/index';\r\n\r\nexport class ConfigurationService {\r\n  private db: DatabaseConnection;\r\n\r\n  constructor() {\r\n    this.db = DatabaseConnection.getInstance();\r\n  }\r\n\r\n  /**\r\n   * Get default system configuration\r\n ",
        "lineCount": 438,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\services\\locker-coordination.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\services\\locker-coordination.ts",
        "size": 8464,
        "modified": "2025-08-23T14:28:14.939Z",
        "extension": ".ts",
        "basename": "locker-coordination.ts",
        "directory": "app\\gateway\\src\\services",
        "content": "import { DatabaseManager } from '../../../shared/database/database-manager';\r\nimport { CommandQueueManager } from '../../../shared/services/command-queue-manager';\r\nimport { EventLogger } from '../../../shared/services/event-logger';\r\n\r\nexport interface BulkOperationResult {\r\n  success: boolean;\r\n  totalLockers: number;\r\n  commandsQueued: number;\r\n  offlineKiosks?: string[];\r\n  warnings?: string[];\r\n  error?: string;\r\n  zone?: string;\r\n}\r\n\r\nexport interface CommandResult {\r\n  success: boolean;\r\n",
        "lineCount": 288,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\services\\provisioning.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\services\\provisioning.ts",
        "size": 8217,
        "modified": "2025-08-23T14:28:14.946Z",
        "extension": ".ts",
        "basename": "provisioning.ts",
        "directory": "app\\gateway\\src\\services",
        "content": "import { randomBytes, createHmac } from 'crypto';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { DatabaseConnection } from '../../../../shared/database/connection';\r\nimport { \r\n  KioskRegistrationRequest, \r\n  KioskRegistrationResponse, \r\n  ProvisioningToken, \r\n  ProvisioningStatus,\r\n  KioskHeartbeat \r\n} from '../../../../shared/types/index';\r\n\r\nexport class ProvisioningService {\r\n  private db: DatabaseConnection;\r\n  private readonly SECRET_KEY = process.env.PROVISIONING_SECRET || 'default-secre",
        "lineCount": 250,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\services\\__tests__\\locker-coordination.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\services\\__tests__\\locker-coordination.test.ts",
        "size": 11527,
        "modified": "2025-08-23T14:28:14.955Z",
        "extension": ".ts",
        "basename": "locker-coordination.test.ts",
        "directory": "app\\gateway\\src\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { LockerCoordinationService } from '../locker-coordination';\r\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\r\nimport { CommandQueueManager } from '../../../../shared/services/command-queue-manager';\r\nimport { EventLogger } from '../../../../shared/services/event-logger';\r\n\r\n// Mock dependencies\r\nvi.mock('../../../../shared/database/database-manager.js');\r\nvi.mock('../../../../shared",
        "lineCount": 347,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\utils\\config-test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\utils directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\utils\\config-test.ts",
        "size": 5271,
        "modified": "2025-08-23T14:28:14.960Z",
        "extension": ".ts",
        "basename": "config-test.ts",
        "directory": "app\\gateway\\src\\utils",
        "content": "#!/usr/bin/env tsx\r\n\r\nimport { DatabaseConnection } from '../database/connection';\r\nimport { ConfigurationService } from '../services/configuration';\r\n\r\nasync function testConfigurationSystem() {\r\n  console.log('🔧 Testing Configuration Distribution System...\\n');\r\n\r\n  try {\r\n    // Initialize database\r\n    const db = DatabaseConnection.getInstance('./data/eform.db');\r\n    await db.initializeSchema();\r\n    \r\n    const configService = new ConfigurationService();\r\n\r\n    // 1. Create a test kiosk\r\n",
        "lineCount": 115,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\utils\\provision.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\utils directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\utils\\provision.ts",
        "size": 2719,
        "modified": "2025-08-23T14:28:14.966Z",
        "extension": ".ts",
        "basename": "provision.ts",
        "directory": "app\\gateway\\src\\utils",
        "content": "#!/usr/bin/env node\r\n\r\nimport { ProvisioningService } from '../services/provisioning';\r\nimport { DatabaseConnection } from '../database/connection';\r\n\r\nasync function main() {\r\n  const args = process.argv.slice(2);\r\n  const command = args[0];\r\n\r\n  if (!command) {\r\n    console.log('Usage: provision <command> [options]');\r\n    console.log('Commands:');\r\n    console.log('  token <zone>     Generate provisioning token for zone');\r\n    console.log('  list             List all kiosks');\r\n    console.l",
        "lineCount": 88,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\__tests__\\failure-scenarios\\system-resilience.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\__tests__\\failure-scenarios directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\__tests__\\failure-scenarios\\system-resilience.test.ts",
        "size": 21714,
        "modified": "2025-08-23T14:28:14.982Z",
        "extension": ".ts",
        "basename": "system-resilience.test.ts",
        "directory": "app\\gateway\\src\\__tests__\\failure-scenarios",
        "content": "/**\r\n * System Resilience Tests - Failure Scenarios\r\n * Tests system behavior under various failure conditions\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\r\nimport { CommandQueueManager } from '../../../../shared/services/command-queue-manager';\r\nimport { LockerStateManager } from '../../../../shared/services/locker-state-manager';\r\nimport { EventLogger } from '../../../../shared",
        "lineCount": 582,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\__tests__\\integration\\database-test.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\__tests__\\integration directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\__tests__\\integration\\database-test.test.ts",
        "size": 1697,
        "modified": "2025-08-23T14:28:14.986Z",
        "extension": ".ts",
        "basename": "database-test.test.ts",
        "directory": "app\\gateway\\src\\__tests__\\integration",
        "content": "import { describe, it, expect, beforeEach, afterEach } from \"vitest\";\r\nimport { DatabaseManager } from \"../../../../../shared/database/database-manager.js\";\r\nimport { HeartbeatManager } from \"../../../../../shared/services/heartbeat-manager.js\";\r\nimport { EventLogger } from \"../../../../../shared/services/event-logger.js\";\r\nimport { EventRepository } from \"../../../../../shared/database/event-repository.js\";\r\n\r\ndescribe(\"Database Setup Test\", () => {\r\n  let dbManager: DatabaseManager;\r\n  let hea",
        "lineCount": 43,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\__tests__\\integration\\full-system-integration.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\__tests__\\integration directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\__tests__\\integration\\full-system-integration.test.ts",
        "size": 19674,
        "modified": "2025-08-23T14:28:14.999Z",
        "extension": ".ts",
        "basename": "full-system-integration.test.ts",
        "directory": "app\\gateway\\src\\__tests__\\integration",
        "content": "import { describe, it, expect, beforeEach, afterEach } from 'vitest';\r\nimport { DatabaseManager } from '../../../../../shared/database/database-manager';\r\nimport { LockerStateManager } from '../../../../../shared/services/locker-state-manager';\r\nimport { CommandQueueManager } from '../../../../../shared/services/command-queue-manager';\r\nimport { HeartbeatManager } from '../../../../../shared/services/heartbeat-manager';\r\nimport { EventLogger } from '../../../../../shared/services/event-logger';\r",
        "lineCount": 538,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\__tests__\\integration\\multi-room-coordination.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\__tests__\\integration directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\__tests__\\integration\\multi-room-coordination.test.ts",
        "size": 22056,
        "modified": "2025-08-23T14:28:15.015Z",
        "extension": ".ts",
        "basename": "multi-room-coordination.test.ts",
        "directory": "app\\gateway\\src\\__tests__\\integration",
        "content": "import { describe, it, expect, beforeEach, afterEach } from \"vitest\";\r\nimport { DatabaseManager } from \"../../../../../shared/database/database-manager.js\";\r\nimport { LockerCoordinationService } from \"../../services/locker-coordination.js\";\r\nimport { CommandQueueManager } from \"../../../../../shared/services/command-queue-manager.js\";\r\nimport { HeartbeatManager } from \"../../../../../shared/services/heartbeat-manager.js\";\r\nimport { EventLogger } from \"../../../../../shared/services/event-logger.",
        "lineCount": 596,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\__tests__\\integration\\multi-service-integration.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\__tests__\\integration directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\__tests__\\integration\\multi-service-integration.test.ts",
        "size": 18099,
        "modified": "2025-08-23T14:28:15.025Z",
        "extension": ".ts",
        "basename": "multi-service-integration.test.ts",
        "directory": "app\\gateway\\src\\__tests__\\integration",
        "content": "/**\r\n * Multi-Service Integration Tests\r\n * Tests communication and coordination between Gateway, Kiosk, and Panel services\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, afterEach } from 'vitest';\r\nimport { DatabaseManager } from '../../../../../shared/database/database-manager';\r\nimport { CommandQueueManager } from '../../../../../shared/services/command-queue-manager';\r\nimport { LockerStateManager } from '../../../../../shared/services/locker-state-manager';\r\nimport { EventLogger } from '",
        "lineCount": 442,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\__tests__\\validation\\comprehensive-performance-validation.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\__tests__\\validation directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\__tests__\\validation\\comprehensive-performance-validation.test.ts",
        "size": 24462,
        "modified": "2025-08-23T14:28:15.044Z",
        "extension": ".ts",
        "basename": "comprehensive-performance-validation.test.ts",
        "directory": "app\\gateway\\src\\__tests__\\validation",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { DatabaseManager } from '../../../../../shared/database/database-manager';\r\nimport { LockerRepository } from '../../../../../shared/database/locker-repository';\r\nimport { VipContractRepository } from '../../../../../shared/database/vip-contract-repository';\r\nimport { EventLogger } from '../../../../../shared/services/event-logger';\r\nimport { HeartbeatManager } from '../../../../../shared/services/heartbeat-manager",
        "lineCount": 642,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\__tests__\\validation\\comprehensive-system-validation.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\__tests__\\validation directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\__tests__\\validation\\comprehensive-system-validation.test.ts",
        "size": 28282,
        "modified": "2025-08-23T14:28:15.060Z",
        "extension": ".ts",
        "basename": "comprehensive-system-validation.test.ts",
        "directory": "app\\gateway\\src\\__tests__\\validation",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\r\nimport { LockerStateManager } from '../../../../shared/services/locker-state-manager';\r\nimport { CommandQueueManager } from '../../../../shared/services/command-queue-manager';\r\nimport { EventLogger } from '../../../../shared/services/event-logger';\r\nimport { RateLimiter } from '../../../../shared/services/rate-limiter';\r\nimport { SecurityVal",
        "lineCount": 725,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\__tests__\\validation\\power-interruption-validation.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\__tests__\\validation directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\__tests__\\validation\\power-interruption-validation.test.ts",
        "size": 14045,
        "modified": "2025-08-23T14:28:15.072Z",
        "extension": ".ts",
        "basename": "power-interruption-validation.test.ts",
        "directory": "app\\gateway\\src\\__tests__\\validation",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { DatabaseManager } from '../../../../../shared/database/database-manager';\r\nimport { LockerRepository } from '../../../../../shared/database/locker-repository';\r\nimport { CommandQueueManager } from '../../../../../shared/services/command-queue-manager';\r\nimport { EventLogger } from '../../../../../shared/services/event-logger';\r\nimport { HeartbeatManager } from '../../../../../shared/services/heartbeat-manager';\r\n",
        "lineCount": 365,
        "isEmpty": false
      }
    },
    "app\\gateway\\src\\__tests__\\validation\\system-validation.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\src\\__tests__\\validation directory"
      ],
      "metadata": {
        "path": "app\\gateway\\src\\__tests__\\validation\\system-validation.test.ts",
        "size": 27178,
        "modified": "2025-08-23T14:28:15.090Z",
        "extension": ".ts",
        "basename": "system-validation.test.ts",
        "directory": "app\\gateway\\src\\__tests__\\validation",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\r\nimport { LockerStateManager } from '../../../../shared/services/locker-state-manager';\r\nimport { CommandQueueManager } from '../../../../shared/services/command-queue-manager';\r\nimport { EventLogger } from '../../../../shared/services/event-logger';\r\nimport { RateLimiter } from '../../../../shared/services/rate-limiter';\r\nimport { SecurityVal",
        "lineCount": 701,
        "isEmpty": false
      }
    },
    "app\\gateway\\tsconfig.json": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway directory"
      ],
      "metadata": {
        "path": "app\\gateway\\tsconfig.json",
        "size": 442,
        "modified": "2025-08-23T14:18:34.239Z",
        "extension": ".json",
        "basename": "tsconfig.json",
        "directory": "app\\gateway",
        "content": "{\r\n  \"extends\": \"../../tsconfig.json\",\r\n  \"compilerOptions\": {\r\n    \"outDir\": \"./dist\",\r\n    \"rootDir\": \"./src\",\r\n    \"composite\": true,\r\n    \"baseUrl\": \".\",\r\n    \"paths\": {\r\n      \"../shared/*\": [\"../../shared/*\"],\r\n      \"../../shared/*\": [\"../../shared/*\"]\r\n    }\r\n  },\r\n  \"include\": [\r\n    \"src/**/*\"\r\n  ],\r\n  \"exclude\": [\r\n    \"node_modules\",\r\n    \"dist\",\r\n    \"__tests__\"\r\n  ],\r\n  \"references\": [\r\n    { \"path\": \"../../shared\" }\r\n  ]\r\n}",
        "lineCount": 24,
        "isEmpty": false
      }
    },
    "app\\gateway\\__tests__\\configuration.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\gateway\\__tests__\\configuration.test.ts",
        "size": 10624,
        "modified": "2025-08-23T14:28:15.102Z",
        "extension": ".ts",
        "basename": "configuration.test.ts",
        "directory": "app\\gateway\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport Fastify, { FastifyInstance } from 'fastify';\r\nimport { configurationRoutes } from '../src/routes/configuration';\r\nimport { DatabaseConnection } from '../../../shared/database/connection';\r\n\r\ndescribe('ConfigurationController', () => {\r\n  let app: FastifyInstance;\r\n  let db: DatabaseConnection;\r\n\r\n  beforeEach(async () => {\r\n    // Use in-memory database for testing\r\n    db = DatabaseConnection.getInstance(':memory:",
        "lineCount": 325,
        "isEmpty": false
      }
    },
    "app\\gateway\\__tests__\\provisioning.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\gateway\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\gateway\\__tests__\\provisioning.test.ts",
        "size": 8164,
        "modified": "2025-08-23T14:28:15.118Z",
        "extension": ".ts",
        "basename": "provisioning.test.ts",
        "directory": "app\\gateway\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach } from 'vitest';\r\nimport Fastify, { FastifyInstance } from 'fastify';\r\nimport { provisioningRoutes } from '../src/routes/provisioning';\r\nimport { DatabaseConnection } from '../../../shared/database/connection';\r\nimport { unlinkSync } from 'fs';\r\n\r\ndescribe('ProvisioningController', () => {\r\n  let app: FastifyInstance;\r\n  let db: DatabaseConnection;\r\n  const testDbPath = './test-controller.db';\r\n\r\n  beforeEach(async () => {\r\n    app = Fastify()",
        "lineCount": 267,
        "isEmpty": false
      }
    },
    "app\\kiosk\\data\\eform.db": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\data directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\data\\eform.db",
        "size": 4096,
        "modified": "2025-08-23T14:33:03.882Z",
        "extension": ".db",
        "basename": "eform.db",
        "directory": "app\\kiosk\\data",
        "content": "[BINARY FILE]",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "app\\kiosk\\data\\eform.db-shm": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\data directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\data\\eform.db-shm",
        "size": 32768,
        "modified": "2025-08-27T18:00:24.531Z",
        "extension": ".db-shm",
        "basename": "eform.db-shm",
        "directory": "app\\kiosk\\data",
        "content": "[BINARY FILE]",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "app\\kiosk\\data\\eform.db-wal": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\data directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\data\\eform.db-wal",
        "size": 0,
        "modified": "2025-08-23T14:33:03.886Z",
        "extension": ".db-wal",
        "basename": "eform.db-wal",
        "directory": "app\\kiosk\\data",
        "content": "",
        "lineCount": 1,
        "isEmpty": true
      }
    },
    "app\\kiosk\\package.json": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\package.json",
        "size": 1338,
        "modified": "2025-08-26T19:57:26.100Z",
        "extension": ".json",
        "basename": "package.json",
        "directory": "app\\kiosk",
        "content": "{\r\n  \"name\": \"@eform/kiosk\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"Eform Locker System - Kiosk Service\",\r\n  \"main\": \"dist/index.js\",\r\n  \"type\": \"commonjs\",\r\n  \"scripts\": {\r\n    \"build\": \"esbuild src/index.ts --bundle --platform=node --target=es2018 --outfile=dist/index.js --external:sqlite3 --external:serialport --external:node-hid --external:@fastify/static --format=cjs && node -e \\\"const fs=require('fs');const path=require('path');function copyDir(src,dest){if(!fs.existsSync(dest))fs.mkdir",
        "lineCount": 32,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\controllers\\i18n-controller.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\controllers directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\controllers\\i18n-controller.ts",
        "size": 2337,
        "modified": "2025-08-23T14:28:15.141Z",
        "extension": ".ts",
        "basename": "i18n-controller.ts",
        "directory": "app\\kiosk\\src\\controllers",
        "content": "import { FastifyInstance, FastifyRequest, FastifyReply } from 'fastify';\r\nimport { i18nService, SupportedLanguage } from '../../../../shared/services/i18n-service';\r\n\r\ninterface LanguageRequest {\r\n  Body: {\r\n    language: SupportedLanguage;\r\n  };\r\n}\r\n\r\nexport class KioskI18nController {\r\n  constructor(private fastify: FastifyInstance) {}\r\n\r\n  /**\r\n   * Register kiosk i18n routes\r\n   */\r\n  async registerRoutes(): Promise<void> {\r\n    // Get current language and kiosk messages\r\n    this.fastify.ge",
        "lineCount": 77,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\controllers\\qr-handler.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\controllers directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\controllers\\qr-handler.ts",
        "size": 22724,
        "modified": "2025-08-27T22:00:25.548Z",
        "extension": ".ts",
        "basename": "qr-handler.ts",
        "directory": "app\\kiosk\\src\\controllers",
        "content": "import { FastifyRequest, FastifyReply } from 'fastify';\r\nimport { randomBytes, createHmac } from 'crypto';\r\nimport { LockerStateManager } from '../../../../shared/services/locker-state-manager';\r\nimport { LockerNamingService } from '../../../../shared/services/locker-naming-service';\r\nimport { ModbusController } from '../hardware/modbus-controller';\r\nimport { QrResponse, QrActionToken, EventType } from '../../../../shared/types/core-entities';\r\nimport { RateLimiter } from '../services/rate-limit",
        "lineCount": 748,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\controllers\\session-manager.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\controllers directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\controllers\\session-manager.ts",
        "size": 13612,
        "modified": "2025-08-27T04:38:47.438Z",
        "extension": ".ts",
        "basename": "session-manager.ts",
        "directory": "app\\kiosk\\src\\controllers",
        "content": "/**\n * Session Manager for Kiosk RFID Sessions\n * Implements requirements 1.1, 1.2, 1.4, 1.5 for session management\n * \n * Features:\n * - 20-second countdown timer with LARGE badge display\n * - One-session-per-kiosk rule with session cancellation\n * - Session cleanup and timeout handling\n * - Turkish language support for messages\n * - Performance monitoring integration (Requirements 8.1-8.4)\n */\n\nimport { EventEmitter } from 'events';\n\nexport interface RfidSession {\n  id: string;\n  kioskId: stri",
        "lineCount": 477,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\controllers\\ui-controller.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\controllers directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\controllers\\ui-controller.ts",
        "size": 44841,
        "modified": "2025-08-27T21:59:11.204Z",
        "extension": ".ts",
        "basename": "ui-controller.ts",
        "directory": "app\\kiosk\\src\\controllers",
        "content": "import { FastifyInstance, FastifyRequest, FastifyReply } from 'fastify';\nimport { readFile } from 'fs/promises';\nimport { join } from 'path';\nimport { LockerStateManager } from '../../../../shared/services/locker-state-manager';\nimport { LockerNamingService } from '../../../../shared/services/locker-naming-service';\nimport { ModbusController } from '../hardware/modbus-controller';\nimport { SessionManager } from './session-manager';\n\nexport class UiController {\n  private lockerStateManager: Locke",
        "lineCount": 1323,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\controllers\\__tests__\\i18n-controller.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\controllers\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\controllers\\__tests__\\i18n-controller.test.ts",
        "size": 8776,
        "modified": "2025-08-23T14:28:15.191Z",
        "extension": ".ts",
        "basename": "i18n-controller.test.ts",
        "directory": "app\\kiosk\\src\\controllers\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi } from 'vitest';\r\nimport Fastify, { FastifyInstance } from 'fastify';\r\nimport { KioskI18nController } from '../i18n-controller';\r\n\r\ndescribe('KioskI18nController', () => {\r\n  let fastify: FastifyInstance;\r\n  let controller: KioskI18nController;\r\n\r\n  beforeEach(async () => {\r\n    fastify = Fastify({ logger: false });\r\n    controller = new KioskI18nController(fastify);\r\n    await controller.registerRoutes();\r\n    await fastify.ready();\r\n  });\r\n\r\n  afte",
        "lineCount": 287,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\controllers\\__tests__\\qr-handler-vip.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\controllers\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\controllers\\__tests__\\qr-handler-vip.test.ts",
        "size": 9008,
        "modified": "2025-08-23T14:28:15.201Z",
        "extension": ".ts",
        "basename": "qr-handler-vip.test.ts",
        "directory": "app\\kiosk\\src\\controllers\\__tests__",
        "content": "/**\r\n * VIP Locker Handling Tests for QR Handler\r\n * Tests that VIP lockers are properly handled in QR operations\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, vi } from 'vitest';\r\nimport { QrHandler } from '../qr-handler';\r\nimport { LockerStateManager } from '../../../../../shared/services/locker-state-manager';\r\nimport { ModbusController } from '../../hardware/modbus-controller';\r\n\r\n// Mock dependencies\r\nvi.mock('../../../../../shared/services/locker-state-manager.js');\r\nvi.mock('../../ha",
        "lineCount": 286,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\controllers\\__tests__\\qr-handler.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\controllers\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\controllers\\__tests__\\qr-handler.test.ts",
        "size": 12079,
        "modified": "2025-08-23T14:28:15.210Z",
        "extension": ".ts",
        "basename": "qr-handler.test.ts",
        "directory": "app\\kiosk\\src\\controllers\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { QrHandler } from '../qr-handler';\r\nimport { RateLimiter } from '../../services/rate-limiter';\r\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\r\nimport { LockerStateManager } from '../../../../shared/services/locker-state-manager';\r\nimport { EventLogger } from '../../../../shared/services/event-logger';\r\n\r\n// Mock dependencies\r\nvi.mock('../../services/rate-limiter.js');\r\nvi.mock('..",
        "lineCount": 388,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\controllers\\__tests__\\session-manager.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\controllers\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\controllers\\__tests__\\session-manager.test.ts",
        "size": 8749,
        "modified": "2025-08-27T03:38:22.229Z",
        "extension": ".ts",
        "basename": "session-manager.test.ts",
        "directory": "app\\kiosk\\src\\controllers\\__tests__",
        "content": "/**\n * Tests for SessionManager\n * Verifies session creation, timeout, cancellation, and cleanup functionality\n */\n\nimport { SessionManager, RfidSession } from '../session-manager';\n\ndescribe('SessionManager', () => {\n  let sessionManager: SessionManager;\n\n  beforeEach(() => {\n    sessionManager = new SessionManager({\n      defaultTimeoutSeconds: 2, // Short timeout for testing\n      cleanupIntervalMs: 1000,\n      maxSessionsPerKiosk: 1\n    });\n  });\n\n  afterEach(() => {\n    sessionManager.shutd",
        "lineCount": 245,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\controllers\\__tests__\\ui-controller-enhanced.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\controllers\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\controllers\\__tests__\\ui-controller-enhanced.test.ts",
        "size": 8979,
        "modified": "2025-08-27T03:38:22.230Z",
        "extension": ".ts",
        "basename": "ui-controller-enhanced.test.ts",
        "directory": "app\\kiosk\\src\\controllers\\__tests__",
        "content": "import { UiController } from '../ui-controller';\nimport { LockerStateManager } from '../../../../../shared/services/locker-state-manager';\nimport { ModbusController } from '../../hardware/modbus-controller';\n\n// Mock dependencies\njest.mock('../../../../../shared/services/locker-state-manager');\njest.mock('../../hardware/modbus-controller');\n\ndescribe('UiController Enhanced Feedback (Task 6)', () => {\n  let uiController: UiController;\n  let mockLockerStateManager: jest.Mocked<LockerStateManager>;",
        "lineCount": 295,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\hardware\\modbus-controller.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\hardware directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\hardware\\modbus-controller.ts",
        "size": 39033,
        "modified": "2025-08-27T04:55:37.958Z",
        "extension": ".ts",
        "basename": "modbus-controller.ts",
        "directory": "app\\kiosk\\src\\hardware",
        "content": "/**\r\n * Modbus Controller for Eform Locker System\r\n * Handles relay control with serial execution and command queuing\r\n * Requirements: 7.1, 7.2, 7.6\r\n */\r\n\r\nimport { SerialPort } from 'serialport';\r\nimport { EventEmitter } from 'events';\r\n\r\nexport interface ModbusConfig {\r\n  port: string;\r\n  baudrate: number;\r\n  timeout_ms: number;\r\n  pulse_duration_ms: number;\r\n  burst_duration_seconds: number;\r\n  burst_interval_ms: number;\r\n  command_interval_ms: number;\r\n  max_retries?: number;\r\n  retry_dela",
        "lineCount": 1137,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\hardware\\rfid-handler.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\hardware directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\hardware\\rfid-handler.ts",
        "size": 8781,
        "modified": "2025-08-23T14:31:17.909Z",
        "extension": ".ts",
        "basename": "rfid-handler.ts",
        "directory": "app\\kiosk\\src\\hardware",
        "content": "/**\r\n * RFID Handler for Eform Locker System\r\n * Supports both node-hid and HID keyboard input modes\r\n * Implements card scanning with debouncing and UID standardization\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { createHash } from 'crypto';\r\n// @ts-ignore\r\nimport HID from 'node-hid';\r\n\r\nexport interface RfidConfig {\r\n  reader_type: 'hid' | 'keyboard';\r\n  debounce_ms: number;\r\n  vendor_id?: number;\r\n  product_id?: number;\r\n  device_path?: string;\r\n}\r\n\r\nexport interface RfidScanEvent",
        "lineCount": 324,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\hardware\\rs485-diagnostics.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\hardware directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\hardware\\rs485-diagnostics.ts",
        "size": 21956,
        "modified": "2025-08-23T14:28:15.255Z",
        "extension": ".ts",
        "basename": "rs485-diagnostics.ts",
        "directory": "app\\kiosk\\src\\hardware",
        "content": "/**\r\n * RS485 Diagnostic Tools for Eform Locker System\r\n * Provides bus scanning, line validation, and troubleshooting capabilities\r\n * Requirements: 7.7, 10.5\r\n */\r\n\r\nimport { SerialPort } from 'serialport';\r\nimport { EventEmitter } from 'events';\r\n\r\nexport interface RS485Config {\r\n  port: string;\r\n  baudrate: number;\r\n  timeout_ms: number;\r\n  scan_timeout_ms?: number;\r\n  termination_test_voltage?: number;\r\n  failsafe_test_voltage?: number;\r\n}\r\n\r\nexport interface SlaveDevice {\r\n  address: numbe",
        "lineCount": 685,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\hardware\\__tests__\\modbus-controller.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\hardware\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\hardware\\__tests__\\modbus-controller.test.ts",
        "size": 15774,
        "modified": "2025-08-23T14:28:15.266Z",
        "extension": ".ts",
        "basename": "modbus-controller.test.ts",
        "directory": "app\\kiosk\\src\\hardware\\__tests__",
        "content": "/**\r\n * Unit tests for ModbusController\r\n * Tests serial execution, pulse timing, burst opening, and command queuing\r\n */\r\n\r\nimport { describe, it, expect, vi, beforeEach, afterEach } from 'vitest';\r\nimport { ModbusController, ModbusConfig, RelayCommand } from '../modbus-controller';\r\n\r\n// Mock SerialPort\r\nconst mockSerialPort = {\r\n  isOpen: true,\r\n  open: vi.fn(),\r\n  write: vi.fn(),\r\n  close: vi.fn()\r\n};\r\n\r\nvi.mock('serialport', () => ({\r\n  SerialPort: vi.fn().mockImplementation(() => mockSeria",
        "lineCount": 466,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\hardware\\__tests__\\modbus-error-handling.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\hardware\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\hardware\\__tests__\\modbus-error-handling.test.ts",
        "size": 12132,
        "modified": "2025-08-23T14:28:15.279Z",
        "extension": ".ts",
        "basename": "modbus-error-handling.test.ts",
        "directory": "app\\kiosk\\src\\hardware\\__tests__",
        "content": "/**\r\n * Unit tests for ModbusController error handling and retry logic\r\n * Tests connection error handling, exponential backoff, and health monitoring\r\n */\r\n\r\nimport { describe, it, expect, vi, beforeEach, afterEach } from 'vitest';\r\nimport { ModbusController, ModbusConfig } from '../modbus-controller';\r\n\r\n// Mock SerialPort\r\nconst mockSerialPort = {\r\n  isOpen: true,\r\n  open: vi.fn(),\r\n  write: vi.fn(),\r\n  close: vi.fn()\r\n};\r\n\r\nvi.mock('serialport', () => ({\r\n  SerialPort: vi.fn().mockImplementa",
        "lineCount": 370,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\hardware\\__tests__\\rfid-handler.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\hardware\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\hardware\\__tests__\\rfid-handler.test.ts",
        "size": 13803,
        "modified": "2025-08-23T14:28:15.291Z",
        "extension": ".ts",
        "basename": "rfid-handler.test.ts",
        "directory": "app\\kiosk\\src\\hardware\\__tests__",
        "content": "/**\r\n * Tests for RFID Handler\r\n * Covers both HID and keyboard input modes with debouncing and standardization\r\n */\r\n\r\nimport { describe, it, expect, vi, beforeEach, afterEach } from 'vitest';\r\nimport { EventEmitter } from 'events';\r\nimport { RfidHandler, RfidConfig } from '../rfid-handler';\r\n\r\n// Mock node-hid\r\nconst mockHidDevice = {\r\n  on: vi.fn(),\r\n  close: vi.fn(),\r\n  write: vi.fn(),\r\n  read: vi.fn()\r\n};\r\n\r\nconst mockHidDevices = [\r\n  {\r\n    vendorId: 0x08ff,\r\n    productId: 0x0009,\r\n    p",
        "lineCount": 450,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\hardware\\__tests__\\rs485-diagnostics.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\hardware\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\hardware\\__tests__\\rs485-diagnostics.test.ts",
        "size": 15643,
        "modified": "2025-08-23T14:28:15.302Z",
        "extension": ".ts",
        "basename": "rs485-diagnostics.test.ts",
        "directory": "app\\kiosk\\src\\hardware\\__tests__",
        "content": "/**\r\n * Unit tests for RS485 Diagnostics\r\n * Tests bus scanning, line validation, and diagnostic reporting\r\n */\r\n\r\nimport { describe, it, expect, vi, beforeEach, afterEach } from 'vitest';\r\nimport { RS485Diagnostics, RS485Config } from '../rs485-diagnostics';\r\n\r\n// Mock SerialPort\r\nconst mockSerialPort = {\r\n  isOpen: true,\r\n  open: vi.fn(),\r\n  write: vi.fn(),\r\n  close: vi.fn(),\r\n  on: vi.fn(),\r\n  removeListener: vi.fn()\r\n};\r\n\r\nvi.mock('serialport', () => ({\r\n  SerialPort: vi.fn().mockImplementat",
        "lineCount": 441,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\index.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\index.ts",
        "size": 21537,
        "modified": "2025-08-27T22:00:32.881Z",
        "extension": ".ts",
        "basename": "index.ts",
        "directory": "app\\kiosk\\src",
        "content": "// Ensure EFORM_DB_PATH is set before any database imports\nif (!process.env.EFORM_DB_PATH) {\n  const path = require('path');\n  // Resolve to project root from app/kiosk/src/\n  const projectRoot = path.resolve(__dirname, '../../..');\n  process.env.EFORM_DB_PATH = path.join(projectRoot, 'data', 'eform.db');\n  console.log(`🔧 Kiosk: Set EFORM_DB_PATH to ${process.env.EFORM_DB_PATH}`);\n}\n\nimport Fastify from \"fastify\";\nimport { LockerStateManager } from \"../../../shared/services/locker-state-manager",
        "lineCount": 697,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\middleware\\security-middleware.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\middleware directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\middleware\\security-middleware.ts",
        "size": 9025,
        "modified": "2025-08-23T14:28:15.315Z",
        "extension": ".ts",
        "basename": "security-middleware.ts",
        "directory": "app\\kiosk\\src\\middleware",
        "content": "import { FastifyRequest, FastifyReply } from 'fastify';\r\n\r\nexport interface KioskSecurityConfig {\r\n  csp: {\r\n    defaultSrc: string[];\r\n    scriptSrc: string[];\r\n    styleSrc: string[];\r\n    imgSrc: string[];\r\n    connectSrc: string[];\r\n    fontSrc: string[];\r\n    objectSrc: string[];\r\n    mediaSrc: string[];\r\n    frameSrc: string[];\r\n  };\r\n  referrerPolicy: string;\r\n  xFrameOptions: string;\r\n  xContentTypeOptions: boolean;\r\n  xXssProtection: boolean;\r\n}\r\n\r\nconst DEFAULT_KIOSK_SECURITY_CONFIG: K",
        "lineCount": 326,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\middleware\\__tests__\\security-middleware.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\middleware\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\middleware\\__tests__\\security-middleware.test.ts",
        "size": 6096,
        "modified": "2025-08-23T14:28:15.322Z",
        "extension": ".ts",
        "basename": "security-middleware.test.ts",
        "directory": "app\\kiosk\\src\\middleware\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi } from 'vitest';\r\nimport { securityMiddleware } from '../security-middleware';\r\nimport { FastifyRequest, FastifyReply } from 'fastify';\r\n\r\ndescribe('Security Middleware', () => {\r\n  let mockRequest: Partial<FastifyRequest>;\r\n  let mockReply: Partial<FastifyReply>;\r\n  let mockNext: ReturnType<typeof vi.fn>;\r\n\r\n  beforeEach(() => {\r\n    mockRequest = {\r\n      headers: {},\r\n      ip: '192.168.1.100',\r\n      url: '/test'\r\n    };\r\n    \r\n    mockReply = {\r",
        "lineCount": 208,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\services\\heartbeat-client.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\services\\heartbeat-client.ts",
        "size": 13257,
        "modified": "2025-08-25T14:44:48.093Z",
        "extension": ".ts",
        "basename": "heartbeat-client.ts",
        "directory": "app\\kiosk\\src\\services",
        "content": "import { EventType, Command } from '../../../../src/types/core-entities';\r\n\r\nexport interface HeartbeatConfig {\r\n  gatewayUrl: string;\r\n  kioskId: string;\r\n  zone: string;\r\n  version: string;\r\n  heartbeatIntervalMs: number; // Default: 10000 (10 seconds)\r\n  pollIntervalMs: number;      // Default: 2000 (2 seconds)\r\n  maxRetries: number;          // Default: 3\r\n  retryDelayMs: number;        // Default: 5000 (5 seconds)\r\n}\r\n\r\nexport interface CommandHandler {\r\n  (command: Command): Promise<{ succ",
        "lineCount": 456,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\services\\rate-limiter.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\services\\rate-limiter.ts",
        "size": 3208,
        "modified": "2025-08-23T14:28:15.341Z",
        "extension": ".ts",
        "basename": "rate-limiter.ts",
        "directory": "app\\kiosk\\src\\services",
        "content": "import { RateLimiter as SharedRateLimiter, createRateLimiter } from '../../../../shared/services/rate-limiter';\r\nimport { EventRepository } from '../../../../shared/database/event-repository';\r\n\r\nexport interface RateLimitConfig {\r\n  ip: { maxTokens: number; refillRate: number }; // 30/min\r\n  locker: { maxTokens: number; refillRate: number }; // 6/min\r\n  device: { maxTokens: number; refillRate: number }; // 1/20sec\r\n}\r\n\r\nexport class RateLimiter {\r\n  private sharedRateLimiter: SharedRateLimiter;",
        "lineCount": 114,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\services\\rfid-user-flow.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\services\\rfid-user-flow.ts",
        "size": 13012,
        "modified": "2025-08-27T23:57:57.827Z",
        "extension": ".ts",
        "basename": "rfid-user-flow.ts",
        "directory": "app\\kiosk\\src\\services",
        "content": "/**\n * RFID User Flow Service\n * Handles the complete RFID user journey including card scanning, locker assignment, and release\n * Implements requirements 1.1, 1.2, 1.5 for RFID-based locker access\n */\n\nimport { EventEmitter } from 'events';\nimport { LockerStateManager } from '../../../../shared/services/locker-state-manager';\nimport { LockerNamingService } from '../../../../shared/services/locker-naming-service';\nimport { ModbusController } from '../hardware/modbus-controller';\nimport { Locker,",
        "lineCount": 434,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\services\\__tests__\\heartbeat-client.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\services\\__tests__\\heartbeat-client.test.ts",
        "size": 10990,
        "modified": "2025-08-23T14:28:15.363Z",
        "extension": ".ts",
        "basename": "heartbeat-client.test.ts",
        "directory": "app\\kiosk\\src\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { HeartbeatClient } from '../heartbeat-client';\r\nimport { Command, CommandType } from '../../../../../src/types/core-entities';\r\n\r\n// Mock fetch globally\r\nglobal.fetch = vi.fn();\r\n\r\ndescribe('HeartbeatClient', () => {\r\n  let heartbeatClient: HeartbeatClient;\r\n  let mockFetch: any;\r\n\r\n  beforeEach(() => {\r\n    mockFetch = vi.mocked(fetch);\r\n    mockFetch.mockClear();\r\n\r\n    heartbeatClient = new HeartbeatClient({\r\n ",
        "lineCount": 384,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\services\\__tests__\\rate-limiter.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\services\\__tests__\\rate-limiter.test.ts",
        "size": 10463,
        "modified": "2025-08-23T14:28:15.371Z",
        "extension": ".ts",
        "basename": "rate-limiter.test.ts",
        "directory": "app\\kiosk\\src\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi, afterEach } from 'vitest';\r\nimport { RateLimiter } from '../rate-limiter';\r\n\r\ndescribe('RateLimiter', () => {\r\n  let rateLimiter: RateLimiter;\r\n\r\n  beforeEach(() => {\r\n    rateLimiter = new RateLimiter();\r\n  });\r\n\r\n  afterEach(() => {\r\n    vi.clearAllMocks();\r\n  });\r\n\r\n  describe('IP Rate Limiting (30/min)', () => {\r\n    it('should allow requests within IP rate limit', async () => {\r\n      const ip = '192.168.1.100';\r\n      const lockerId = 1;\r\n    ",
        "lineCount": 305,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\services\\__tests__\\rfid-user-flow-vip.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\services\\__tests__\\rfid-user-flow-vip.test.ts",
        "size": 8307,
        "modified": "2025-08-27T21:57:14.359Z",
        "extension": ".ts",
        "basename": "rfid-user-flow-vip.test.ts",
        "directory": "app\\kiosk\\src\\services\\__tests__",
        "content": "/**\r\n * VIP Locker Handling Tests for RFID User Flow\r\n * Tests that VIP lockers remain Owned after opening and don't get released\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, vi } from 'vitest';\r\nimport { RfidUserFlow } from '../rfid-user-flow';\r\nimport { LockerStateManager } from '../../../../../shared/services/locker-state-manager';\r\nimport { ModbusController } from '../../hardware/modbus-controller';\r\nimport { Locker } from '../../../../../src/types/core-entities';\r\n\r\n// Mock dependenci",
        "lineCount": 242,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\services\\__tests__\\rfid-user-flow.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\services\\__tests__\\rfid-user-flow.test.ts",
        "size": 20639,
        "modified": "2025-08-27T21:57:19.744Z",
        "extension": ".ts",
        "basename": "rfid-user-flow.test.ts",
        "directory": "app\\kiosk\\src\\services\\__tests__",
        "content": "/**\r\n * Tests for RFID User Flow Service\r\n * Covers complete RFID user journeys and business logic\r\n */\r\n\r\nimport { describe, it, expect, vi, beforeEach, afterEach } from 'vitest';\r\nimport { RfidUserFlow, RfidUserFlowConfig } from '../rfid-user-flow';\r\nimport { LockerStateManager } from '../../../../../shared/services/locker-state-manager';\r\nimport { ModbusController } from '../../hardware/modbus-controller';\r\nimport { Locker, RfidScanEvent } from '../../../../../src/types/core-entities';\r\n\r\n// ",
        "lineCount": 593,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\types\\node-hid.d.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\types directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\types\\node-hid.d.ts",
        "size": 962,
        "modified": "2025-08-23T14:30:53.207Z",
        "extension": ".ts",
        "basename": "node-hid.d.ts",
        "directory": "app\\kiosk\\src\\types",
        "content": "declare module 'node-hid' {\r\n  export interface Device {\r\n    vendorId?: number;\r\n    productId?: number;\r\n    path?: string;\r\n    serialNumber?: string;\r\n    manufacturer?: string;\r\n    product?: string;\r\n    release?: number;\r\n    interface?: number;\r\n    usagePage?: number;\r\n    usage?: number;\r\n  }\r\n\r\n  export default class HID {\r\n    constructor(path: string);\r\n    constructor(vid: number, pid: number);\r\n    \r\n    static devices(): Device[];\r\n    static setDriverType(type: string): void;\r\n ",
        "lineCount": 33,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\ui\\index.html": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\ui directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\ui\\index.html",
        "size": 6008,
        "modified": "2025-08-27T21:11:37.073Z",
        "extension": ".html",
        "basename": "index.html",
        "directory": "app\\kiosk\\src\\ui",
        "content": "<!DOCTYPE html>\n<html lang=\"tr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no, maximum-scale=1.0, minimum-scale=1.0\">\n    <title>Eform Locker System</title>\n    <link rel=\"stylesheet\" href=\"/static/styles-simple.css\">\n    \n    <!-- Touch screen optimizations -->\n    <meta name=\"theme-color\" content=\"#4CAF50\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n    <meta name=\"apple-mobile-web-app-status-bar-",
        "lineCount": 134,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\ui\\static\\app-simple.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\ui\\static directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\ui\\static\\app-simple.js",
        "size": 55435,
        "modified": "2025-08-28T00:24:49.009Z",
        "extension": ".js",
        "basename": "app-simple.js",
        "directory": "app\\kiosk\\src\\ui\\static",
        "content": "/**\n * Simplified Kiosk Application - Raspberry Pi Optimized\n * \n * This is a lightweight, performance-optimized kiosk interface designed specifically\n * for Raspberry Pi hardware. It focuses on:\n * - Minimal memory usage and CPU overhead\n * - Simple, reliable card assignment functionality\n * - 30-second session management with clear timeouts\n * - Touch-friendly interface with immediate feedback\n * - Automatic cleanup and memory management\n */\n\nclass SimpleKioskApp {\n    constructor() {\n        ",
        "lineCount": 1575,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\ui\\static\\app.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\ui\\static directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\ui\\static\\app.js",
        "size": 75284,
        "modified": "2025-08-27T23:57:57.832Z",
        "extension": ".js",
        "basename": "app.js",
        "directory": "app\\kiosk\\src\\ui\\static",
        "content": "// Main Kiosk Application\nclass KioskApp {\n    constructor() {\n        this.currentScreen = 'main-screen';\n        this.kioskId = 'kiosk-1';\n        this.currentPin = '';\n        this.pinAttempts = 0;\n        this.maxPinAttempts = 5;\n        this.pinLockoutMinutes = 5;\n        this.isLocked = false;\n        this.lockoutEndTime = null;\n        this.availableLockers = [];\n        this.allLockers = [];\n        this.lastGridSize = 0; // Track grid size to reduce logging\n        this.currentSessionId",
        "lineCount": 2006,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\ui\\static\\i18n.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\ui\\static directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\ui\\static\\i18n.js",
        "size": 15530,
        "modified": "2025-08-27T03:38:22.240Z",
        "extension": ".js",
        "basename": "i18n.js",
        "directory": "app\\kiosk\\src\\ui\\static",
        "content": "// Internationalization system for Kiosk UI\nclass I18n {\n    constructor() {\n        this.currentLanguage = 'tr';\n        this.messages = {\n            kiosk: {},\n            qr: {}\n        };\n        \n        this.init();\n    }\n    \n    async init() {\n        // Load saved language preference\n        const savedLang = localStorage.getItem('kiosk-language');\n        if (savedLang) {\n            this.currentLanguage = savedLang;\n        }\n        \n        // Load messages from server\n        awai",
        "lineCount": 349,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\ui\\static\\package.json": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\ui\\static directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\ui\\static\\package.json",
        "size": 527,
        "modified": "2025-08-27T05:43:35.297Z",
        "extension": ".json",
        "basename": "package.json",
        "directory": "app\\kiosk\\src\\ui\\static",
        "content": "{\r\n  \"name\": \"kiosk-ui-tests\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"Unit tests for simplified kiosk UI\",\r\n  \"scripts\": {\r\n    \"test\": \"jest\",\r\n    \"test:watch\": \"jest --watch\",\r\n    \"test:coverage\": \"jest --coverage\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"jest\": \"^29.0.0\",\r\n    \"jsdom\": \"^22.0.0\"\r\n  },\r\n  \"jest\": {\r\n    \"testEnvironment\": \"jsdom\",\r\n    \"testMatch\": [\r\n      \"**/__tests__/**/*.test.js\"\r\n    ],\r\n    \"collectCoverageFrom\": [\r\n      \"*.js\",\r\n      \"!**/__tests__/**\",\r\n      \"!node",
        "lineCount": 25,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\ui\\static\\performance-tracker.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\ui\\static directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\ui\\static\\performance-tracker.js",
        "size": 10028,
        "modified": "2025-08-27T04:01:11.553Z",
        "extension": ".js",
        "basename": "performance-tracker.js",
        "directory": "app\\kiosk\\src\\ui\\static",
        "content": "/**\n * UI Performance Tracker for Kiosk Interface\n * \n * Tracks UI update latency and reports to performance monitoring system\n * Implements requirements 8.1, 8.4 for UI performance monitoring\n */\n\nclass UIPerformanceTracker {\n  constructor() {\n    this.kioskId = this.getKioskId();\n    this.panelUrl = this.getPanelUrl();\n    this.enabled = true;\n    this.pendingReports = [];\n    this.reportBatchSize = 10;\n    this.reportInterval = 5000; // Report every 5 seconds\n    \n    this.startReportingTimer",
        "lineCount": 345,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\ui\\static\\pi-config.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\ui\\static directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\ui\\static\\pi-config.js",
        "size": 9102,
        "modified": "2025-08-27T03:38:22.242Z",
        "extension": ".js",
        "basename": "pi-config.js",
        "directory": "app\\kiosk\\src\\ui\\static",
        "content": "/**\n * Raspberry Pi Specific Configuration and Optimizations\n * \n * This file contains performance optimizations specifically for Raspberry Pi hardware\n * Automatically detects Pi hardware and applies appropriate optimizations\n */\n\n(function() {\n  'use strict';\n  \n  // Initialize Pi optimizations object\n  window.PI_OPTIMIZATIONS = {\n    enabled: false,\n    detected: false,\n    hardware: {},\n    applied: []\n  };\n  \n  /**\n   * Detect if running on Raspberry Pi\n   */\n  function detectRaspberryPi() ",
        "lineCount": 310,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\ui\\static\\styles-simple.css": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\ui\\static directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\ui\\static\\styles-simple.css",
        "size": 27670,
        "modified": "2025-08-27T05:31:51.427Z",
        "extension": ".css",
        "basename": "styles-simple.css",
        "directory": "app\\kiosk\\src\\ui\\static",
        "content": "/* \r\n * Simplified Kiosk CSS - Raspberry Pi Optimized\r\n * Performance-first design with minimal animations and effects\r\n * Requirements: 1.3, 1.4, 5.1, 8.1, 8.2, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6\r\n */\r\n\r\n/* Pi GPU Hardware Acceleration Setup */\r\nhtml {\r\n    /* Enable hardware acceleration for the entire page */\r\n    transform: translateZ(0);\r\n    -webkit-transform: translateZ(0);\r\n    /* Optimize rendering for Pi GPU */\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale",
        "lineCount": 1227,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\ui\\static\\styles.css": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\ui\\static directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\ui\\static\\styles.css",
        "size": 24997,
        "modified": "2025-08-27T03:59:58.742Z",
        "extension": ".css",
        "basename": "styles.css",
        "directory": "app\\kiosk\\src\\ui\\static",
        "content": "/* Reset and base styles */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nhtml, body {\n    height: 100%;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    background: linear-gradient(135deg, #1e293b 0%, #334155 100%);\n    color: #333;\n    overflow: hidden;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -webkit-touch-callout: none;\n    -webkit-tap-highlight-color: transparen",
        "lineCount": 1269,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\ui\\static\\__tests__\\app-simple.test.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\ui\\static\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\ui\\static\\__tests__\\app-simple.test.js",
        "size": 18242,
        "modified": "2025-08-28T00:25:33.207Z",
        "extension": ".js",
        "basename": "app-simple.test.js",
        "directory": "app\\kiosk\\src\\ui\\static\\__tests__",
        "content": "/**\r\n * Unit Tests for SimpleKioskApp\r\n * Tests the simplified kiosk application functionality\r\n */\r\n\r\n// Mock DOM environment for testing\r\nconst { JSDOM } = require('jsdom');\r\n\r\n// Create a mock DOM environment\r\nconst dom = new JSDOM(`\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Kiosk Test</title>\r\n</head>\r\n<body>\r\n    <div id=\"idle-screen\">\r\n        <div class=\"idle-message\">Kartınızı okutun</div>\r\n    </div>\r\n    <div id=\"session-screen\" style=\"display: none;\">\r\n        <div id=\"locker-grid\"",
        "lineCount": 576,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\__tests__\\e2e\\complete-user-flows.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\__tests__\\e2e directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\__tests__\\e2e\\complete-user-flows.test.ts",
        "size": 15215,
        "modified": "2025-08-23T14:28:15.455Z",
        "extension": ".ts",
        "basename": "complete-user-flows.test.ts",
        "directory": "app\\kiosk\\src\\__tests__\\e2e",
        "content": "/**\r\n * End-to-End Tests for Complete User Flows\r\n * Tests complete user journeys from RFID scan to locker operation\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\r\nimport { LockerStateManager } from '../../../../shared/services/locker-state-manager';\r\nimport { EventLogger } from '../../../../shared/services/event-logger';\r\nimport { RfidUserFlow } from '../../services/rfid-user-flo",
        "lineCount": 417,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\__tests__\\heartbeat-commands-vip.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\__tests__\\heartbeat-commands-vip.test.ts",
        "size": 12529,
        "modified": "2025-08-23T14:28:15.406Z",
        "extension": ".ts",
        "basename": "heartbeat-commands-vip.test.ts",
        "directory": "app\\kiosk\\src\\__tests__",
        "content": "/**\r\n * VIP Locker Handling Tests for Heartbeat Command Handlers\r\n * Tests that VIP lockers are properly handled in heartbeat command execution\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, vi } from 'vitest';\r\nimport { LockerStateManager } from '../../../../shared/services/locker-state-manager';\r\nimport { ModbusController } from '../hardware/modbus-controller';\r\n\r\n// Mock dependencies\r\nvi.mock('../../../../shared/services/locker-state-manager.js');\r\nvi.mock('../hardware/modbus-controller.j",
        "lineCount": 361,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\__tests__\\integration\\rfid-qr-integration.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\__tests__\\integration directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\__tests__\\integration\\rfid-qr-integration.test.ts",
        "size": 15293,
        "modified": "2025-08-23T14:28:15.467Z",
        "extension": ".ts",
        "basename": "rfid-qr-integration.test.ts",
        "directory": "app\\kiosk\\src\\__tests__\\integration",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\r\nimport { LockerStateManager } from '../../../../shared/services/locker-state-manager';\r\nimport { EventLogger } from '../../../../shared/services/event-logger';\r\nimport { RfidUserFlow } from '../../services/rfid-user-flow';\r\nimport { QrHandler } from '../../controllers/qr-handler';\r\nimport { RateLimiter } from '../../services/rate-limiter';\r\n\r",
        "lineCount": 405,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\__tests__\\master-pin.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\__tests__\\master-pin.test.ts",
        "size": 10210,
        "modified": "2025-08-25T12:46:15.456Z",
        "extension": ".ts",
        "basename": "master-pin.test.ts",
        "directory": "app\\kiosk\\src\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi } from 'vitest';\r\nimport { UiController } from '../controllers/ui-controller';\r\nimport { LockerStateManager } from '../../../../shared/services/locker-state-manager';\r\nimport { RfidUserFlow } from '../services/rfid-user-flow';\r\nimport { ModbusController } from '../hardware/modbus-controller';\r\n\r\n// Mock dependencies\r\nvi.mock('../../../../shared/services/locker-state-manager.js');\r\nvi.mock('../services/rfid-user-flow.js');\r\nvi.mock('../hardware/modbus",
        "lineCount": 310,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\__tests__\\qr-security.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\__tests__\\qr-security.test.ts",
        "size": 14849,
        "modified": "2025-08-23T14:28:15.427Z",
        "extension": ".ts",
        "basename": "qr-security.test.ts",
        "directory": "app\\kiosk\\src\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi, afterEach } from 'vitest';\r\nimport { QrHandler } from '../controllers/qr-handler';\r\nimport { LockerStateManager } from '../../../../shared/services/locker-state-manager';\r\nimport { ModbusController } from '../hardware/modbus-controller';\r\nimport { FastifyRequest, FastifyReply } from 'fastify';\r\n\r\n// Mock dependencies\r\nvi.mock('../../../../shared/services/locker-state-manager.js');\r\nvi.mock('../hardware/modbus-controller.js');\r\n\r\ndescribe('QR Securit",
        "lineCount": 435,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\__tests__\\rfid-integration.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\__tests__\\rfid-integration.test.ts",
        "size": 16129,
        "modified": "2025-08-27T21:57:07.764Z",
        "extension": ".ts",
        "basename": "rfid-integration.test.ts",
        "directory": "app\\kiosk\\src\\__tests__",
        "content": "/**\r\n * Integration Tests for RFID System\r\n * Tests the complete RFID user journey from card scan to locker operation\r\n */\r\n\r\nimport { describe, it, expect, vi, beforeEach, afterEach } from 'vitest';\r\nimport { EventEmitter } from 'events';\r\nimport { RfidHandler, RfidConfig } from '../hardware/rfid-handler';\r\nimport { RfidUserFlow, RfidUserFlowConfig } from '../services/rfid-user-flow';\r\nimport { LockerStateManager } from '../../../../shared/services/locker-state-manager';\r\nimport { ModbusControl",
        "lineCount": 419,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\__tests__\\soak\\hardware-endurance.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\__tests__\\soak directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\__tests__\\soak\\hardware-endurance.test.ts",
        "size": 13539,
        "modified": "2025-08-23T14:28:15.479Z",
        "extension": ".ts",
        "basename": "hardware-endurance.test.ts",
        "directory": "app\\kiosk\\src\\__tests__\\soak",
        "content": "/**\r\n * Hardware Soak Testing - 1000-cycle endurance tests\r\n * Tests hardware reliability under extended operation\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { ModbusController } from '../../hardware/modbus-controller';\r\nimport { HardwareSoakTester } from '@shared/services/hardware-soak-tester';\r\nimport { DatabaseManager } from '@shared/database/database-manager';\r\nimport { EventLogger } from '@shared/services/event-logger';\r\nimport { EventRepositor",
        "lineCount": 377,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\__tests__\\soak\\simple-test.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\__tests__\\soak directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\__tests__\\soak\\simple-test.test.ts",
        "size": 169,
        "modified": "2025-08-23T14:28:15.482Z",
        "extension": ".ts",
        "basename": "simple-test.test.ts",
        "directory": "app\\kiosk\\src\\__tests__\\soak",
        "content": "import { describe, it, expect } from 'vitest';\r\n\r\ndescribe('Simple Soak Test', () => {\r\n  it('should run a basic test', () => {\r\n    expect(1 + 1).toBe(2);\r\n  });\r\n});\r\n",
        "lineCount": 8,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\__tests__\\ui-controller.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\__tests__\\ui-controller.test.ts",
        "size": 6549,
        "modified": "2025-08-23T14:28:15.445Z",
        "extension": ".ts",
        "basename": "ui-controller.test.ts",
        "directory": "app\\kiosk\\src\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi } from 'vitest';\r\nimport { UiController } from '../controllers/ui-controller';\r\nimport { LockerStateManager } from '../../../../shared/services/locker-state-manager';\r\nimport { RfidUserFlow } from '../services/rfid-user-flow';\r\nimport { ModbusController } from '../hardware/modbus-controller';\r\n\r\n// Mock dependencies\r\nvi.mock('../../../../shared/services/locker-state-manager.js');\r\nvi.mock('../services/rfid-user-flow.js');\r\nvi.mock('../hardware/modbus",
        "lineCount": 196,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\__tests__\\validation\\actual-hardware-validation.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\__tests__\\validation directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\__tests__\\validation\\actual-hardware-validation.test.ts",
        "size": 20121,
        "modified": "2025-08-23T14:28:15.496Z",
        "extension": ".ts",
        "basename": "actual-hardware-validation.test.ts",
        "directory": "app\\kiosk\\src\\__tests__\\validation",
        "content": "/**\r\n * Actual Hardware Validation Tests\r\n * Tests with real RS485 and RFID hardware when available\r\n * Task 16.4 - Hardware integration validation\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { SerialPort } from 'serialport';\r\nimport { ModbusController } from '../../hardware/modbus-controller';\r\nimport { RfidHandler } from '../../hardware/rfid-handler';\r\nimport { RS485Diagnostics } from '../../hardware/rs485-diagnostics';\r\n\r\n// Environment variables ",
        "lineCount": 571,
        "isEmpty": false
      }
    },
    "app\\kiosk\\src\\__tests__\\validation\\hardware-integration-validation.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk\\src\\__tests__\\validation directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\src\\__tests__\\validation\\hardware-integration-validation.test.ts",
        "size": 17557,
        "modified": "2025-08-23T14:28:15.508Z",
        "extension": ".ts",
        "basename": "hardware-integration-validation.test.ts",
        "directory": "app\\kiosk\\src\\__tests__\\validation",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { ModbusController } from '../../hardware/modbus-controller';\r\nimport { RfidHandler } from '../../hardware/rfid-handler';\r\nimport { RS485Diagnostics } from '../../hardware/rs485-diagnostics';\r\n\r\ndescribe('Hardware Integration Validation', () => {\r\n  let modbusController: ModbusController;\r\n  let rfidHandler: RfidHandler;\r\n  let rs485Diagnostics: RS485Diagnostics;\r\n\r\n  beforeEach(async () => {\r\n    // Use mock imple",
        "lineCount": 492,
        "isEmpty": false
      }
    },
    "app\\kiosk\\tsconfig.json": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\tsconfig.json",
        "size": 921,
        "modified": "2025-08-23T14:31:48.729Z",
        "extension": ".json",
        "basename": "tsconfig.json",
        "directory": "app\\kiosk",
        "content": "{\r\n  \"extends\": \"../../tsconfig.json\",\r\n  \"compilerOptions\": {\r\n    \"target\": \"ES2020\",\r\n    \"module\": \"CommonJS\",\r\n    \"lib\": [\"ES2022\"],\r\n    \"outDir\": \"./dist\",\r\n    \"rootDir\": \"./src\",\r\n    \"strict\": false,\r\n    \"esModuleInterop\": true,\r\n    \"skipLibCheck\": true,\r\n    \"forceConsistentCasingInFileNames\": true,\r\n    \"noImplicitAny\": false,\r\n    \"strictNullChecks\": false,\r\n    \"useUnknownInCatchVariables\": false,\r\n    \"resolveJsonModule\": true,\r\n    \"declaration\": true,\r\n    \"declarationMap\": t",
        "lineCount": 40,
        "isEmpty": false
      }
    },
    "app\\kiosk\\tsconfig.tsbuildinfo": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\tsconfig.tsbuildinfo",
        "size": 56654,
        "modified": "2025-08-25T23:19:52.013Z",
        "extension": ".tsbuildinfo",
        "basename": "tsconfig.tsbuildinfo",
        "directory": "app\\kiosk",
        "content": "{\"fileNames\":[\"../../node_modules/typescript/lib/lib.es5.d.ts\",\"../../node_modules/typescript/lib/lib.es2015.d.ts\",\"../../node_modules/typescript/lib/lib.es2016.d.ts\",\"../../node_modules/typescript/lib/lib.es2017.d.ts\",\"../../node_modules/typescript/lib/lib.es2018.d.ts\",\"../../node_modules/typescript/lib/lib.es2019.d.ts\",\"../../node_modules/typescript/lib/lib.es2020.d.ts\",\"../../node_modules/typescript/lib/lib.es2021.d.ts\",\"../../node_modules/typescript/lib/lib.es2022.d.ts\",\"../../node_modules/t",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "app\\kiosk\\vitest.config.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\kiosk directory"
      ],
      "metadata": {
        "path": "app\\kiosk\\vitest.config.ts",
        "size": 275,
        "modified": "2025-08-23T14:28:15.121Z",
        "extension": ".ts",
        "basename": "vitest.config.ts",
        "directory": "app\\kiosk",
        "content": "import { defineConfig } from 'vitest/config';\r\nimport path from 'path';\r\n\r\nexport default defineConfig({\r\n  test: {\r\n    globals: true,\r\n    environment: 'node',\r\n  },\r\n  resolve: {\r\n    alias: {\r\n      '@shared': path.resolve(__dirname, '../../shared'),\r\n    },\r\n  },\r\n});\r\n",
        "lineCount": 15,
        "isEmpty": false
      }
    },
    "app\\panel\\.env.example": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel directory"
      ],
      "metadata": {
        "path": "app\\panel\\.env.example",
        "size": 1263,
        "modified": "2025-08-28T07:05:06.060Z",
        "extension": ".example",
        "basename": ".env.example",
        "directory": "app\\panel",
        "content": "# Eform Panel Configuration\n\n# Server Configuration\nNODE_ENV=production\nPANEL_PORT=3001\n\n# Security Configuration\nCOOKIE_SECRET=your-secure-cookie-secret-change-this\nHTTPS_ENABLED=false\n\n# Database Configuration\nDATABASE_PATH=./data/eform.db\n\n# Logging\nLOG_LEVEL=info\n\n# Authentication\nSESSION_TIMEOUT=28800\n\n# WebSocket Configuration\nWEBSOCKET_PORT=8080\n\n# Gateway Configuration\nGATEWAY_URL=http://127.0.0.1:3000\n\n# Maksisoft Integration Configuration\nMAKSI_BASE=https://eformhatay.maksionline.com\nM",
        "lineCount": 43,
        "isEmpty": false
      }
    },
    "app\\panel\\config\\system.json": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\config directory"
      ],
      "metadata": {
        "path": "app\\panel\\config\\system.json",
        "size": 5089,
        "modified": "2025-08-22T21:19:37.718Z",
        "extension": ".json",
        "basename": "system.json",
        "directory": "app\\panel\\config",
        "content": "{\r\n  \"system\": {\r\n    \"name\": \"Eform Locker Room System\",\r\n    \"version\": \"1.0.0\",\r\n    \"environment\": \"production\",\r\n    \"location\": \"Locker Room - Raspberry Pi\",\r\n    \"installation_date\": \"2025-08-22\",\r\n    \"hardware_platform\": \"raspberry_pi_4\"\r\n  },\r\n  \"database\": {\r\n    \"path\": \"./data/eform.db\",\r\n    \"wal_mode\": true,\r\n    \"backup_interval_hours\": 6,\r\n    \"retention_days\": 90,\r\n    \"vacuum_interval_hours\": 168,\r\n    \"checkpoint_interval_seconds\": 300\r\n  },\r\n  \"services\": {\r\n    \"gateway\": {",
        "lineCount": 188,
        "isEmpty": false
      }
    },
    "app\\panel\\data\\eform.db": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\data directory"
      ],
      "metadata": {
        "path": "app\\panel\\data\\eform.db",
        "size": 4096,
        "modified": "2025-08-23T17:00:00.218Z",
        "extension": ".db",
        "basename": "eform.db",
        "directory": "app\\panel\\data",
        "content": "[BINARY FILE]",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "app\\panel\\data\\eform.db-shm": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\data directory"
      ],
      "metadata": {
        "path": "app\\panel\\data\\eform.db-shm",
        "size": 32768,
        "modified": "2025-08-25T23:46:51.792Z",
        "extension": ".db-shm",
        "basename": "eform.db-shm",
        "directory": "app\\panel\\data",
        "content": "[BINARY FILE]",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "app\\panel\\data\\eform.db-wal": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\data directory"
      ],
      "metadata": {
        "path": "app\\panel\\data\\eform.db-wal",
        "size": 1001192,
        "modified": "2025-08-24T23:12:13.949Z",
        "extension": ".db-wal",
        "basename": "eform.db-wal",
        "directory": "app\\panel\\data",
        "content": "[BINARY FILE]",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "app\\panel\\frontend\\public\\vite.svg": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\frontend\\public directory"
      ],
      "metadata": {
        "path": "app\\panel\\frontend\\public\\vite.svg",
        "size": 1497,
        "modified": "2025-08-24T13:54:14.735Z",
        "extension": ".svg",
        "basename": "vite.svg",
        "directory": "app\\panel\\frontend\\public",
        "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\" role=\"img\" class=\"iconify iconify--logos\" width=\"31.88\" height=\"32\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 256 257\"><defs><linearGradient id=\"IconifyId1813088fe1fbc01fb466\" x1=\"-.828%\" x2=\"57.636%\" y1=\"7.652%\" y2=\"78.411%\"><stop offset=\"0%\" stop-color=\"#41D1FF\"></stop><stop offset=\"100%\" stop-color=\"#BD34FE\"></stop></linearGradient><linearGradient id=\"IconifyId1813088fe1fbc01fb467\" x1=",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "app\\panel\\frontend\\tsconfig.app.tsbuildinfo": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\frontend directory"
      ],
      "metadata": {
        "path": "app\\panel\\frontend\\tsconfig.app.tsbuildinfo",
        "size": 2237,
        "modified": "2025-08-25T00:45:24.994Z",
        "extension": ".tsbuildinfo",
        "basename": "tsconfig.app.tsbuildinfo",
        "directory": "app\\panel\\frontend",
        "content": "{\"root\":[\"./src/app.tsx\",\"./src/main.tsx\",\"./src/test-api-integration.ts\",\"./src/vite-env.d.ts\",\"./src/components/error-boundary.tsx\",\"./src/components/help-request-counter.tsx\",\"./src/components/help-request-filters-simple.tsx\",\"./src/components/help-request-list-simple.tsx\",\"./src/components/help-statistics-simple.tsx\",\"./src/components/language-selector.tsx\",\"./src/components/loading.tsx\",\"./src/components/locker-detail-modal.tsx\",\"./src/components/locker-grid.tsx\",\"./src/components/protected",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "app\\panel\\package.json": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel directory"
      ],
      "metadata": {
        "path": "app\\panel\\package.json",
        "size": 1634,
        "modified": "2025-08-28T08:43:20.929Z",
        "extension": ".json",
        "basename": "package.json",
        "directory": "app\\panel",
        "content": "{\r\n  \"name\": \"@eform/panel\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"Eform Locker System - Management Panel\",\r\n  \"main\": \"dist/index.js\",\r\n  \"type\": \"commonjs\",\r\n  \"scripts\": {\r\n    \"build\": \"esbuild src/index.ts --bundle --platform=node --target=node20 --outfile=dist/index.js --external:sqlite3 --external:@mapbox/node-pre-gyp --external:mock-aws-s3 --external:aws-sdk --external:nock --external:argon2 --external:serialport --external:modbus-serial --format=cjs --minify=false && node -e \\\"const",
        "lineCount": 37,
        "isEmpty": false
      }
    },
    "app\\panel\\public\\assets\\index-CH19RiHT.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\public\\assets directory"
      ],
      "metadata": {
        "path": "app\\panel\\public\\assets\\index-CH19RiHT.js",
        "size": 527983,
        "modified": "2025-08-25T00:45:31.383Z",
        "extension": ".js",
        "basename": "index-CH19RiHT.js",
        "directory": "app\\panel\\public\\assets",
        "content": "import{r as p,R as I,j as s,t as Xb,c as $b,S as Qb,a as mo,b as Ug,d as mr,u as qe}from\"./ui-B2zvOGH9.js\";import{r as Ib,a as Hg,g as Zb}from\"./vendor-gH-7aFTg.js\";(function(){const r=document.createElement(\"link\").relList;if(r&&r.supports&&r.supports(\"modulepreload\"))return;for(const u of document.querySelectorAll('link[rel=\"modulepreload\"]'))o(u);new MutationObserver(u=>{for(const f of u)if(f.type===\"childList\")for(const m of f.addedNodes)m.tagName===\"LINK\"&&m.rel===\"modulepreload\"&&o(m)}).ob",
        "lineCount": 326,
        "isEmpty": false
      }
    },
    "app\\panel\\public\\assets\\index-D8ygJgM8.css": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\public\\assets directory"
      ],
      "metadata": {
        "path": "app\\panel\\public\\assets\\index-D8ygJgM8.css",
        "size": 12450,
        "modified": "2025-08-25T00:45:31.383Z",
        "extension": ".css",
        "basename": "index-D8ygJgM8.css",
        "directory": "app\\panel\\public\\assets",
        "content": "/*! tailwindcss v4.1.12 | MIT License | https://tailwindcss.com */@layer properties{@supports ((-webkit-hyphens:none) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))){*,:before,:after,::backdrop{--tw-translate-x:0;--tw-translate-y:0;--tw-translate-z:0;--tw-rotate-x:initial;--tw-rotate-y:initial;--tw-rotate-z:initial;--tw-skew-x:initial;--tw-skew-y:initial;--tw-border-style:solid;--tw-leading:initial;--tw-shadow:0 0 #0000;--tw-shadow-color:initial;--",
        "lineCount": 2,
        "isEmpty": false
      }
    },
    "app\\panel\\public\\assets\\ui-B2zvOGH9.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\public\\assets directory"
      ],
      "metadata": {
        "path": "app\\panel\\public\\assets\\ui-B2zvOGH9.js",
        "size": 28449,
        "modified": "2025-08-25T00:45:31.383Z",
        "extension": ".js",
        "basename": "ui-B2zvOGH9.js",
        "directory": "app\\panel\\public\\assets",
        "content": "import{r as Le,g as Fe}from\"./vendor-gH-7aFTg.js\";function We(e,t){for(var r=0;r<t.length;r++){const o=t[r];if(typeof o!=\"string\"&&!Array.isArray(o)){for(const n in o)if(n!==\"default\"&&!(n in e)){const s=Object.getOwnPropertyDescriptor(o,n);s&&Object.defineProperty(e,n,s.get?s:{enumerable:!0,get:()=>o[n]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}))}var oe={exports:{}},B={};/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta ",
        "lineCount": 10,
        "isEmpty": false
      }
    },
    "app\\panel\\public\\assets\\vendor-gH-7aFTg.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\public\\assets directory"
      ],
      "metadata": {
        "path": "app\\panel\\public\\assets\\vendor-gH-7aFTg.js",
        "size": 11827,
        "modified": "2025-08-25T00:45:31.383Z",
        "extension": ".js",
        "basename": "vendor-gH-7aFTg.js",
        "directory": "app\\panel\\public\\assets",
        "content": "function ne(d){return d&&d.__esModule&&Object.prototype.hasOwnProperty.call(d,\"default\")?d.default:d}var M={exports:{}},o={};/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */var z;function ee(){if(z)return o;z=1;var d=Symbol.for(\"react.transitional.element\"),R=Symbol.for(\"react.portal\"),v=Symbol.for(\"react.fragmen",
        "lineCount": 18,
        "isEmpty": false
      }
    },
    "app\\panel\\public\\index.html": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\public directory"
      ],
      "metadata": {
        "path": "app\\panel\\public\\index.html",
        "size": 614,
        "modified": "2025-08-25T00:45:31.383Z",
        "extension": ".html",
        "basename": "index.html",
        "directory": "app\\panel\\public",
        "content": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" type=\"image/svg+xml\" href=\"/vite.svg\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Vite + React + TS</title>\n    <script type=\"module\" crossorigin src=\"/assets/index-CH19RiHT.js\"></script>\n    <link rel=\"modulepreload\" crossorigin href=\"/assets/vendor-gH-7aFTg.js\">\n    <link rel=\"modulepreload\" crossorigin href=\"/assets/ui-B2zvOGH9.js\">\n    <link rel=\"styleshe",
        "lineCount": 17,
        "isEmpty": false
      }
    },
    "app\\panel\\public\\vite.svg": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\public directory"
      ],
      "metadata": {
        "path": "app\\panel\\public\\vite.svg",
        "size": 1497,
        "modified": "2025-08-24T13:54:14.735Z",
        "extension": ".svg",
        "basename": "vite.svg",
        "directory": "app\\panel\\public",
        "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\" role=\"img\" class=\"iconify iconify--logos\" width=\"31.88\" height=\"32\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 256 257\"><defs><linearGradient id=\"IconifyId1813088fe1fbc01fb466\" x1=\"-.828%\" x2=\"57.636%\" y1=\"7.652%\" y2=\"78.411%\"><stop offset=\"0%\" stop-color=\"#41D1FF\"></stop><stop offset=\"100%\" stop-color=\"#BD34FE\"></stop></linearGradient><linearGradient id=\"IconifyId1813088fe1fbc01fb467\" x1=",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\controllers\\config-controller.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\controllers directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\controllers\\config-controller.ts",
        "size": 6909,
        "modified": "2025-08-23T14:28:15.529Z",
        "extension": ".ts",
        "basename": "config-controller.ts",
        "directory": "app\\panel\\src\\controllers",
        "content": "import { FastifyInstance, FastifyRequest, FastifyReply } from 'fastify';\r\nimport { configManager } from '../../../../shared/services/config-manager';\r\nimport { CompleteSystemConfig } from '../../../../shared/types/system-config';\r\n\r\ninterface UpdateConfigRequest {\r\n  Body: {\r\n    section: keyof CompleteSystemConfig;\r\n    updates: any;\r\n    reason?: string;\r\n  };\r\n}\r\n\r\ninterface UpdateParameterRequest {\r\n  Body: {\r\n    section: keyof CompleteSystemConfig;\r\n    parameter: string;\r\n    value: any;\r",
        "lineCount": 214,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\controllers\\i18n-controller.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\controllers directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\controllers\\i18n-controller.ts",
        "size": 2651,
        "modified": "2025-08-23T14:28:15.533Z",
        "extension": ".ts",
        "basename": "i18n-controller.ts",
        "directory": "app\\panel\\src\\controllers",
        "content": "import { FastifyInstance, FastifyRequest, FastifyReply } from 'fastify';\r\nimport { i18nService, SupportedLanguage } from '../../../../shared/services/i18n-service';\r\n\r\ninterface LanguageRequest {\r\n  Body: {\r\n    language: SupportedLanguage;\r\n  };\r\n}\r\n\r\nexport class I18nController {\r\n  constructor(private fastify: FastifyInstance) {}\r\n\r\n  /**\r\n   * Register i18n routes\r\n   */\r\n  async registerRoutes(): Promise<void> {\r\n    // Get current language\r\n    this.fastify.get('/api/i18n/language', async ",
        "lineCount": 89,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\controllers\\__tests__\\i18n-controller.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\controllers\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\controllers\\__tests__\\i18n-controller.test.ts",
        "size": 12623,
        "modified": "2025-08-23T14:28:15.544Z",
        "extension": ".ts",
        "basename": "i18n-controller.test.ts",
        "directory": "app\\panel\\src\\controllers\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi } from 'vitest';\r\nimport Fastify, { FastifyInstance } from 'fastify';\r\nimport { I18nController } from '../i18n-controller';\r\n\r\ndescribe('I18nController', () => {\r\n  let fastify: FastifyInstance;\r\n  let controller: I18nController;\r\n\r\n  beforeEach(async () => {\r\n    fastify = Fastify({ logger: false });\r\n    \r\n    // Mock session support\r\n    fastify.decorateRequest('session', null);\r\n    \r\n    controller = new I18nController(fastify);\r\n    await contr",
        "lineCount": 416,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\index.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\index.ts",
        "size": 26948,
        "modified": "2025-08-28T08:43:09.825Z",
        "extension": ".ts",
        "basename": "index.ts",
        "directory": "app\\panel\\src",
        "content": "// Load environment variables from .env file\nimport { config } from 'dotenv';\nimport path from 'path';\n\n// Load .env from project root\nconst projectRoot = path.resolve(__dirname, \"../../..\");\nconfig({ path: path.join(projectRoot, '.env') });\n\n// Ensure EFORM_DB_PATH is set before any database imports\nif (!process.env.EFORM_DB_PATH) {\n  process.env.EFORM_DB_PATH = path.join(projectRoot, \"data\", \"eform.db\");\n  console.log(`🔧 Panel: Set EFORM_DB_PATH to ${process.env.EFORM_DB_PATH}`);\n}\n\nimport Fa",
        "lineCount": 726,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\middleware\\auth-middleware.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\middleware directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\middleware\\auth-middleware.ts",
        "size": 6134,
        "modified": "2025-08-28T08:34:36.263Z",
        "extension": ".ts",
        "basename": "auth-middleware.ts",
        "directory": "app\\panel\\src\\middleware",
        "content": "import { FastifyRequest, FastifyReply } from 'fastify';\r\nimport { SessionManager } from '../services/session-manager';\r\nimport { PermissionService, Permission } from '../services/permission-service';\r\nimport { User } from '../services/auth-service';\r\n\r\ndeclare module 'fastify' {\r\n  interface FastifyRequest {\r\n    user?: User;\r\n    session?: {\r\n      id: string;\r\n      csrfToken: string;\r\n    };\r\n  }\r\n}\r\n\r\nexport interface AuthMiddlewareOptions {\r\n  sessionManager: SessionManager;\r\n  requiredPerm",
        "lineCount": 195,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\middleware\\rate-limit.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\middleware directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\middleware\\rate-limit.ts",
        "size": 5423,
        "modified": "2025-08-28T07:09:20.309Z",
        "extension": ".ts",
        "basename": "rate-limit.ts",
        "directory": "app\\panel\\src\\middleware",
        "content": "/**\r\n * Rate Limiting Middleware for Maksisoft Integration\r\n * \r\n * Implements simple in-memory rate limiting to prevent abuse of the Maksisoft API.\r\n * Limits requests to 1 per second per IP+RFID combination.\r\n * \r\n * Features:\r\n * - In-memory tracking with automatic cleanup\r\n * - IP + RFID combination for granular control\r\n * - Configurable rate limit (default: 1 request per second)\r\n * - Automatic cleanup of old entries to prevent memory leaks\r\n */\r\n\r\nimport type { FastifyRequest, FastifyRepl",
        "lineCount": 209,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\middleware\\security-middleware.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\middleware directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\middleware\\security-middleware.ts",
        "size": 16893,
        "modified": "2025-08-25T17:11:57.898Z",
        "extension": ".ts",
        "basename": "security-middleware.ts",
        "directory": "app\\panel\\src\\middleware",
        "content": "import { FastifyRequest, FastifyReply } from 'fastify';\r\n\r\nexport interface SecurityConfig {\r\n  csp: {\r\n    defaultSrc: string[];\r\n    scriptSrc: string[];\r\n    styleSrc: string[];\r\n    imgSrc: string[];\r\n    connectSrc: string[];\r\n    fontSrc: string[];\r\n    objectSrc: string[];\r\n    mediaSrc: string[];\r\n    frameSrc: string[];\r\n    reportUri?: string;\r\n  };\r\n  hsts: {\r\n    maxAge: number;\r\n    includeSubDomains: boolean;\r\n    preload: boolean;\r\n  };\r\n  referrerPolicy: string;\r\n  xFrameOptions:",
        "lineCount": 567,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\middleware\\__tests__\\security-middleware.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\middleware\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\middleware\\__tests__\\security-middleware.test.ts",
        "size": 18416,
        "modified": "2025-08-23T14:28:15.579Z",
        "extension": ".ts",
        "basename": "security-middleware.test.ts",
        "directory": "app\\panel\\src\\middleware\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi } from 'vitest';\r\nimport { FastifyRequest, FastifyReply } from 'fastify';\r\nimport { \r\n  SecurityMiddleware, \r\n  InputValidator, \r\n  AuditLogger,\r\n  createValidationMiddleware \r\n} from '../security-middleware';\r\n\r\n// Mock Fastify request and reply\r\nconst createMockRequest = (overrides: Partial<FastifyRequest> = {}): FastifyRequest => ({\r\n  protocol: 'https',\r\n  headers: {\r\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",
        "lineCount": 591,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\routes\\auth-routes.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\routes directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\routes\\auth-routes.ts",
        "size": 11374,
        "modified": "2025-08-28T18:22:20.925Z",
        "extension": ".ts",
        "basename": "auth-routes.ts",
        "directory": "app\\panel\\src\\routes",
        "content": "import { FastifyInstance, FastifyPluginOptions } from \"fastify\";\r\nimport { AuthService, User } from \"../services/auth-service\";\r\nimport { SessionManager } from \"../services/session-manager\";\r\nimport { PermissionService, Permission } from \"../services/permission-service\";\r\nimport { CookieManager } from \"../../../../shared/services/cookie-manager\";\r\nimport { SessionConflictDetector } from \"../../../../shared/services/session-conflict-detector\";\r\n\r\ninterface AuthRouteOptions extends FastifyPluginOp",
        "lineCount": 387,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\routes\\locker-naming-routes.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\routes directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\routes\\locker-naming-routes.ts",
        "size": 12969,
        "modified": "2025-08-27T03:38:22.248Z",
        "extension": ".ts",
        "basename": "locker-naming-routes.ts",
        "directory": "app\\panel\\src\\routes",
        "content": "import { FastifyInstance, FastifyPluginOptions } from 'fastify';\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\nimport { LockerNamingService } from '../../../../shared/services/locker-naming-service';\nimport { requirePermission, requireCsrfToken } from '../middleware/auth-middleware';\nimport { Permission } from '../services/permission-service';\nimport { User } from '../services/auth-service';\n\ninterface LockerNamingRouteOptions extends FastifyPluginOptions {\n  db",
        "lineCount": 434,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\routes\\locker-routes.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\routes directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\routes\\locker-routes.ts",
        "size": 29852,
        "modified": "2025-08-28T00:41:35.855Z",
        "extension": ".ts",
        "basename": "locker-routes.ts",
        "directory": "app\\panel\\src\\routes",
        "content": "import { FastifyInstance, FastifyPluginOptions } from 'fastify';\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\nimport { LockerStateManager } from '../../../../shared/services/locker-state-manager';\nimport { EventRepository } from '../../../../shared/database/event-repository';\nimport { CommandQueueManager } from '../../../../shared/services/command-queue-manager';\nimport { requirePermission, requireCsrfToken } from '../middleware/auth-middleware';\nimport { Permi",
        "lineCount": 940,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\routes\\maksi-routes.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\routes directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\routes\\maksi-routes.ts",
        "size": 5603,
        "modified": "2025-08-28T07:51:09.947Z",
        "extension": ".ts",
        "basename": "maksi-routes.ts",
        "directory": "app\\panel\\src\\routes",
        "content": "/**\r\n * Maksisoft Integration API Routes\r\n * \r\n * Provides REST API endpoints for Maksisoft member search functionality.\r\n * Includes rate limiting, error handling, and proper logging.\r\n */\r\n\r\nimport type { FastifyInstance, FastifyRequest, FastifyReply } from 'fastify';\r\nimport crypto from 'node:crypto';\r\nimport { searchMaksiByRFID, isMaksiEnabled } from '../services/maksi';\r\nimport { rateLimit } from '../middleware/rate-limit';\r\n\r\n/**\r\n * Salt for RFID hashing in logs (to protect PII)\r\n */\r\ncon",
        "lineCount": 188,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\routes\\performance-routes.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\routes directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\routes\\performance-routes.ts",
        "size": 12048,
        "modified": "2025-08-27T03:44:09.543Z",
        "extension": ".ts",
        "basename": "performance-routes.ts",
        "directory": "app\\panel\\src\\routes",
        "content": "/**\n * Performance Monitoring API Routes\n * \n * Provides endpoints for performance metrics and monitoring dashboard\n */\n\nimport { FastifyInstance, FastifyRequest, FastifyReply } from 'fastify';\nimport { Database } from 'sqlite3';\nimport { PerformanceMonitor } from '../../../../shared/services/performance-monitor';\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\n\ninterface PerformanceRouteParams {\n  kioskId: string;\n}\n\ninterface LockerStatsQuery {\n  days?: string;\n",
        "lineCount": 396,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\routes\\relay-routes.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\routes directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\routes\\relay-routes.ts",
        "size": 21346,
        "modified": "2025-08-28T06:16:16.456Z",
        "extension": ".ts",
        "basename": "relay-routes.ts",
        "directory": "app\\panel\\src\\routes",
        "content": "/**\r\n * Relay Control Routes for Admin Panel\r\n * Provides direct hardware relay control endpoints\r\n */\r\n\r\nimport { FastifyInstance, FastifyRequest, FastifyReply } from 'fastify';\r\n\r\n// Use SerialPort with working commands (same as Kiosk fix)\r\nconst { SerialPort } = require('serialport');\r\n\r\nclass SimpleRelayService {\r\n  private serialPort: any;\r\n  private isConnected: boolean = false;\r\n  private lastConnectionTime: number = 0;\r\n  private connectionTimeout: number = 30 * 60 * 1000; // 30 minutes\r",
        "lineCount": 638,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\routes\\vip-routes.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\routes directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\routes\\vip-routes.ts",
        "size": 27480,
        "modified": "2025-08-23T17:01:47.216Z",
        "extension": ".ts",
        "basename": "vip-routes.ts",
        "directory": "app\\panel\\src\\routes",
        "content": "import { FastifyInstance, FastifyPluginOptions } from 'fastify';\r\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\r\nimport { VipContractRepository } from '../../../../shared/database/vip-contract-repository';\r\nimport { VipTransferRepository } from '../../../../shared/database/vip-transfer-repository';\r\nimport { VipHistoryRepository } from '../../../../shared/database/vip-history-repository';\r\nimport { LockerStateManager } from '../../../../shared/services/locker-st",
        "lineCount": 781,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\services\\auth-service.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\services\\auth-service.ts",
        "size": 12538,
        "modified": "2025-08-23T21:16:09.548Z",
        "extension": ".ts",
        "basename": "auth-service.ts",
        "directory": "app\\panel\\src\\services",
        "content": "import argon2 from 'argon2';\r\nimport bcryptjs from 'bcryptjs';\r\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\r\n\r\nexport interface User {\r\n  id: number;\r\n  username: string;\r\n  role: 'admin' | 'staff';\r\n  created_at: Date;\r\n  last_login?: Date;\r\n  pin_expires_at?: Date;\r\n}\r\n\r\nexport interface CreateUserRequest {\r\n  username: string;\r\n  password: string;\r\n  role: 'admin' | 'staff';\r\n}\r\n\r\nexport class AuthService {\r\n  constructor(private dbManager: DatabaseManager)",
        "lineCount": 387,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\services\\authorization-service.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\services\\authorization-service.ts",
        "size": 7410,
        "modified": "2025-08-23T14:28:15.636Z",
        "extension": ".ts",
        "basename": "authorization-service.ts",
        "directory": "app\\panel\\src\\services",
        "content": "import { PermissionService } from './permission-service';\r\nimport { SessionManager } from './session-manager';\r\n\r\nexport interface AuthorizationResult {\r\n  allowed: boolean;\r\n  role?: string;\r\n  reason?: string;\r\n  auditInfo?: {\r\n    username: string;\r\n    operation: string;\r\n    timestamp: Date;\r\n    reason?: string;\r\n  };\r\n}\r\n\r\nexport interface OperationContext {\r\n  locker_id?: number;\r\n  kiosk_id?: string;\r\n  is_vip?: boolean;\r\n  bulk_operation?: boolean;\r\n  target_user?: string;\r\n}\r\n\r\nexport",
        "lineCount": 294,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\services\\maksi-config.md": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\services\\maksi-config.md",
        "size": 4152,
        "modified": "2025-08-28T07:06:32.935Z",
        "extension": ".md",
        "basename": "maksi-config.md",
        "directory": "app\\panel\\src\\services",
        "content": "# Maksisoft Integration Configuration\r\n\r\n## Environment Variables\r\n\r\nThe Maksisoft integration requires the following environment variables to be configured:\r\n\r\n### Required Variables\r\n\r\n- **MAKSI_BASE**: Base URL for the Maksisoft system\r\n  - Example: `https://eformhatay.maksionline.com`\r\n  - This is the root domain of your Maksisoft installation\r\n\r\n- **MAKSI_SEARCH_PATH**: API endpoint path for user search\r\n  - Example: `/react-system/api_php/user_search/users.php`\r\n  - This is the specific en",
        "lineCount": 115,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\services\\maksi-types.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\services\\maksi-types.ts",
        "size": 3939,
        "modified": "2025-08-28T07:05:40.528Z",
        "extension": ".ts",
        "basename": "maksi-types.ts",
        "directory": "app\\panel\\src\\services",
        "content": "/**\r\n * Maksisoft Integration Types\r\n * \r\n * This file defines TypeScript types for the Maksisoft member management system integration.\r\n * The types are based on the exact API response format from Maksisoft's user search endpoint.\r\n * \r\n * IMPORTANT: Always use criteria=0 for RFID searches in Maksisoft API calls.\r\n */\r\n\r\n/**\r\n * Raw response format from Maksisoft API\r\n * This represents the exact structure returned by the Maksisoft user search endpoint\r\n */\r\nexport type MaksiHit = {\r\n  /** Memb",
        "lineCount": 141,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\services\\maksi.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\services\\maksi.ts",
        "size": 4549,
        "modified": "2025-08-28T17:55:00.620Z",
        "extension": ".ts",
        "basename": "maksi.ts",
        "directory": "app\\panel\\src\\services",
        "content": "/**\r\n * Maksisoft Integration Service\r\n * \r\n * This service handles communication with the Maksisoft member management system.\r\n * It provides RFID-based member search functionality with proper error handling,\r\n * timeout management, and data mapping.\r\n * \r\n * Key features:\r\n * - 15-second timeout with no retry logic (high network latency)\r\n * - Bootstrap cookie authentication\r\n * - Data mapping to exactly 6 display fields\r\n * - Proper error handling and logging\r\n */\r\n\r\nimport { mapMaksi, type M",
        "lineCount": 145,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\services\\permission-service.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\services\\permission-service.ts",
        "size": 2742,
        "modified": "2025-08-27T03:38:22.251Z",
        "extension": ".ts",
        "basename": "permission-service.ts",
        "directory": "app\\panel\\src\\services",
        "content": "export enum Permission {\n  VIEW_LOCKERS = 'view_lockers',\n  OPEN_LOCKER = 'open_locker',\n  BULK_OPEN = 'bulk_open',\n  BLOCK_LOCKER = 'block_locker',\n  MANAGE_LOCKERS = 'manage_lockers',\n  MANAGE_VIP = 'manage_vip',\n  MANAGE_MASTER_PIN = 'manage_master_pin',\n  VIEW_EVENTS = 'view_events',\n  EXPORT_REPORTS = 'export_reports',\n  SYSTEM_CONFIG = 'system_config',\n  MANAGE_USERS = 'manage_users'\n}\n\nexport type UserRole = 'admin' | 'staff';\n\nexport class PermissionService {\n  private static readonly RO",
        "lineCount": 85,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\services\\pin-rotation-service.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\services\\pin-rotation-service.ts",
        "size": 13537,
        "modified": "2025-08-23T17:01:47.214Z",
        "extension": ".ts",
        "basename": "pin-rotation-service.ts",
        "directory": "app\\panel\\src\\services",
        "content": "import { DatabaseManager } from '../../../../shared/database/database-manager';\r\nimport { SessionManager } from './session-manager';\r\nimport argon2 from 'argon2';\r\n\r\nexport interface PinRotationConfig {\r\n  rotationDays: number;\r\n  warningDays: number;\r\n  enforceRotation: boolean;\r\n  minPinLength: number;\r\n  maxPinLength: number;\r\n  preventReuse: boolean;\r\n  reuseHistoryCount: number;\r\n}\r\n\r\nconst DEFAULT_PIN_ROTATION_CONFIG: PinRotationConfig = {\r\n  rotationDays: 90,\r\n  warningDays: 7,\r\n  enforce",
        "lineCount": 464,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\services\\session-manager.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\services directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\services\\session-manager.ts",
        "size": 14600,
        "modified": "2025-08-24T11:57:45.111Z",
        "extension": ".ts",
        "basename": "session-manager.ts",
        "directory": "app\\panel\\src\\services",
        "content": "import { randomBytes } from 'crypto';\r\nimport { User } from './auth-service';\r\n\r\nexport interface Session {\r\n  id: string;\r\n  user: User;\r\n  createdAt: Date;\r\n  lastActivity: Date;\r\n  csrfToken: string;\r\n  ipAddress: string;\r\n  userAgent: string;\r\n  pinLastChanged?: Date;\r\n  requiresPinChange?: boolean;\r\n  maxIdleTime?: number;\r\n  autoRenewalEnabled?: boolean;\r\n  renewalCount?: number;\r\n  maxRenewals?: number;\r\n}\r\n\r\nexport interface SessionConfig {\r\n  sessionTimeout: number; // milliseconds\r\n  m",
        "lineCount": 495,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\services\\__tests__\\authorization-service.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\services\\__tests__\\authorization-service.test.ts",
        "size": 13334,
        "modified": "2025-08-23T14:28:15.683Z",
        "extension": ".ts",
        "basename": "authorization-service.test.ts",
        "directory": "app\\panel\\src\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { AuthorizationService } from '../authorization-service';\r\nimport { PermissionService } from '../permission-service';\r\nimport { SessionManager } from '../session-manager';\r\n\r\n// Mock dependencies\r\nvi.mock('../permission-service.js');\r\nvi.mock('../session-manager.js');\r\n\r\ndescribe('AuthorizationService', () => {\r\n  let authService: AuthorizationService;\r\n  let mockPermissionService: any;\r\n  let mockSessionManager: a",
        "lineCount": 409,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\types\\fastify.d.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\types directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\types\\fastify.d.ts",
        "size": 136,
        "modified": "2025-08-23T14:28:15.687Z",
        "extension": ".ts",
        "basename": "fastify.d.ts",
        "directory": "app\\panel\\src\\types",
        "content": "import { User } from '../services/auth-service';\r\n\r\ndeclare module 'fastify' {\r\n  interface FastifyRequest {\r\n    user?: User;\r\n  }\r\n}\r\n",
        "lineCount": 8,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\validation\\simple-validation.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\validation directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\validation\\simple-validation.js",
        "size": 10325,
        "modified": "2025-08-20T18:17:57.015Z",
        "extension": ".js",
        "basename": "simple-validation.js",
        "directory": "app\\panel\\src\\validation",
        "content": "/**\r\n * Simple VIP Transfer and Audit Workflow Validation\r\n * \r\n * This script validates the implementation of task 8.4 components\r\n */\r\n\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport { fileURLToPath } from 'url';\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = path.dirname(__filename);\r\n\r\nclass SimpleValidation {\r\n  constructor() {\r\n    this.results = [];\r\n  }\r\n\r\n  addResult(component, status, details) {\r\n    this.results.push({ component, status, details });\r",
        "lineCount": 253,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\validation\\task-8.4-implementation-summary.md": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\validation directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\validation\\task-8.4-implementation-summary.md",
        "size": 8763,
        "modified": "2025-08-20T18:19:00.825Z",
        "extension": ".md",
        "basename": "task-8.4-implementation-summary.md",
        "directory": "app\\panel\\src\\validation",
        "content": "# Task 8.4 Implementation Summary: VIP Transfer and Audit Workflow\r\n\r\n## Overview\r\nTask 8.4 \"Create VIP transfer and audit workflow\" has been successfully completed. This implementation provides a comprehensive system for managing VIP contract transfers with full audit logging and approval workflows.\r\n\r\n## ✅ Implemented Components\r\n\r\n### 1. Room Change Workflow for VIP Contracts with Old Card Cancellation\r\n\r\n**Database Schema:**\r\n- `vip_transfer_requests` table with complete transfer workflow su",
        "lineCount": 241,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\validation\\vip-transfer-validation.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\validation directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\validation\\vip-transfer-validation.ts",
        "size": 15667,
        "modified": "2025-08-23T14:28:15.709Z",
        "extension": ".ts",
        "basename": "vip-transfer-validation.ts",
        "directory": "app\\panel\\src\\validation",
        "content": "/**\r\n * VIP Transfer and Audit Workflow Validation Script\r\n * \r\n * This script validates that all components of task 8.4 are properly implemented:\r\n * - Room change workflow for VIP contracts with old card cancellation\r\n * - Mandatory audit logging for all VIP operations\r\n * - VIP contract history tracking and change documentation\r\n * - VIP transfer validation and approval process\r\n */\r\n\r\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\r\nimport { VipContractReposit",
        "lineCount": 484,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\views\\config.html": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\views directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\views\\config.html",
        "size": 29339,
        "modified": "2025-08-25T15:03:52.085Z",
        "extension": ".html",
        "basename": "config.html",
        "directory": "app\\panel\\src\\views",
        "content": "<!DOCTYPE html>\r\n<html lang=\"tr\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title data-i18n=\"panel.system_config\">Sistem Yapılandırması</title>\r\n    <script>\r\n        // Early service worker registration prevention\r\n        if (typeof navigator !== 'undefined' && navigator.serviceWorker) {\r\n            if (!navigator.serviceWorker.register) {\r\n                navigator.serviceWorker.register = function() {\r\n             ",
        "lineCount": 680,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\views\\configuration-panel.html": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\views directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\views\\configuration-panel.html",
        "size": 16042,
        "modified": "2025-08-25T15:04:03.058Z",
        "extension": ".html",
        "basename": "configuration-panel.html",
        "directory": "app\\panel\\src\\views",
        "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Configuration Management - Eform Locker System</title>\r\n    <script>\r\n        // Early service worker registration prevention\r\n        if (typeof navigator !== 'undefined' && navigator.serviceWorker) {\r\n            if (!navigator.serviceWorker.register) {\r\n                navigator.serviceWorker.register = function() {\r\n                    ",
        "lineCount": 468,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\views\\dashboard.html": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\views directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\views\\dashboard.html",
        "size": 9151,
        "modified": "2025-08-27T03:38:22.252Z",
        "extension": ".html",
        "basename": "dashboard.html",
        "directory": "app\\panel\\src\\views",
        "content": "<!DOCTYPE html>\n<html lang=\"tr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Eform Panel - Ana Sayfa</title>\n    <script>\n        // Early service worker registration prevention\n        if (typeof navigator !== 'undefined' && navigator.serviceWorker) {\n            if (!navigator.serviceWorker.register) {\n                navigator.serviceWorker.register = function() {\n                    console.log('🔧 Service worker reg",
        "lineCount": 272,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\views\\locker-naming.html": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\views directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\views\\locker-naming.html",
        "size": 39828,
        "modified": "2025-08-27T03:38:22.254Z",
        "extension": ".html",
        "basename": "locker-naming.html",
        "directory": "app\\panel\\src\\views",
        "content": "<!DOCTYPE html>\n<html lang=\"tr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Dolap İsimlendirme - Eform Panel</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n            background: #f5f5f5;\n        }\n\n        .header {\n            backgro",
        "lineCount": 1204,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\views\\lockers.html": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\views directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\views\\lockers.html",
        "size": 142782,
        "modified": "2025-08-28T19:34:39.227Z",
        "extension": ".html",
        "basename": "lockers.html",
        "directory": "app\\panel\\src\\views",
        "content": "<!DOCTYPE html>\n<html lang=\"tr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Dolap Yönetimi - Eform Panel</title>\n    <script>\n        // Early service worker registration prevention\n        if (typeof navigator !== 'undefined' && navigator.serviceWorker) {\n            if (!navigator.serviceWorker.register) {\n                navigator.serviceWorker.register = function() {\n                    console.log('🔧 Service worke",
        "lineCount": 3666,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\views\\login.html": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\views directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\views\\login.html",
        "size": 10770,
        "modified": "2025-08-25T15:03:24.525Z",
        "extension": ".html",
        "basename": "login.html",
        "directory": "app\\panel\\src\\views",
        "content": "<!DOCTYPE html>\r\n<html lang=\"tr\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Eform Panel - Giriş</title>\r\n    <script>\r\n        // Early service worker registration prevention\r\n        if (typeof navigator !== 'undefined' && navigator.serviceWorker) {\r\n            if (!navigator.serviceWorker.register) {\r\n                navigator.serviceWorker.register = function() {\r\n                    console.log('🔧 Service wor",
        "lineCount": 315,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\views\\performance-dashboard.html": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\views directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\views\\performance-dashboard.html",
        "size": 21401,
        "modified": "2025-08-27T03:38:22.257Z",
        "extension": ".html",
        "basename": "performance-dashboard.html",
        "directory": "app\\panel\\src\\views",
        "content": "<!DOCTYPE html>\n<html lang=\"tr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Performans İzleme - eForm Locker System</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\" rel=\"stylesheet\">\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n    <style>\n     ",
        "lineCount": 499,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\views\\relay.html": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\views directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\views\\relay.html",
        "size": 24991,
        "modified": "2025-08-26T04:00:32.195Z",
        "extension": ".html",
        "basename": "relay.html",
        "directory": "app\\panel\\src\\views",
        "content": "<!DOCTYPE html>\r\n<html lang=\"tr\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>🔌 Röle Kontrolü - Eform Panel</title>\r\n    <style>\r\n        * {\r\n            margin: 0;\r\n            padding: 0;\r\n            box-sizing: border-box;\r\n        }\r\n\r\n        body {\r\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 ",
        "lineCount": 711,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\views\\static\\i18n.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\views\\static directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\views\\static\\i18n.js",
        "size": 7243,
        "modified": "2025-08-25T14:31:18.623Z",
        "extension": ".js",
        "basename": "i18n.js",
        "directory": "app\\panel\\src\\views\\static",
        "content": "/**\r\n * Client-side i18n helper for Panel UI\r\n */\r\nclass PanelI18n {\r\n    constructor() {\r\n        this.currentLanguage = 'tr';\r\n        this.messages = {};\r\n        this.init();\r\n    }\r\n\r\n    async init() {\r\n        try {\r\n            // Load current language and messages from server\r\n            const response = await fetch('/api/i18n/messages');\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n            }\r\n ",
        "lineCount": 216,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\views\\vip.html": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\views directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\views\\vip.html",
        "size": 64835,
        "modified": "2025-08-25T15:01:32.446Z",
        "extension": ".html",
        "basename": "vip.html",
        "directory": "app\\panel\\src\\views",
        "content": "<!DOCTYPE html>\r\n<html lang=\"tr\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>VIP Sözleşme Yönetimi - Eform Panel</title>\r\n    <script>\r\n        // Early service worker registration prevention\r\n        if (typeof navigator !== 'undefined' && navigator.serviceWorker) {\r\n            if (!navigator.serviceWorker.register) {\r\n                navigator.serviceWorker.register = function() {\r\n                    console.log",
        "lineCount": 1736,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\auth-middleware.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\auth-middleware.test.ts",
        "size": 7962,
        "modified": "2025-08-23T14:28:15.729Z",
        "extension": ".ts",
        "basename": "auth-middleware.test.ts",
        "directory": "app\\panel\\src\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi } from 'vitest';\r\nimport { createAuthMiddleware, requirePermission, requireCsrfToken } from '../middleware/auth-middleware';\r\nimport { SessionManager } from '../services/session-manager';\r\nimport { Permission } from '../services/permission-service';\r\nimport { User } from '../services/auth-service';\r\n\r\ndescribe('AuthMiddleware', () => {\r\n  let sessionManager: SessionManager;\r\n  let mockRequest: any;\r\n  let mockReply: any;\r\n  let mockUser: User;\r\n\r\n  b",
        "lineCount": 227,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\auth-service.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\auth-service.test.ts",
        "size": 11013,
        "modified": "2025-08-23T21:16:41.699Z",
        "extension": ".ts",
        "basename": "auth-service.test.ts",
        "directory": "app\\panel\\src\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach } from 'vitest';\r\nimport { AuthService } from '../services/auth-service';\r\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\n\r\ndescribe('AuthService', () => {\r\n  let authService: AuthService;\r\n  let dbManager: DatabaseManager;\r\n  let testDbPath: string;\r\n\r\n  beforeEach(async () => {\r\n    // Create a unique test database file\r\n    testDbPath = path.join(pro",
        "lineCount": 325,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\command-status.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\command-status.test.ts",
        "size": 9227,
        "modified": "2025-08-25T23:39:58.570Z",
        "extension": ".ts",
        "basename": "command-status.test.ts",
        "directory": "app\\panel\\src\\__tests__",
        "content": "/**\r\n * Command Status Polling Endpoint Tests\r\n * Tests the GET /api/commands/:id endpoint for command status polling\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, vi } from 'vitest';\r\n\r\n// Mock the CommandQueueManager\r\nconst mockCommandQueue = {\r\n  getCommand: vi.fn()\r\n};\r\n\r\n// Mock command data for testing\r\nconst mockCommand = {\r\n  command_id: 'test-command-123',\r\n  kiosk_id: 'kiosk-1',\r\n  command_type: 'open_locker',\r\n  status: 'completed',\r\n  payload: { locker_id: 5, staff_user: 'admin'",
        "lineCount": 272,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\integration\\vip-workflow-integration.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\integration directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\integration\\vip-workflow-integration.test.ts",
        "size": 21816,
        "modified": "2025-08-23T14:28:15.793Z",
        "extension": ".ts",
        "basename": "vip-workflow-integration.test.ts",
        "directory": "app\\panel\\src\\__tests__\\integration",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { DatabaseManager } from '@eform/shared/database/database-manager';\r\nimport { VipContractRepository } from '@eform/shared/database/vip-contract-repository';\r\nimport { LockerRepository } from '@eform/shared/database/locker-repository';\r\nimport { VipHistoryRepository } from '@eform/shared/database/vip-history-repository';\r\nimport { VipTransferRepository } from '@eform/shared/database/vip-transfer-repository';\r\nimport",
        "lineCount": 664,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\locker-routes-vip.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\locker-routes-vip.test.ts",
        "size": 4036,
        "modified": "2025-08-23T14:28:15.743Z",
        "extension": ".ts",
        "basename": "locker-routes-vip.test.ts",
        "directory": "app\\panel\\src\\__tests__",
        "content": "/**\r\n * VIP Locker Handling Tests for Panel Locker Routes\r\n * Tests that VIP lockers are properly handled in bulk operations and individual opens\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, vi } from 'vitest';\r\n\r\n// Create a simple test to verify VIP logic without complex Fastify setup\r\ndescribe('Panel Locker Routes VIP Handling Logic', () => {\r\n  let mockLockerStateManager: any;\r\n  let mockEventRepository: any;\r\n\r\n  beforeEach(() => {\r\n    vi.clearAllMocks();\r\n    mockLockerStateManager ",
        "lineCount": 119,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\maksi-data-mapping.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\maksi-data-mapping.test.ts",
        "size": 5663,
        "modified": "2025-08-28T07:44:18.814Z",
        "extension": ".ts",
        "basename": "maksi-data-mapping.test.ts",
        "directory": "app\\panel\\src\\__tests__",
        "content": "/**\r\n * Unit Tests for Maksisoft Data Mapping Function\r\n * \r\n * Tests the mapMaksi function with sample MaksiHit responses to ensure\r\n * proper data transformation and field mapping.\r\n * \r\n * Requirements: Core functionality validation\r\n */\r\n\r\nimport { describe, it, expect } from 'vitest';\r\nimport { mapMaksi, type MaksiHit } from '../services/maksi-types';\r\n\r\ndescribe('Maksisoft Data Mapping', () => {\r\n  describe('mapMaksi function', () => {\r\n    it('should map complete MaksiHit to MaksiUser wit",
        "lineCount": 209,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\maksi-integration.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\maksi-integration.test.ts",
        "size": 15569,
        "modified": "2025-08-28T07:44:31.263Z",
        "extension": ".ts",
        "basename": "maksi-integration.test.ts",
        "directory": "app\\panel\\src\\__tests__",
        "content": "/**\r\n * Integration Tests for Maksisoft Feature\r\n * \r\n * Tests key user flows from button click to modal display,\r\n * including error scenarios and Turkish error messages.\r\n * \r\n * Requirements: Critical user flows validation\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport Fastify from 'fastify';\r\nimport { registerMaksiRoutes } from '../routes/maksi-routes';\r\nimport { clearRateLimitStore, stopCleanupTimer } from '../middleware/rate-limit';\r\n\r\n// Mock DOM",
        "lineCount": 454,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\maksi-manual-validation.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\maksi-manual-validation.js",
        "size": 4994,
        "modified": "2025-08-28T07:49:57.061Z",
        "extension": ".js",
        "basename": "maksi-manual-validation.js",
        "directory": "app\\panel\\src\\__tests__",
        "content": "/**\r\n * Manual Validation Script for Maksisoft Integration\r\n * Run this in browser DevTools console on the /lockers page\r\n */\r\n\r\n(function() {\r\n  console.log('🔍 Starting Maksisoft Integration Manual Validation...');\r\n  \r\n  const results = {\r\n    buttonVisibility: false,\r\n    featureFlag: false,\r\n    modalStructure: false,\r\n    javascriptFunctions: false,\r\n    networkRequests: false,\r\n    errorMessages: false\r\n  };\r\n\r\n  // 1. Check button visibility\r\n  console.log('\\n1. Checking button visibilit",
        "lineCount": 135,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\maksi-modal-display.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\maksi-modal-display.test.ts",
        "size": 5427,
        "modified": "2025-08-28T07:35:38.939Z",
        "extension": ".ts",
        "basename": "maksi-modal-display.test.ts",
        "directory": "app\\panel\\src\\__tests__",
        "content": "/**\r\n * Test for Maksisoft Modal Display and Error Handling - Task 5.2\r\n * \r\n * This test verifies that the modal display and error handling functionality\r\n * meets the requirements 2.3, 2.4, and 6.5.\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, vi } from 'vitest';\r\n\r\n// Mock DOM elements\r\nconst mockModal = {\r\n  style: { display: 'none' },\r\n  setAttribute: vi.fn(),\r\n  getAttribute: vi.fn()\r\n};\r\n\r\nconst mockMaksiBody = {\r\n  innerHTML: '',\r\n  appendChild: vi.fn()\r\n};\r\n\r\nconst mockMaksiProfil",
        "lineCount": 172,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\maksi-mvp-validation.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\maksi-mvp-validation.test.ts",
        "size": 8788,
        "modified": "2025-08-28T07:49:31.578Z",
        "extension": ".ts",
        "basename": "maksi-mvp-validation.test.ts",
        "directory": "app\\panel\\src\\__tests__",
        "content": "/**\r\n * MVP Acceptance Criteria Validation Tests\r\n * Tests all requirements from the Maksisoft Integration spec\r\n */\r\n\r\nimport { describe, it, expect, beforeAll, afterAll, beforeEach } from 'vitest';\r\nimport { spawn, ChildProcess } from 'child_process';\r\nimport fetch from 'node-fetch';\r\nimport crypto from 'crypto';\r\n\r\n// Test configuration\r\nconst PANEL_URL = 'http://localhost:3001';\r\nconst TEST_TIMEOUT = 10000;\r\n\r\ndescribe('Maksisoft Integration MVP Validation', () => {\r\n  let panelProcess: Chil",
        "lineCount": 249,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\maksi-rate-limiter.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\maksi-rate-limiter.test.ts",
        "size": 8896,
        "modified": "2025-08-28T07:44:23.003Z",
        "extension": ".ts",
        "basename": "maksi-rate-limiter.test.ts",
        "directory": "app\\panel\\src\\__tests__",
        "content": "/**\r\n * Unit Tests for Maksisoft Rate Limiter\r\n * \r\n * Tests the rate limiting middleware with timing scenarios to ensure\r\n * proper throttling and cleanup behavior.\r\n * \r\n * Requirements: Core functionality validation\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { rateLimit, clearRateLimitStore, stopCleanupTimer } from '../middleware/rate-limit';\r\n\r\n// Mock Fastify request and reply objects\r\nconst createMockRequest = (ip: string, rfid: string) => ({\r",
        "lineCount": 286,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\maksi-routes.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\maksi-routes.test.ts",
        "size": 4409,
        "modified": "2025-08-28T07:12:15.520Z",
        "extension": ".ts",
        "basename": "maksi-routes.test.ts",
        "directory": "app\\panel\\src\\__tests__",
        "content": "/**\r\n * Tests for Maksisoft API Routes\r\n * \r\n * Verifies the API endpoint behavior, error handling, and response formats.\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, afterEach } from '@jest/globals';\r\nimport Fastify from 'fastify';\r\nimport { registerMaksiRoutes } from '../routes/maksi-routes';\r\nimport { clearRateLimitStore, stopCleanupTimer } from '../middleware/rate-limit';\r\n\r\ndescribe('Maksisoft API Routes', () => {\r\n  let fastify: any;\r\n\r\n  beforeEach(async () => {\r\n    // Clear rate l",
        "lineCount": 155,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\maksi-service.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\maksi-service.test.ts",
        "size": 11081,
        "modified": "2025-08-28T07:44:27.378Z",
        "extension": ".ts",
        "basename": "maksi-service.test.ts",
        "directory": "app\\panel\\src\\__tests__",
        "content": "/**\r\n * Unit Tests for Maksisoft Service\r\n * \r\n * Tests the service happy path and timeout scenarios to ensure\r\n * proper API communication and error handling.\r\n * \r\n * Requirements: Core functionality validation\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { searchMaksiByRFID, isMaksiEnabled, getMaksiStatus } from '../services/maksi';\r\nimport type { MaksiHit } from '../services/maksi-types';\r\n\r\n// Mock fetch globally\r\nglobal.fetch = vi.fn();\r\n\r\ndescr",
        "lineCount": 382,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\maksi-test-summary.md": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\maksi-test-summary.md",
        "size": 5958,
        "modified": "2025-08-28T07:45:18.989Z",
        "extension": ".md",
        "basename": "maksi-test-summary.md",
        "directory": "app\\panel\\src\\__tests__",
        "content": "# Maksisoft Integration Test Suite Summary\r\n\r\n## Test Coverage Implemented\r\n\r\n### 1. Unit Tests (Task 6.1) ✅\r\n\r\n#### Data Mapping Tests (`maksi-data-mapping.test.ts`)\r\n- ✅ Maps complete MaksiHit to MaksiUser with all fields\r\n- ✅ Handles empty/null name field\r\n- ✅ Prioritizes phone over gsm when both exist\r\n- ✅ Uses gsm when phone is empty\r\n- ✅ Handles whitespace in name and phone fields\r\n- ✅ Handles invalid membership type\r\n- ✅ Preserves all empty string fields as null\r\n- ✅ Handles realistic mem",
        "lineCount": 150,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\MAKSISOFT_MVP_VALIDATION_REPORT.md": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\MAKSISOFT_MVP_VALIDATION_REPORT.md",
        "size": 8338,
        "modified": "2025-08-28T07:53:30.277Z",
        "extension": ".md",
        "basename": "MAKSISOFT_MVP_VALIDATION_REPORT.md",
        "directory": "app\\panel\\src\\__tests__",
        "content": "# Maksisoft Integration MVP Validation Report\r\n\r\n## Executive Summary\r\n\r\n✅ **ALL MVP ACCEPTANCE CRITERIA VALIDATED**\r\n\r\nThe Maksisoft Integration feature has been successfully implemented and validated against all requirements from the specification. All 6 major requirement categories have been fulfilled with comprehensive testing coverage.\r\n\r\n## Validation Results\r\n\r\n### 1. ✅ RFID Member Search Integration (Requirement 1)\r\n\r\n**Status: COMPLETE** - All 5 acceptance criteria validated\r\n\r\n- ✅ **AC",
        "lineCount": 225,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\performance\\panel-performance.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\performance directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\performance\\panel-performance.test.ts",
        "size": 14494,
        "modified": "2025-08-23T14:28:15.805Z",
        "extension": ".ts",
        "basename": "panel-performance.test.ts",
        "directory": "app\\panel\\src\\__tests__\\performance",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { DatabaseManager } from '../../../../../shared/database/database-manager';\r\nimport { LockerRepository } from '../../../../../shared/database/locker-repository';\r\nimport { VipContractRepository } from '../../../../../shared/database/vip-contract-repository';\r\nimport { EventLogger } from '../../../../../shared/services/event-logger';\r\nimport { HeartbeatManager } from '../../../../../shared/services/heartbeat-manager",
        "lineCount": 402,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\permission-service.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\permission-service.test.ts",
        "size": 4541,
        "modified": "2025-08-23T14:28:15.748Z",
        "extension": ".ts",
        "basename": "permission-service.test.ts",
        "directory": "app\\panel\\src\\__tests__",
        "content": "import { describe, it, expect } from 'vitest';\r\nimport { PermissionService, Permission } from '../services/permission-service';\r\n\r\ndescribe('PermissionService', () => {\r\n  describe('hasPermission', () => {\r\n    it('should grant admin all permissions', () => {\r\n      const adminPermissions = [\r\n        Permission.VIEW_LOCKERS,\r\n        Permission.OPEN_LOCKER,\r\n        Permission.BULK_OPEN,\r\n        Permission.BLOCK_LOCKER,\r\n        Permission.MANAGE_VIP,\r\n        Permission.MANAGE_MASTER_PIN,\r\n  ",
        "lineCount": 115,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\session-manager.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\session-manager.test.ts",
        "size": 11870,
        "modified": "2025-08-23T14:28:15.758Z",
        "extension": ".ts",
        "basename": "session-manager.test.ts",
        "directory": "app\\panel\\src\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi } from 'vitest';\r\nimport { SessionManager } from '../services/session-manager';\r\nimport { User } from '../services/auth-service';\r\n\r\ndescribe('SessionManager', () => {\r\n  let sessionManager: SessionManager;\r\n  let mockUser: User;\r\n\r\n  beforeEach(() => {\r\n    sessionManager = new SessionManager({\r\n      sessionTimeout: 60 * 60 * 1000, // 1 hour for testing\r\n      maxIdleTime: 30 * 60 * 1000, // 30 minutes\r\n      maxConcurrentSessions: 2,\r\n      pinRot",
        "lineCount": 308,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\setup.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\setup.ts",
        "size": 464,
        "modified": "2025-08-23T14:28:15.762Z",
        "extension": ".ts",
        "basename": "setup.ts",
        "directory": "app\\panel\\src\\__tests__",
        "content": "import { beforeEach, afterEach } from 'vitest';\r\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\r\n\r\nlet testDbManager: DatabaseManager;\r\n\r\nbeforeEach(async () => {\r\n  // Create a test database\r\n  testDbManager = DatabaseManager.getInstance({\r\n    path: ':memory:'\r\n  });\r\n  await testDbManager.initialize();\r\n});\r\n\r\nafterEach(async () => {\r\n  if (testDbManager) {\r\n    testDbManager.close();\r\n  }\r\n});\r\n\r\nexport { testDbManager };\r\n",
        "lineCount": 21,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\ui-improvements\\accessibility-audit-tool.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\ui-improvements directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\ui-improvements\\accessibility-audit-tool.ts",
        "size": 21089,
        "modified": "2025-08-28T03:45:52.483Z",
        "extension": ".ts",
        "basename": "accessibility-audit-tool.ts",
        "directory": "app\\panel\\src\\__tests__\\ui-improvements",
        "content": "/**\r\n * Accessibility Audit Tool for Admin Panel UI Improvements\r\n * Task 7: Validate accessibility and usability improvements\r\n * \r\n * This tool performs automated accessibility audits on the admin panel\r\n * and generates reports for compliance validation.\r\n */\r\n\r\ninterface AccessibilityIssue {\r\n  severity: 'error' | 'warning' | 'info';\r\n  element: string;\r\n  issue: string;\r\n  recommendation: string;\r\n  wcagReference?: string;\r\n}\r\n\r\ninterface AccessibilityReport {\r\n  timestamp: string;\r\n  total",
        "lineCount": 572,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\ui-improvements\\accessibility-enhancements.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\ui-improvements directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\ui-improvements\\accessibility-enhancements.js",
        "size": 22512,
        "modified": "2025-08-28T03:48:29.025Z",
        "extension": ".js",
        "basename": "accessibility-enhancements.js",
        "directory": "app\\panel\\src\\__tests__\\ui-improvements",
        "content": "/**\r\n * Accessibility Enhancements for Admin Panel UI\r\n * Task 7: Validate accessibility and usability improvements\r\n * \r\n * This script adds accessibility features to the existing admin panel\r\n * to ensure WCAG 2.1 AA compliance and improve usability.\r\n */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    console.log('🔧 Initializing accessibility enhancements...');\r\n\r\n    /**\r\n     * Accessibility Enhancement Manager\r\n     */\r\n    class AccessibilityEnhancer {\r\n        constructor() {\r\n            th",
        "lineCount": 582,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\ui-improvements\\accessibility-validation-report.md": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\ui-improvements directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\ui-improvements\\accessibility-validation-report.md",
        "size": 11031,
        "modified": "2025-08-28T03:50:54.074Z",
        "extension": ".md",
        "basename": "accessibility-validation-report.md",
        "directory": "app\\panel\\src\\__tests__\\ui-improvements",
        "content": "\n# Accessibility Validation Report\n## Admin Panel UI Improvements - Task 7\n\n**Generated:** 28.08.2025 06:50:53\n**Overall Status:** PASS\n**Compliance:** 100% (15/15 requirements met)\n\n## Executive Summary\n\nThe Admin Panel UI Improvements have successfully implemented comprehensive accessibility enhancements that meet WCAG 2.1 AA standards. All critical accessibility requirements have been addressed with robust implementations.\n\n### Key Achievements:\n- ✅ **100% WCAG AA Color Contrast Compliance** ",
        "lineCount": 362,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\ui-improvements\\accessibility-validation.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\ui-improvements directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\ui-improvements\\accessibility-validation.test.ts",
        "size": 19055,
        "modified": "2025-08-28T03:43:19.247Z",
        "extension": ".ts",
        "basename": "accessibility-validation.test.ts",
        "directory": "app\\panel\\src\\__tests__\\ui-improvements",
        "content": "/**\r\n * Accessibility Validation Tests for Admin Panel UI Improvements\r\n * Task 7: Validate accessibility and usability improvements\r\n * \r\n * Tests keyboard navigation, screen reader compatibility, color contrast,\r\n * color blindness support, and touch interface compatibility.\r\n */\r\n\r\nimport { describe, test, expect, beforeEach, afterEach } from 'vitest';\r\n\r\n// Mock DOM environment for testing\r\nconst mockDocument = {\r\n  createElement: (tag: string) => ({\r\n    tagName: tag.toUpperCase(),\r\n    cla",
        "lineCount": 528,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\ui-improvements\\ACCESSIBILITY_VALIDATION_SUMMARY.md": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\ui-improvements directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\ui-improvements\\ACCESSIBILITY_VALIDATION_SUMMARY.md",
        "size": 10120,
        "modified": "2025-08-28T03:51:45.719Z",
        "extension": ".md",
        "basename": "ACCESSIBILITY_VALIDATION_SUMMARY.md",
        "directory": "app\\panel\\src\\__tests__\\ui-improvements",
        "content": "# Accessibility Validation Summary\r\n## Task 7: Validate accessibility and usability improvements\r\n\r\n**Status:** ✅ COMPLETED  \r\n**Date:** August 28, 2025  \r\n**WCAG Compliance:** 2.1 AA (100%)  \r\n\r\n## Overview\r\n\r\nTask 7 has been successfully completed with comprehensive accessibility validation and implementation of all required improvements for the Admin Panel UI. All sub-tasks have been addressed with robust, production-ready solutions.\r\n\r\n## Sub-task Completion Status\r\n\r\n### ✅ 7.1 Keyboard Navi",
        "lineCount": 229,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\ui-improvements\\api-integration.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\ui-improvements directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\ui-improvements\\api-integration.test.ts",
        "size": 15978,
        "modified": "2025-08-28T03:35:23.903Z",
        "extension": ".ts",
        "basename": "api-integration.test.ts",
        "directory": "app\\panel\\src\\__tests__\\ui-improvements",
        "content": "/**\r\n * Integration Tests for API Response Handling\r\n * Task 6.3: Add integration tests to verify API response handling with enhanced owner information\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, vi, afterEach } from 'vitest';\r\n\r\n// Mock fetch globally\r\nconst mockFetch = vi.fn();\r\nglobal.fetch = mockFetch;\r\n\r\n// Mock console methods to avoid noise in tests\r\nconst consoleSpy = {\r\n  log: vi.spyOn(console, 'log').mockImplementation(() => {}),\r\n  warn: vi.spyOn(console, 'warn').mockImplementa",
        "lineCount": 534,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\ui-improvements\\click-to-select.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\ui-improvements directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\ui-improvements\\click-to-select.test.ts",
        "size": 15166,
        "modified": "2025-08-28T03:37:25.713Z",
        "extension": ".ts",
        "basename": "click-to-select.test.ts",
        "directory": "app\\panel\\src\\__tests__\\ui-improvements",
        "content": "/**\r\n * Click-to-Select Functionality Tests\r\n * Task 6.5: Test click-to-select functionality across different browsers and devices\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, vi, afterEach } from 'vitest';\r\n\r\n// Mock DOM APIs\r\nconst mockDocument = {\r\n  createRange: vi.fn(),\r\n  execCommand: vi.fn()\r\n};\r\n\r\nconst mockWindow = {\r\n  getSelection: vi.fn()\r\n};\r\n\r\nconst mockSelection = {\r\n  removeAllRanges: vi.fn(),\r\n  addRange: vi.fn()\r\n};\r\n\r\nconst mockRange = {\r\n  selectNodeContents: vi.fn()\r\n}",
        "lineCount": 482,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\ui-improvements\\comprehensive-coverage.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\ui-improvements directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\ui-improvements\\comprehensive-coverage.test.ts",
        "size": 20108,
        "modified": "2025-08-28T03:38:48.016Z",
        "extension": ".ts",
        "basename": "comprehensive-coverage.test.ts",
        "directory": "app\\panel\\src\\__tests__\\ui-improvements",
        "content": "/**\r\n * Comprehensive Test Coverage for UI Improvements\r\n * Task 6.6: Ensure all requirements have testing coverage\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, vi } from 'vitest';\r\n\r\n// Import all the services and functions we're testing\r\nconst StatusTranslationService = {\r\n  translateStatus: (dbStatus: string) => {\r\n    const translations: Record<string, string> = {\r\n      'Free': 'Boş',\r\n      'Owned': 'Sahipli',\r\n      'Reserved': 'Rezerve',\r\n      'Opening': 'Açılıyor',\r\n      'Blocke",
        "lineCount": 523,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\ui-improvements\\generate-accessibility-report.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\ui-improvements directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\ui-improvements\\generate-accessibility-report.ts",
        "size": 17889,
        "modified": "2025-08-28T03:50:44.940Z",
        "extension": ".ts",
        "basename": "generate-accessibility-report.ts",
        "directory": "app\\panel\\src\\__tests__\\ui-improvements",
        "content": "/**\r\n * Accessibility Report Generator\r\n * Task 7: Validate accessibility and usability improvements\r\n * \r\n * Generates comprehensive accessibility validation reports\r\n * for the admin panel UI improvements.\r\n */\r\n\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\ninterface AccessibilityValidationResult {\r\n  category: string;\r\n  requirement: string;\r\n  status: 'pass' | 'fail' | 'partial' | 'not-tested';\r\n  details: string;\r\n  wcagReference?: string;\r\n  evidence?: string[];\r\n  recommendations?: ",
        "lineCount": 487,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\ui-improvements\\README.md": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\ui-improvements directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\ui-improvements\\README.md",
        "size": 6725,
        "modified": "2025-08-28T03:40:21.670Z",
        "extension": ".md",
        "basename": "README.md",
        "directory": "app\\panel\\src\\__tests__\\ui-improvements",
        "content": "# UI Improvements Test Suite\r\n\r\nThis directory contains comprehensive tests for the Admin Panel UI Improvements feature (Task 6).\r\n\r\n## Test Files Created\r\n\r\n### 1. Status Translation Tests (`status-translation.test.ts`)\r\n- **Coverage**: Requirement 2 - Locker Status Text Correction\r\n- **Tests**: \r\n  - Turkish translation mappings for all status types\r\n  - Error handling for invalid/null status values\r\n  - CSS class generation for status indicators\r\n  - Consistency between translations and class",
        "lineCount": 180,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\ui-improvements\\rfid-display.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\ui-improvements directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\ui-improvements\\rfid-display.test.ts",
        "size": 12895,
        "modified": "2025-08-28T03:34:19.780Z",
        "extension": ".ts",
        "basename": "rfid-display.test.ts",
        "directory": "app\\panel\\src\\__tests__\\ui-improvements",
        "content": "/**\r\n * Unit Tests for RFID Display Service\r\n * Task 6.2: Create tests for RFID number formatting and display logic\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, vi } from 'vitest';\r\n\r\n// Mock the RfidDisplayService from lockers.html\r\nconst RfidDisplayService = {\r\n  formatOwnerDisplay: function(ownerKey: string, ownerType: string): string {\r\n    try {\r\n      if (!ownerKey || !ownerType) {\r\n        return 'Yok';\r\n      }\r\n\r\n      if (ownerType === 'rfid') {\r\n        // Validate RFID format (",
        "lineCount": 355,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\ui-improvements\\run-accessibility-validation.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\ui-improvements directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\ui-improvements\\run-accessibility-validation.ts",
        "size": 16403,
        "modified": "2025-08-28T03:47:08.112Z",
        "extension": ".ts",
        "basename": "run-accessibility-validation.ts",
        "directory": "app\\panel\\src\\__tests__\\ui-improvements",
        "content": "/**\r\n * Accessibility Validation Runner\r\n * Task 7: Validate accessibility and usability improvements\r\n * \r\n * This script runs comprehensive accessibility validation tests\r\n * and generates reports for the admin panel UI improvements.\r\n */\r\n\r\nimport { describe, test, expect, beforeAll, afterAll } from 'vitest';\r\nimport { AccessibilityAuditor, AccessibilityReport } from './accessibility-audit-tool';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\n// Mock browser environment for testing\r\nconst",
        "lineCount": 444,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\ui-improvements\\run-ui-tests.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\ui-improvements directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\ui-improvements\\run-ui-tests.ts",
        "size": 2080,
        "modified": "2025-08-28T03:39:02.402Z",
        "extension": ".ts",
        "basename": "run-ui-tests.ts",
        "directory": "app\\panel\\src\\__tests__\\ui-improvements",
        "content": "/**\r\n * Test Runner for UI Improvements\r\n * Runs all UI improvement tests and generates coverage report\r\n */\r\n\r\nimport { describe, it, expect } from 'vitest';\r\n\r\ndescribe('UI Improvements Test Suite', () => {\r\n  it('should run all UI improvement tests', () => {\r\n    // This test serves as a placeholder to ensure the test suite runs\r\n    expect(true).toBe(true);\r\n  });\r\n\r\n  it('should verify test coverage for all requirements', () => {\r\n    const requiredTestFiles = [\r\n      'status-translation.t",
        "lineCount": 63,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\ui-improvements\\status-translation.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\ui-improvements directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\ui-improvements\\status-translation.test.ts",
        "size": 7323,
        "modified": "2025-08-28T03:33:20.253Z",
        "extension": ".ts",
        "basename": "status-translation.test.ts",
        "directory": "app\\panel\\src\\__tests__\\ui-improvements",
        "content": "/**\r\n * Unit Tests for Status Translation Service\r\n * Task 6.1: Write unit tests for status translation functions to ensure correct Turkish mappings\r\n */\r\n\r\nimport { describe, it, expect, beforeEach } from 'vitest';\r\n\r\n// Mock the StatusTranslationService from lockers.html\r\nconst StatusTranslationService = {\r\n  statusTranslations: {\r\n    'Free': 'Boş',\r\n    'Owned': 'Sahipli',\r\n    'Reserved': 'Rezerve', \r\n    'Opening': 'Açılıyor',\r\n    'Blocked': 'Engelli',\r\n    'Error': 'Hata'\r\n  },\r\n\r\n  stat",
        "lineCount": 196,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\ui-improvements\\visual-regression.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\ui-improvements directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\ui-improvements\\visual-regression.test.ts",
        "size": 14333,
        "modified": "2025-08-28T03:36:24.483Z",
        "extension": ".ts",
        "basename": "visual-regression.test.ts",
        "directory": "app\\panel\\src\\__tests__\\ui-improvements",
        "content": "/**\r\n * Visual Regression Tests for Color Scheme and Layout Consistency\r\n * Task 6.4: Implement visual regression tests for color scheme and layout consistency\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, vi } from 'vitest';\r\n\r\n// Mock DOM environment for testing\r\nconst createMockElement = (tagName: string = 'div') => {\r\n  const element = {\r\n    tagName: tagName.toUpperCase(),\r\n    classList: {\r\n      add: vi.fn(),\r\n      remove: vi.fn(),\r\n      contains: vi.fn(),\r\n      toggle: vi.fn()\r\n ",
        "lineCount": 421,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\validation\\end-of-day-csv-validation.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__\\validation directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\validation\\end-of-day-csv-validation.test.ts",
        "size": 19569,
        "modified": "2025-08-23T14:28:15.820Z",
        "extension": ".ts",
        "basename": "end-of-day-csv-validation.test.ts",
        "directory": "app\\panel\\src\\__tests__\\validation",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { DatabaseManager } from '../../../../../shared/database/database-manager';\r\nimport { LockerRepository } from '../../../../../shared/database/locker-repository';\r\nimport { VipContractRepository } from '../../../../../shared/database/vip-contract-repository';\r\nimport { EventLogger } from '../../../../../shared/services/event-logger';\r\nimport { HeartbeatManager } from '../../../../../shared/services/heartbeat-manager",
        "lineCount": 510,
        "isEmpty": false
      }
    },
    "app\\panel\\src\\__tests__\\vip-routes.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel\\src\\__tests__ directory"
      ],
      "metadata": {
        "path": "app\\panel\\src\\__tests__\\vip-routes.test.ts",
        "size": 21625,
        "modified": "2025-08-23T14:28:15.778Z",
        "extension": ".ts",
        "basename": "vip-routes.test.ts",
        "directory": "app\\panel\\src\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach } from 'vitest';\r\nimport Fastify from 'fastify';\r\nimport { DatabaseManager } from '../../../../shared/database/database-manager';\r\nimport { vipRoutes } from '../routes/vip-routes';\r\nimport { AuthService } from '../services/auth-service';\r\nimport { SessionManager } from '../services/session-manager';\r\n\r\ndescribe('VIP Routes', () => {\r\n  let fastify: any;\r\n  let dbManager: DatabaseManager;\r\n  let authService: AuthService;\r\n  let sessionManager: ",
        "lineCount": 599,
        "isEmpty": false
      }
    },
    "app\\panel\\tsconfig.json": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel directory"
      ],
      "metadata": {
        "path": "app\\panel\\tsconfig.json",
        "size": 491,
        "modified": "2025-08-23T14:23:45.691Z",
        "extension": ".json",
        "basename": "tsconfig.json",
        "directory": "app\\panel",
        "content": "{\r\n  \"extends\": \"../../tsconfig.json\",\r\n  \"compilerOptions\": {\r\n    \"outDir\": \"./dist\",\r\n    \"rootDir\": \"./src\",\r\n    \"moduleResolution\": \"node\",\r\n    \"allowSyntheticDefaultImports\": true,\r\n    \"esModuleInterop\": true,\r\n    \"baseUrl\": \".\",\r\n    \"composite\": true,\r\n    \"paths\": {\r\n      \"../shared/*\": [\"../../shared/*\"],\r\n      \"../../shared/*\": [\"../../shared/*\"]\r\n    }\r\n  },\r\n  \"include\": [\r\n    \"src/**/*\"\r\n  ],\r\n  \"exclude\": [\r\n    \"node_modules\",\r\n    \"dist\",\r\n    \"__tests__\"\r\n  ]\r\n}",
        "lineCount": 24,
        "isEmpty": false
      }
    },
    "app\\panel\\tsconfig.tsbuildinfo": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel directory"
      ],
      "metadata": {
        "path": "app\\panel\\tsconfig.tsbuildinfo",
        "size": 78427,
        "modified": "2025-08-25T23:19:55.220Z",
        "extension": ".tsbuildinfo",
        "basename": "tsconfig.tsbuildinfo",
        "directory": "app\\panel",
        "content": "{\"fileNames\":[\"../../node_modules/typescript/lib/lib.es5.d.ts\",\"../../node_modules/typescript/lib/lib.es2015.d.ts\",\"../../node_modules/typescript/lib/lib.es2016.d.ts\",\"../../node_modules/typescript/lib/lib.es2017.d.ts\",\"../../node_modules/typescript/lib/lib.es2018.d.ts\",\"../../node_modules/typescript/lib/lib.es2019.d.ts\",\"../../node_modules/typescript/lib/lib.es2020.d.ts\",\"../../node_modules/typescript/lib/lib.dom.d.ts\",\"../../node_modules/typescript/lib/lib.dom.iterable.d.ts\",\"../../node_module",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "app\\panel\\vitest.config.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in app\\panel directory"
      ],
      "metadata": {
        "path": "app\\panel\\vitest.config.ts",
        "size": 221,
        "modified": "2025-08-28T07:44:14.510Z",
        "extension": ".ts",
        "basename": "vitest.config.ts",
        "directory": "app\\panel",
        "content": "import { defineConfig } from 'vitest/config';\r\n\r\nexport default defineConfig({\r\n  test: {\r\n    environment: 'node',\r\n    globals: true,\r\n  },\r\n  resolve: {\r\n    alias: {\r\n      '@shared': '../../shared'\r\n    }\r\n  }\r\n});\r\n",
        "lineCount": 14,
        "isEmpty": false
      }
    },
    "assets\\index-D_ryMEPs.js": {
      "primary": "active",
      "confidence": "medium",
      "reasons": [
        "Contains active keywords: function, type",
        "Contains config keywords: config"
      ],
      "alternatives": [
        "config"
      ],
      "metadata": {
        "path": "assets\\index-D_ryMEPs.js",
        "size": 696555,
        "modified": "2025-08-22T21:51:31.718Z",
        "extension": ".js",
        "basename": "index-D_ryMEPs.js",
        "directory": "assets",
        "content": "var Sk=Object.defineProperty;var _k=(e,t,n)=>t in e?Sk(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var ji=(e,t,n)=>_k(e,typeof t!=\"symbol\"?t+\"\":t,n);(function(){const t=document.createElement(\"link\").relList;if(t&&t.supports&&t.supports(\"modulepreload\"))return;for(const s of document.querySelectorAll('link[rel=\"modulepreload\"]'))i(s);new MutationObserver(s=>{for(const l of s)if(l.type===\"childList\")for(const u of l.addedNodes)u.tagName===\"LINK\"&&u.rel===\"modulepreload\"&&i(u)}",
        "lineCount": 59,
        "isEmpty": false
      }
    },
    "assets\\index-X8b7Z_4p.css": {
      "primary": "active",
      "confidence": "low",
      "reasons": [
        "Contains active keywords: var"
      ],
      "alternatives": [],
      "metadata": {
        "path": "assets\\index-X8b7Z_4p.css",
        "size": 76825,
        "modified": "2025-08-22T21:51:30.479Z",
        "extension": ".css",
        "basename": "index-X8b7Z_4p.css",
        "directory": "assets",
        "content": "#tester-container[data-v-9fd23e63]:not([data-ready]){width:100%;height:100%;display:flex;align-items:center;justify-content:center}[data-ready] #tester-ui[data-v-9fd23e63]{width:var(--viewport-width);height:var(--viewport-height);transform:var(--tester-transform);margin-left:var(--tester-margin-left)}.scrolls[data-v-93900314]{place-items:center}.CodeMirror-simplescroll-horizontal div,.CodeMirror-simplescroll-vertical div{position:absolute;background:#ccc;-moz-box-sizing:border-box;box-sizing:bor",
        "lineCount": 2,
        "isEmpty": false
      }
    },
    "cleanup-opening-lockers.sql": {
      "primary": "legacy",
      "confidence": "medium",
      "reasons": [
        "Matches legacy filename pattern",
        "Contains active keywords: type"
      ],
      "alternatives": [
        "active"
      ],
      "metadata": {
        "path": "cleanup-opening-lockers.sql",
        "size": 278,
        "modified": "2025-08-28T04:35:28.521Z",
        "extension": ".sql",
        "basename": "cleanup-opening-lockers.sql",
        "directory": ".",
        "content": "-- Clean up lockers stuck in Opening status\r\nUPDATE lockers \r\nSET status = 'Free', \r\n    owner_key = NULL, \r\n    owner_type = NULL,\r\n    updated_at = datetime('now')\r\nWHERE status = 'Opening';\r\n\r\n-- Show the result\r\nSELECT status, COUNT(*) as count FROM lockers GROUP BY status;",
        "lineCount": 10,
        "isEmpty": false
      }
    },
    "config\\development.json": {
      "primary": "config",
      "confidence": "high",
      "reasons": [
        "Located in config directory"
      ],
      "metadata": {
        "path": "config\\development.json",
        "size": 1340,
        "modified": "2025-08-22T19:33:55.327Z",
        "extension": ".json",
        "basename": "development.json",
        "directory": "config",
        "content": "{\r\n  \"system\": {\r\n    \"name\": \"Eform Locker Room System - Development\",\r\n    \"environment\": \"development\",\r\n    \"debug\": true,\r\n    \"verbose_logging\": true\r\n  },\r\n  \"security\": {\r\n    \"provisioning_secret\": \"dev-secret-not-for-production\",\r\n    \"session_secret\": \"dev-session-secret-not-for-production\",\r\n    \"qr_hmac_secret\": \"dev-qr-secret-not-for-production\",\r\n    \"rate_limiting_strict\": false,\r\n    \"lockout_duration_minutes\": 1\r\n  },\r\n  \"database\": {\r\n    \"backup_interval_hours\": 24,\r\n    \"ret",
        "lineCount": 55,
        "isEmpty": false
      }
    },
    "config\\production-final.json": {
      "primary": "config",
      "confidence": "high",
      "reasons": [
        "Located in config directory"
      ],
      "metadata": {
        "path": "config\\production-final.json",
        "size": 5902,
        "modified": "2025-08-22T21:19:37.717Z",
        "extension": ".json",
        "basename": "production-final.json",
        "directory": "config",
        "content": "{\r\n  \"system\": {\r\n    \"name\": \"Eform Locker Room System - Production\",\r\n    \"version\": \"1.0.0\",\r\n    \"environment\": \"production\",\r\n    \"location\": \"Locker Room - Raspberry Pi\",\r\n    \"installation_date\": \"2025-08-22\",\r\n    \"hardware_platform\": \"raspberry_pi_4\",\r\n    \"debug\": false,\r\n    \"verbose_logging\": false,\r\n    \"system_id\": \"a989f2a872c366b2\",\r\n    \"setup_date\": \"2025-08-22T19:54:30.829Z\"\r\n  },\r\n  \"database\": {\r\n    \"path\": \"./data/eform.db\",\r\n    \"wal_mode\": true,\r\n    \"backup_interval_hou",
        "lineCount": 218,
        "isEmpty": false
      }
    },
    "config\\production.json": {
      "primary": "config",
      "confidence": "high",
      "reasons": [
        "Located in config directory"
      ],
      "metadata": {
        "path": "config\\production.json",
        "size": 1336,
        "modified": "2025-08-22T19:33:44.175Z",
        "extension": ".json",
        "basename": "production.json",
        "directory": "config",
        "content": "{\r\n  \"system\": {\r\n    \"name\": \"Eform Locker Room System - Production\",\r\n    \"environment\": \"production\",\r\n    \"debug\": false,\r\n    \"verbose_logging\": false\r\n  },\r\n  \"security\": {\r\n    \"provisioning_secret\": \"CHANGE-THIS-STRONG-SECRET-IN-PRODUCTION-2025\",\r\n    \"session_secret\": \"CHANGE-THIS-SESSION-SECRET-IN-PRODUCTION-2025\", \r\n    \"qr_hmac_secret\": \"CHANGE-THIS-QR-HMAC-SECRET-IN-PRODUCTION-2025\",\r\n    \"force_https\": false,\r\n    \"secure_cookies\": false,\r\n    \"cors_enabled\": false,\r\n    \"rate_limi",
        "lineCount": 53,
        "isEmpty": false
      }
    },
    "config\\README.md": {
      "primary": "config",
      "confidence": "high",
      "reasons": [
        "Located in config directory"
      ],
      "metadata": {
        "path": "config\\README.md",
        "size": 5295,
        "modified": "2025-08-22T19:34:57.588Z",
        "extension": ".md",
        "basename": "README.md",
        "directory": "config",
        "content": "# Eform Locker System Configuration\r\n\r\nThis directory contains configuration files for the Eform Locker System running on Raspberry Pi.\r\n\r\n## Configuration Files\r\n\r\n### `system.json`\r\nMain system configuration with all default settings optimized for Raspberry Pi hardware.\r\n\r\n### `production.json`\r\nProduction environment overrides with security hardening and performance optimizations.\r\n\r\n### `development.json`\r\nDevelopment environment overrides with debugging enabled and relaxed security.\r\n\r\n## Q",
        "lineCount": 199,
        "isEmpty": false
      }
    },
    "config\\system.json": {
      "primary": "config",
      "confidence": "high",
      "reasons": [
        "Located in config directory"
      ],
      "metadata": {
        "path": "config\\system.json",
        "size": 5089,
        "modified": "2025-08-22T21:19:37.718Z",
        "extension": ".json",
        "basename": "system.json",
        "directory": "config",
        "content": "{\r\n  \"system\": {\r\n    \"name\": \"Eform Locker Room System\",\r\n    \"version\": \"1.0.0\",\r\n    \"environment\": \"production\",\r\n    \"location\": \"Locker Room - Raspberry Pi\",\r\n    \"installation_date\": \"2025-08-22\",\r\n    \"hardware_platform\": \"raspberry_pi_4\"\r\n  },\r\n  \"database\": {\r\n    \"path\": \"./data/eform.db\",\r\n    \"wal_mode\": true,\r\n    \"backup_interval_hours\": 6,\r\n    \"retention_days\": 90,\r\n    \"vacuum_interval_hours\": 168,\r\n    \"checkpoint_interval_seconds\": 300\r\n  },\r\n  \"services\": {\r\n    \"gateway\": {",
        "lineCount": 188,
        "isEmpty": false
      }
    },
    "data\\eform.db": {
      "primary": "unknown",
      "confidence": "low",
      "reasons": [
        "No matching patterns or content indicators"
      ],
      "metadata": {
        "path": "data\\eform.db",
        "size": 516096,
        "modified": "2025-08-27T20:38:29.157Z",
        "extension": ".db",
        "basename": "eform.db",
        "directory": "data",
        "content": "[BINARY FILE]",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "data\\eform.db-shm": {
      "primary": "unknown",
      "confidence": "low",
      "reasons": [
        "No matching patterns or content indicators"
      ],
      "metadata": {
        "path": "data\\eform.db-shm",
        "size": 32768,
        "modified": "2025-08-28T08:02:29.348Z",
        "extension": ".db-shm",
        "basename": "eform.db-shm",
        "directory": "data",
        "content": "[BINARY FILE]",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "data\\eform.db-wal": {
      "primary": "unknown",
      "confidence": "low",
      "reasons": [
        "No matching patterns or content indicators"
      ],
      "metadata": {
        "path": "data\\eform.db-wal",
        "size": 16512,
        "modified": "2025-08-28T08:03:32.340Z",
        "extension": ".db-wal",
        "basename": "eform.db-wal",
        "directory": "data",
        "content": "[BINARY FILE]",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "debug-maksisoft-button-click.js": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains active keywords: function, const",
        "Contains temporary keywords: debug"
      ],
      "alternatives": [
        "active",
        "temporary"
      ],
      "metadata": {
        "path": "debug-maksisoft-button-click.js",
        "size": 1739,
        "modified": "2025-08-28T19:33:04.453Z",
        "extension": ".js",
        "basename": "debug-maksisoft-button-click.js",
        "directory": ".",
        "content": "// Debug script to test Maksisoft button click functionality\r\n// Run this in browser console on the lockers page\r\n\r\nconsole.log('🔍 Debugging Maksisoft Button Click Issue');\r\n\r\n// Check if buttons exist\r\nconst maksiButtons = document.querySelectorAll('.btn-maksi');\r\nconsole.log('📊 Found Maksisoft buttons:', maksiButtons.length);\r\n\r\nmaksiButtons.forEach((btn, index) => {\r\n    console.log(`Button ${index + 1}:`, {\r\n        text: btn.textContent.trim(),\r\n        lockerId: btn.dataset.lockerId,\r\n  ",
        "lineCount": 52,
        "isEmpty": false
      }
    },
    "debug-maksisoft-button-issue.js": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains config keywords: configuration, config",
        "Contains active keywords: function, const"
      ],
      "alternatives": [
        "config",
        "active"
      ],
      "metadata": {
        "path": "debug-maksisoft-button-issue.js",
        "size": 9478,
        "modified": "2025-08-28T09:10:49.368Z",
        "extension": ".js",
        "basename": "debug-maksisoft-button-issue.js",
        "directory": ".",
        "content": "/**\r\n * Debug Script for Maksisoft Button Issue\r\n * \r\n * This script helps diagnose why the \"Üye Bilgisi\" button is not working\r\n */\r\n\r\nconst http = require('http');\r\n\r\n// Test configuration\r\nconst PI_HOST = '192.168.1.8';\r\nconst PI_PORT = 3001;\r\nconst TEST_RFID = '0006851540'; // Known working RFID\r\n\r\n/**\r\n * Make HTTP request to test API\r\n */\r\nfunction makeRequest(path) {\r\n    return new Promise((resolve, reject) => {\r\n        const options = {\r\n            hostname: PI_HOST,\r\n            port",
        "lineCount": 262,
        "isEmpty": false
      }
    },
    "debug-maksisoft-buttons.js": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains temporary keywords: debug",
        "Contains active keywords: const"
      ],
      "alternatives": [
        "temporary",
        "active"
      ],
      "metadata": {
        "path": "debug-maksisoft-buttons.js",
        "size": 2225,
        "modified": "2025-08-28T08:23:07.598Z",
        "extension": ".js",
        "basename": "debug-maksisoft-buttons.js",
        "directory": ".",
        "content": "// Debug script to check Maksisoft button visibility\r\n// Run this in the browser console on the lockers page\r\n\r\nconsole.log('🔍 Debugging Maksisoft buttons...');\r\n\r\n// Check if buttons exist in DOM\r\nconst maksiButtons = document.querySelectorAll('.btn-maksi');\r\nconsole.log(`📊 Found ${maksiButtons.length} Maksisoft buttons in DOM`);\r\n\r\nif (maksiButtons.length > 0) {\r\n    console.log('✅ Buttons exist in DOM');\r\n    \r\n    // Check visibility\r\n    maksiButtons.forEach((btn, index) => {\r\n        con",
        "lineCount": 62,
        "isEmpty": false
      }
    },
    "debug-maksisoft-error.js": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains temporary keywords: debug",
        "Contains active keywords: var"
      ],
      "alternatives": [
        "temporary",
        "active"
      ],
      "metadata": {
        "path": "debug-maksisoft-error.js",
        "size": 3569,
        "modified": "2025-08-28T17:48:54.125Z",
        "extension": ".js",
        "basename": "debug-maksisoft-error.js",
        "directory": ".",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Debug script to identify the exact error from Maksisoft service\r\n */\r\n\r\n// Set environment variables\r\nprocess.env.MAKSI_BASE = 'https://eformhatay.maksionline.com';\r\nprocess.env.MAKSI_SEARCH_PATH = '/react-system/api_php/user_search/users.php';\r\nprocess.env.MAKSI_CRITERIA_FOR_RFID = '0';\r\nprocess.env.MAKSI_BOOTSTRAP_COOKIE = 'AC-C=ac-c; PHPSESSID=gcd3j9rreagcc990n7g555qlm5';\r\nprocess.env.MAKSI_ENABLED = 'true';\r\n\r\nconsole.log('🔍 Testing Maksisoft service directly.",
        "lineCount": 101,
        "isEmpty": false
      }
    },
    "demo\\codex-like-login.html": {
      "primary": "active",
      "confidence": "low",
      "reasons": [
        "Contains active keywords: type, var"
      ],
      "alternatives": [],
      "metadata": {
        "path": "demo\\codex-like-login.html",
        "size": 7491,
        "modified": "2025-08-28T19:34:02.172Z",
        "extension": ".html",
        "basename": "codex-like-login.html",
        "directory": "demo",
        "content": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <title>Codex-like Login Background</title>\n    <style>\n      :root {\n        --bg-0: #0f1115;\n        --bg-1: #0b0d12;\n        --ink: #cfd3da;\n        --ink-dim: #a5acb8;\n      }\n\n      html, body {\n        height: 100%;\n      }\n      body {\n        margin: 0;\n        color: var(--ink);\n        font-family: ui-sans-serif, system-ui, -apple-system, ",
        "lineCount": 224,
        "isEmpty": false
      }
    },
    "deploy-maksisoft-to-pi.ps1": {
      "primary": "documentation",
      "confidence": "low",
      "reasons": [
        "Contains documentation keywords: # ",
        "Contains build keywords: deploy"
      ],
      "alternatives": [
        "build"
      ],
      "metadata": {
        "path": "deploy-maksisoft-to-pi.ps1",
        "size": 3702,
        "modified": "2025-08-28T08:15:39.284Z",
        "extension": ".ps1",
        "basename": "deploy-maksisoft-to-pi.ps1",
        "directory": ".",
        "content": "# Deploy Maksisoft Integration to Raspberry Pi\r\n# This script deploys the Maksisoft integration to your Pi\r\n\r\nWrite-Host \"🚀 Deploying Maksisoft Integration to Raspberry Pi...\" -ForegroundColor Green\r\nWrite-Host \"\"\r\n\r\n# Step 1: Deploy code to Pi\r\nWrite-Host \"📦 Step 1: Deploying code to Pi...\" -ForegroundColor Yellow\r\n$result = ssh pi@pi-eform-locker \"cd /home/pi/eform-locker && git pull origin main\"\r\nif ($LASTEXITCODE -eq 0) {\r\n    Write-Host \"✅ Code deployed successfully\" -ForegroundColor Gree",
        "lineCount": 83,
        "isEmpty": false
      }
    },
    "deploy-maksisoft-to-pi.sh": {
      "primary": "build",
      "confidence": "low",
      "reasons": [
        "Contains build keywords: build, deploy",
        "Contains documentation keywords: # "
      ],
      "alternatives": [
        "documentation"
      ],
      "metadata": {
        "path": "deploy-maksisoft-to-pi.sh",
        "size": 2291,
        "modified": "2025-08-28T08:15:04.302Z",
        "extension": ".sh",
        "basename": "deploy-maksisoft-to-pi.sh",
        "directory": ".",
        "content": "#!/bin/bash\n\n# Deploy Maksisoft Integration to Raspberry Pi\n# This script deploys the Maksisoft integration to your Pi\n\necho \"🚀 Deploying Maksisoft Integration to Raspberry Pi...\"\necho \"\"\n\n# Step 1: Deploy code to Pi\necho \"📦 Step 1: Deploying code to Pi...\"\nif ssh pi@pi-eform-locker \"cd /home/pi/eform-locker && git pull origin main\"; then\n    echo \"✅ Code deployed successfully\"\nelse\n    echo \"❌ Failed to deploy code\"\n    exit 1\nfi\n\n# Step 2: Build panel service on Pi\necho \"🔨 Step 2: Building ",
        "lineCount": 73,
        "isEmpty": false
      }
    },
    "deploy-status-fix.ps1": {
      "primary": "redundant",
      "confidence": "low",
      "reasons": [
        "Contains redundant keywords: duplicate",
        "Contains active keywords: class",
        "Contains documentation keywords: # "
      ],
      "alternatives": [
        "active",
        "documentation"
      ],
      "metadata": {
        "path": "deploy-status-fix.ps1",
        "size": 1375,
        "modified": "2025-08-28T04:13:24.537Z",
        "extension": ".ps1",
        "basename": "deploy-status-fix.ps1",
        "directory": ".",
        "content": "# Deploy Status Display Fix to Raspberry Pi\r\nWrite-Host \"🚀 Deploying status display fix to Raspberry Pi...\" -ForegroundColor Green\r\n\r\n# Commit changes\r\nWrite-Host \"📝 Committing changes...\" -ForegroundColor Yellow\r\ngit add .\r\ngit commit -m \"Fix locker card status display and color coding\r\n\r\nAdd missing CSS classes for opening and error status\r\nFix duplicate lines in StatusTranslationService calls\r\nUpdate real-time card updates to properly change CSS classes\r\nEnsure proper border color updates f",
        "lineCount": 31,
        "isEmpty": false
      }
    },
    "docs\\API_REFERENCE.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\API_REFERENCE.md",
        "size": 12894,
        "modified": "2025-08-26T23:36:21.696Z",
        "extension": ".md",
        "basename": "API_REFERENCE.md",
        "directory": "docs",
        "content": "# eForm Locker System - API Reference\r\n\r\n## 📋 **Overview**\r\n\r\nThis document provides comprehensive API documentation for the eForm Locker System. The system exposes REST APIs across three services for different use cases.\r\n\r\n## 🌐 **Base URLs**\r\n\r\n- **Gateway Service**: `http://192.168.1.8:3000`\r\n- **Kiosk Service**: `http://192.168.1.8:3002`  \r\n- **Panel Service**: `http://192.168.1.8:3001`\r\n\r\n## 🔐 **Authentication**\r\n\r\nMost API endpoints are open for system integration. Web interfaces use se",
        "lineCount": 664,
        "isEmpty": false
      }
    },
    "docs\\card-assignment-testing-guide.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\card-assignment-testing-guide.md",
        "size": 10687,
        "modified": "2025-08-27T05:44:27.747Z",
        "extension": ".md",
        "basename": "card-assignment-testing-guide.md",
        "directory": "docs",
        "content": "# Card Assignment Flow Testing Guide\r\n\r\nThis document provides comprehensive testing guidance for the card assignment flow implementation, covering Requirements 2.1-2.6 and related session management requirements.\r\n\r\n## Overview\r\n\r\nThe card assignment flow testing suite validates the complete user journey from RFID card scan to locker assignment, including error handling and recovery scenarios.\r\n\r\n## Test Structure\r\n\r\n### 1. Comprehensive Card Assignment Tests\r\n**File:** `scripts/test-card-assig",
        "lineCount": 351,
        "isEmpty": false
      }
    },
    "docs\\configuration-system.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\configuration-system.md",
        "size": 10696,
        "modified": "2025-08-25T12:46:15.479Z",
        "extension": ".md",
        "basename": "configuration-system.md",
        "directory": "docs",
        "content": "# Configuration Distribution System\r\n\r\nThe Configuration Distribution System provides centralized management and distribution of system configuration to all kiosks in the Eform Locker System. It implements version control, hash verification, atomic application, and rollback capabilities.\r\n\r\n## Features\r\n\r\n### ✅ Config Push Mechanism\r\n- **Version Control**: Each configuration package has a unique version identifier\r\n- **Hash Control**: SHA256 hash verification ensures configuration integrity\r\n- *",
        "lineCount": 351,
        "isEmpty": false
      }
    },
    "docs\\CROSS_PLATFORM_IMPROVEMENTS.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\CROSS_PLATFORM_IMPROVEMENTS.md",
        "size": 8088,
        "modified": "2025-08-26T00:09:18.279Z",
        "extension": ".md",
        "basename": "CROSS_PLATFORM_IMPROVEMENTS.md",
        "directory": "docs",
        "content": "# Cross-Platform Improvements for Production Deployment\r\n\r\n## Overview\r\nThis document outlines all the cross-platform compatibility improvements made to prepare the Admin Panel Relay Control system for production deployment on Raspberry Pi.\r\n\r\n## ✅ Completed Improvements\r\n\r\n### 1. Path Handling\r\n- **Issue**: Windows-specific path separators and hardcoded paths\r\n- **Solution**: Used `path.join()` everywhere for cross-platform compatibility\r\n- **Files Updated**:\r\n  - `scripts/e2e-admin-panel-relay",
        "lineCount": 276,
        "isEmpty": false
      }
    },
    "docs\\DEPLOYMENT.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\DEPLOYMENT.md",
        "size": 8036,
        "modified": "2025-08-25T23:19:40.725Z",
        "extension": ".md",
        "basename": "DEPLOYMENT.md",
        "directory": "docs",
        "content": "# Production Deployment Guide\r\n\r\n## 🚀 E2E Testing & Production Deployment\r\n\r\nThis guide covers the complete end-to-end testing and production deployment process for the Eform Locker Control System.\r\n\r\n## 📋 Pre-flight Checklist\r\n\r\n### Hardware Configuration\r\n\r\n**DIP Switch Settings:**\r\n- **Waveshare Card 1**: DIP switches set to address 1\r\n- **Waveshare Card 2**: DIP switches set to address 2  \r\n- **DIP switch 9**: OFF (9600 baud rate)\r\n- **DIP switch 10**: OFF (no parity)\r\n\r\n**RS-485 Connectio",
        "lineCount": 360,
        "isEmpty": false
      }
    },
    "docs\\DEPLOYMENT_README.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\DEPLOYMENT_README.md",
        "size": 10791,
        "modified": "2025-08-27T17:49:00.611Z",
        "extension": ".md",
        "basename": "DEPLOYMENT_README.md",
        "directory": "docs",
        "content": "# Kiosk UI Deployment Guide\r\n\r\n## Quick Start\r\n\r\n### Automated Deployment (Recommended)\r\n```bash\r\n# 1. Configure Pi model automatically\r\n./scripts/configure-pi-model.sh\r\n\r\n# 2. Deploy optimized kiosk UI\r\n./scripts/deploy-kiosk-ui.sh\r\n\r\n# 3. Validate deployment\r\n./scripts/validate-deployment.sh\r\n\r\n# 4. Check system health\r\n./scripts/health-check-kiosk.sh\r\n```\r\n\r\n### Manual Deployment\r\n```bash\r\n# 1. Stop existing services\r\nsudo systemctl stop kiosk-ui.service\r\n\r\n# 2. Build optimized UI\r\nnpm run bu",
        "lineCount": 422,
        "isEmpty": false
      }
    },
    "docs\\DEVELOPMENT_ENVIRONMENT_SETUP.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\DEVELOPMENT_ENVIRONMENT_SETUP.md",
        "size": 5134,
        "modified": "2025-08-26T17:56:30.734Z",
        "extension": ".md",
        "basename": "DEVELOPMENT_ENVIRONMENT_SETUP.md",
        "directory": "docs",
        "content": "# Development Environment Setup\r\n\r\n## 🏗️ **Development Architecture**\r\n\r\nThis project uses a **distributed development setup** where code development happens on a Windows PC and deployment/testing occurs on a Raspberry Pi hardware target.\r\n\r\n### **Development Machine (Windows PC)**\r\n- **Role**: Primary development environment\r\n- **OS**: Windows 11/10 with PowerShell\r\n- **IDE**: Kiro AI Assistant for code development\r\n- **Git**: Local repository with push access to main branch\r\n- **Tools**: \r\n  ",
        "lineCount": 178,
        "isEmpty": false
      }
    },
    "docs\\integrations\\maksisoft-integration-guide.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs\\integrations directory"
      ],
      "metadata": {
        "path": "docs\\integrations\\maksisoft-integration-guide.md",
        "size": 12685,
        "modified": "2025-08-28T20:11:25.368Z",
        "extension": ".md",
        "basename": "maksisoft-integration-guide.md",
        "directory": "docs\\integrations",
        "content": "# Maksisoft Integration Guide\r\n\r\n## Overview & Architecture\r\n\r\nThe Maksisoft integration allows the eForm Locker System to query member information from an external Maksisoft system. This integration provides a \"Üye Bilgisi\" (Member Info) button on occupied lockers that searches member details by RFID card number and displays the results in a modal popup.\r\n\r\n### System Architecture\r\n\r\n```\r\neForm Locker System → Panel Service → Maksisoft API → Member Database\r\n```\r\n\r\n**Components:**\r\n- **Hardware",
        "lineCount": 435,
        "isEmpty": false
      }
    },
    "docs\\kiosk-startup-troubleshooting.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\kiosk-startup-troubleshooting.md",
        "size": 3865,
        "modified": "2025-08-25T12:46:15.481Z",
        "extension": ".md",
        "basename": "kiosk-startup-troubleshooting.md",
        "directory": "docs",
        "content": "# Kiosk Startup Troubleshooting Guide\r\n\r\n## Common Error: \"Cannot read properties of undefined (reading 'port')\"\r\n\r\nThis error occurs when the ModbusController constructor receives an undefined config parameter.\r\n\r\n### Quick Fix\r\n\r\nRun the fix script on your Raspberry Pi:\r\n\r\n```bash\r\n# Make the script executable\r\nchmod +x scripts/fix-kiosk-startup.sh\r\n\r\n# Run the fix script\r\n./scripts/fix-kiosk-startup.sh\r\n```\r\n\r\n### Manual Fix Steps\r\n\r\n1. **Clean and rebuild the kiosk service:**\r\n   ```bash\r\n  ",
        "lineCount": 174,
        "isEmpty": false
      }
    },
    "docs\\kiosk-troubleshooting-guide.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\kiosk-troubleshooting-guide.md",
        "size": 12237,
        "modified": "2025-08-27T17:41:45.081Z",
        "extension": ".md",
        "basename": "kiosk-troubleshooting-guide.md",
        "directory": "docs",
        "content": "# Kiosk UI Troubleshooting Guide\r\n\r\n## Overview\r\n\r\nThis guide provides step-by-step troubleshooting procedures for common issues with the optimized kiosk UI system. Issues are organized by category with clear symptoms, causes, and solutions.\r\n\r\n## Quick Diagnostic Commands\r\n\r\n### System Health Check\r\n```bash\r\n# Run comprehensive health check\r\n./scripts/health-check-kiosk.sh\r\n\r\n# Check service status\r\nsudo systemctl status kiosk-ui.service\r\n\r\n# Check resource usage\r\nhtop\r\n\r\n# Check disk space\r\ndf",
        "lineCount": 586,
        "isEmpty": false
      }
    },
    "docs\\maintenance\\system-fixes-reference.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs\\maintenance directory"
      ],
      "metadata": {
        "path": "docs\\maintenance\\system-fixes-reference.md",
        "size": 13744,
        "modified": "2025-08-28T20:13:51.087Z",
        "extension": ".md",
        "basename": "system-fixes-reference.md",
        "directory": "docs\\maintenance",
        "content": "# System Maintenance & Fixes Reference\r\n\r\n## Overview\r\n\r\nThis document provides a comprehensive reference for common system issues, their resolutions, and maintenance procedures for the eForm Locker System. It consolidates knowledge from various system fixes and incidents to help with troubleshooting and prevention.\r\n\r\n## Common System Issues\r\n\r\n### 1. WebSocket Connection Problems\r\n\r\n**Symptoms:**\r\n- Continuous WebSocket connection errors in browser console\r\n- No real-time updates in admin pane",
        "lineCount": 537,
        "isEmpty": false
      }
    },
    "docs\\MONITORING_GUIDE.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\MONITORING_GUIDE.md",
        "size": 21006,
        "modified": "2025-08-26T23:38:23.160Z",
        "extension": ".md",
        "basename": "MONITORING_GUIDE.md",
        "directory": "docs",
        "content": "# eForm Locker System - Monitoring & Troubleshooting Guide\r\n\r\n## 📊 **System Monitoring Overview**\r\n\r\nThis guide provides comprehensive monitoring strategies, log analysis techniques, and troubleshooting procedures for the eForm Locker System.\r\n\r\n## 🔍 **Service Health Monitoring**\r\n\r\n### **Automated Health Checks**\r\n\r\n#### **Quick Health Check Script**\r\n```bash\r\n#!/bin/bash\r\n# File: scripts/health-check.sh\r\n\r\necho \"=== eForm Locker System Health Check ===\"\r\necho \"Timestamp: $(date)\"\r\necho \"\"\r\n\r",
        "lineCount": 892,
        "isEmpty": false
      }
    },
    "docs\\multiple-relay-cards-setup.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\multiple-relay-cards-setup.md",
        "size": 7333,
        "modified": "2025-08-28T00:21:43.239Z",
        "extension": ".md",
        "basename": "multiple-relay-cards-setup.md",
        "directory": "docs",
        "content": "# Multiple Relay Cards Setup Guide\r\n\r\n## Overview\r\n\r\nYour eForm Locker System **already supports multiple Waveshare 16-channel relay cards** out of the box. The system uses Modbus slave addresses to differentiate between cards.\r\n\r\n## Hardware Architecture\r\n\r\n### **Supported Configuration**\r\n- **Cards**: Up to 247 Waveshare 16-channel relay cards (Modbus limit)\r\n- **Lockers**: Unlimited (tested up to 48 lockers with 3 cards)\r\n- **Protocol**: Modbus RTU over RS485\r\n- **Connection**: Daisy-chain al",
        "lineCount": 264,
        "isEmpty": false
      }
    },
    "docs\\operational-runbook.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\operational-runbook.md",
        "size": 15477,
        "modified": "2025-08-25T12:46:15.482Z",
        "extension": ".md",
        "basename": "operational-runbook.md",
        "directory": "docs",
        "content": "# Eform Locker System - Operational Runbook\r\n\r\n## Table of Contents\r\n1. [Emergency Opening Procedures](#emergency-opening-procedures)\r\n2. [Failure Classifications](#failure-classifications)\r\n3. [Spare Parts List](#spare-parts-list)\r\n4. [Troubleshooting Guide](#troubleshooting-guide)\r\n5. [Maintenance Procedures](#maintenance-procedures)\r\n6. [System Recovery Procedures](#system-recovery-procedures)\r\n7. [Contact Information](#contact-information)\r\n\r\n## Emergency Opening Procedures\r\n\r\n### 1. Power O",
        "lineCount": 562,
        "isEmpty": false
      }
    },
    "docs\\performance-monitoring-guide.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\performance-monitoring-guide.md",
        "size": 19230,
        "modified": "2025-08-27T17:44:27.070Z",
        "extension": ".md",
        "basename": "performance-monitoring-guide.md",
        "directory": "docs",
        "content": "# Kiosk UI Performance Monitoring and Maintenance Guide\r\n\r\n## Overview\r\n\r\nThis guide provides comprehensive procedures for monitoring and maintaining the optimized kiosk UI system to ensure reliable, high-performance operation on Raspberry Pi hardware.\r\n\r\n## Performance Monitoring Framework\r\n\r\n### Key Performance Indicators (KPIs)\r\n\r\n#### System Performance Metrics\r\n- **CPU Usage**: Target <50% average, <80% peak\r\n- **Memory Usage**: Target <200MB for Pi 4, <150MB for Pi 3B\r\n- **Response Time**:",
        "lineCount": 676,
        "isEmpty": false
      }
    },
    "docs\\pi-configuration-guide.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\pi-configuration-guide.md",
        "size": 9837,
        "modified": "2025-08-27T17:40:09.231Z",
        "extension": ".md",
        "basename": "pi-configuration-guide.md",
        "directory": "docs",
        "content": "# Raspberry Pi Configuration Guide for Kiosk UI\r\n\r\n## Overview\r\n\r\nThis guide provides configuration instructions for deploying the optimized kiosk UI on different Raspberry Pi models. The UI has been specifically optimized for Pi hardware constraints while maintaining excellent performance.\r\n\r\n## Supported Pi Models\r\n\r\n### Raspberry Pi 4 (Recommended)\r\n- **RAM**: 2GB minimum, 4GB+ recommended\r\n- **Performance**: Excellent, handles all features smoothly\r\n- **Configuration**: Standard settings wor",
        "lineCount": 402,
        "isEmpty": false
      }
    },
    "docs\\PRODUCTION_READY_SUMMARY.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\PRODUCTION_READY_SUMMARY.md",
        "size": 7358,
        "modified": "2025-08-26T00:10:06.286Z",
        "extension": ".md",
        "basename": "PRODUCTION_READY_SUMMARY.md",
        "directory": "docs",
        "content": "# Production Ready Summary - Admin Panel Relay Control\r\n\r\n## ✅ READY FOR PRODUCTION DEPLOYMENT\r\n\r\nThe Admin Panel Relay Control system has been successfully prepared for production deployment on Raspberry Pi with comprehensive cross-platform compatibility improvements.\r\n\r\n## Key Achievements\r\n\r\n### 1. ✅ Cross-Platform Compatibility\r\n- **Path Handling**: All file paths use `path.join()` for cross-platform compatibility\r\n- **Environment Variables**: `MODBUS_PORT` configurable for different hardwar",
        "lineCount": 241,
        "isEmpty": false
      }
    },
    "docs\\project-structure.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\project-structure.md",
        "size": 12532,
        "modified": "2025-08-25T12:46:15.483Z",
        "extension": ".md",
        "basename": "project-structure.md",
        "directory": "docs",
        "content": "# Project Structure\r\n\r\nThis document describes the reorganized project structure following the /opt/eform layout specification for the Eform Locker System.\r\n\r\n## Directory Structure\r\n\r\n```\r\neform-locker-system/\r\n├── app/                          # Application services\r\n│   ├── gateway/                  # Central coordination service\r\n│   │   ├── src/\r\n│   │   │   ├── controllers/      # API controllers\r\n│   │   │   ├── services/         # Business logic services\r\n│   │   │   ├── routes/         ",
        "lineCount": 346,
        "isEmpty": false
      }
    },
    "docs\\QUICK_REFERENCE.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\QUICK_REFERENCE.md",
        "size": 5396,
        "modified": "2025-08-26T23:40:13.069Z",
        "extension": ".md",
        "basename": "QUICK_REFERENCE.md",
        "directory": "docs",
        "content": "# eForm Locker System - Quick Reference\r\n\r\n## 🚀 **Quick Start Commands**\r\n\r\n### **Service Management**\r\n```bash\r\n# Start all services (RECOMMENDED)\r\n./scripts/start-all-clean.sh\r\n\r\n# Stop all services\r\nsudo pkill -f \"node.*eform\"\r\n\r\n# Restart specific service\r\nsudo pkill -f \"node.*kiosk\"\r\nnpm run start:kiosk > logs/kiosk.log 2>&1 &\r\n```\r\n\r\n### **Health Checks**\r\n```bash\r\n# Check all services\r\ncurl http://192.168.1.8:3000/health  # Gateway\r\ncurl http://192.168.1.8:3002/health  # Kiosk  \r\ncurl ht",
        "lineCount": 257,
        "isEmpty": false
      }
    },
    "docs\\raspberry-pi-deployment-guide.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\raspberry-pi-deployment-guide.md",
        "size": 14402,
        "modified": "2025-08-23T08:51:21.638Z",
        "extension": ".md",
        "basename": "raspberry-pi-deployment-guide.md",
        "directory": "docs",
        "content": "# 🚀 Raspberry Pi Deployment Guide - Complete Setup\r\n\r\n**Eform Locker System - Production Deployment**\r\n\r\nThis guide covers the complete deployment process from a fresh Raspberry Pi to a fully operational locker system.\r\n\r\n## 📋 Prerequisites\r\n\r\n### Hardware Requirements\r\n- **Raspberry Pi 4** (4GB+ RAM recommended)\r\n- **32GB+ microSD card** (Class 10 or better)\r\n- **Waveshare 16CH Modbus RTU Relay** (2x cards for 32 lockers)\r\n- **USB-RS485 converter**\r\n- **RFID reader** (HID or keyboard mode)\r\n-",
        "lineCount": 581,
        "isEmpty": false
      }
    },
    "docs\\raspberry-pi-performance-optimizations.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\raspberry-pi-performance-optimizations.md",
        "size": 8521,
        "modified": "2025-08-27T03:38:22.258Z",
        "extension": ".md",
        "basename": "raspberry-pi-performance-optimizations.md",
        "directory": "docs",
        "content": "# Raspberry Pi Performance Optimizations\n\nThis document describes the comprehensive performance optimizations implemented for the eForm Locker System running on Raspberry Pi hardware.\n\n## Overview\n\nThe kiosk UI has been optimized specifically for Raspberry Pi hardware constraints, including:\n- Limited CPU cores (typically 4 or fewer)\n- Limited RAM (1-4GB typical)\n- GPU memory sharing with system RAM\n- ARM architecture performance characteristics\n\n## Implemented Optimizations\n\n### 1. Animation Fr",
        "lineCount": 329,
        "isEmpty": false
      }
    },
    "docs\\raspberry-pi-setup-guide-v2.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\raspberry-pi-setup-guide-v2.md",
        "size": 987,
        "modified": "2025-08-28T18:22:20.931Z",
        "extension": ".md",
        "basename": "raspberry-pi-setup-guide-v2.md",
        "directory": "docs",
        "content": "# 🍓 Raspberry Pi eForm Locker System v2 Setup Guide\r\n\r\n_Complete Production-Ready Installation Guide for System Modernization v2_\r\n\r\n## 🎯 System Overview - What's New in v2\r\n\r\nThe eForm Locker System v2 represents a complete modernization with enterprise-grade features:\r\n\r\n### 🆕 **New Features in v2**\r\n\r\n- **🏆 Enhanced VIP Contract Management** with PDF generation and payment tracking\r\n- **🆘 Real-time Help Request System** with WebSocket notifications and photo upload\r\n- **🔒 Master PIN Sec",
        "lineCount": 23,
        "isEmpty": false
      }
    },
    "docs\\raspberry-pi-setup-guide.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\raspberry-pi-setup-guide.md",
        "size": 31195,
        "modified": "2025-08-23T19:46:14.531Z",
        "extension": ".md",
        "basename": "raspberry-pi-setup-guide.md",
        "directory": "docs",
        "content": "# 🍓 Raspberry Pi eForm Locker System Setup Guide\r\n\r\n_Complete Production-Ready Installation Guide_\r\n\r\n## 🎯 System Overview\r\n\r\nBuild a professional smart locker system with enterprise-grade features:\r\n\r\n- **Raspberry Pi 5** as the central controller\r\n- **Waveshare 16CH Modbus RTU Relay Cards** for lock control\r\n- **USB HID RFID readers** for card authentication\r\n- **Multi-language touchscreen interface** (English/Turkish)\r\n- **Real-time monitoring and management** dashboard\r\n- **VIP user suppor",
        "lineCount": 1232,
        "isEmpty": false
      }
    },
    "docs\\RASPBERRY_PI_ENVIRONMENT_SETUP.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\RASPBERRY_PI_ENVIRONMENT_SETUP.md",
        "size": 5145,
        "modified": "2025-08-26T01:07:12.195Z",
        "extension": ".md",
        "basename": "RASPBERRY_PI_ENVIRONMENT_SETUP.md",
        "directory": "docs",
        "content": "# Raspberry Pi Environment Setup Guide\r\n\r\n## 🔧 Required Environment Variables\r\n\r\nSet these environment variables on your Raspberry Pi for optimal hardware integration:\r\n\r\n### Database Configuration\r\n```bash\r\nexport EFORM_DB_PATH=\"/home/pi/eform-locker/data/eform.db\"\r\n```\r\n\r\n### Kiosk Configuration\r\n```bash\r\nexport KIOSK_ID=\"kiosk-1\"\r\n```\r\n\r\n### Modbus/RS-485 Configuration\r\n```bash\r\nexport MODBUS_PORT=\"/dev/serial/by-id/usb-FTDI_FT232R_USB_UART_A50285BI-if00-port0\"\r\nexport MODBUS_BAUD=\"9600\"\r\nex",
        "lineCount": 229,
        "isEmpty": false
      }
    },
    "docs\\README.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\README.md",
        "size": 7349,
        "modified": "2025-08-28T20:17:55.941Z",
        "extension": ".md",
        "basename": "README.md",
        "directory": "docs",
        "content": "# 📚 eForm Locker System Documentation\r\n\r\nWelcome to the comprehensive documentation for the eForm Locker System. This directory contains all technical documentation, guides, and reference materials organized by category.\r\n\r\n## 📋 Documentation Overview\r\n\r\n### **🚀 Getting Started**\r\n- **[📖 Main README](../README.md)** - Project overview and quick start\r\n- **[⚡ Quick Reference](QUICK_REFERENCE.md)** - Essential commands and operations\r\n- **[🏗️ System Documentation](SYSTEM_DOCUMENTATION.md)** -",
        "lineCount": 153,
        "isEmpty": false
      }
    },
    "docs\\rollback-procedures.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\rollback-procedures.md",
        "size": 11050,
        "modified": "2025-08-27T17:47:08.306Z",
        "extension": ".md",
        "basename": "rollback-procedures.md",
        "directory": "docs",
        "content": "# Kiosk UI Rollback Procedures\r\n\r\n## Overview\r\n\r\nThis document provides comprehensive rollback procedures for the kiosk UI system, ensuring quick recovery from deployment issues, system failures, or performance problems.\r\n\r\n## Rollback Scenarios\r\n\r\n### 1. Deployment Rollback\r\nWhen a new deployment causes issues and you need to return to the previous working version.\r\n\r\n### 2. Configuration Rollback\r\nWhen configuration changes cause system instability or performance issues.\r\n\r\n### 3. Emergency Sy",
        "lineCount": 433,
        "isEmpty": false
      }
    },
    "docs\\SYSTEM_DOCUMENTATION.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\SYSTEM_DOCUMENTATION.md",
        "size": 23572,
        "modified": "2025-08-26T23:35:13.412Z",
        "extension": ".md",
        "basename": "SYSTEM_DOCUMENTATION.md",
        "directory": "docs",
        "content": "# eForm Locker System - Complete Documentation\r\n\r\n## 📋 **Table of Contents**\r\n1. [System Overview](#system-overview)\r\n2. [Architecture](#architecture)\r\n3. [Services Documentation](#services-documentation)\r\n4. [API Reference](#api-reference)\r\n5. [Database Schema](#database-schema)\r\n6. [Hardware Integration](#hardware-integration)\r\n7. [Monitoring & Logging](#monitoring--logging)\r\n8. [Troubleshooting](#troubleshooting)\r\n9. [Development Guide](#development-guide)\r\n10. [Deployment Guide](#deployment",
        "lineCount": 960,
        "isEmpty": false
      }
    },
    "docs\\task-14-validation-report.json": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs directory"
      ],
      "metadata": {
        "path": "docs\\task-14-validation-report.json",
        "size": 4553,
        "modified": "2025-08-27T17:37:03.594Z",
        "extension": ".json",
        "basename": "task-14-validation-report.json",
        "directory": "docs",
        "content": "{\n  \"taskId\": 14,\n  \"taskName\": \"User Acceptance Testing and Polish\",\n  \"validationDate\": \"2025-08-27T17:37:03.554Z\",\n  \"duration\": 34,\n  \"results\": {\n    \"userFlow\": {\n      \"passed\": 5,\n      \"failed\": 0,\n      \"tests\": [\n        {\n          \"name\": \"Idle State Implementation\",\n          \"status\": \"PASSED\",\n          \"message\": \"All idle state elements and Turkish text present\"\n        },\n        {\n          \"name\": \"RFID Detection Implementation\",\n          \"status\": \"PASSED\",\n          \"mess",
        "lineCount": 156,
        "isEmpty": false
      }
    },
    "docs\\troubleshooting\\COMMAND_QUEUE_DATABASE_PATH_ISSUE_REPORT.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs\\troubleshooting directory"
      ],
      "metadata": {
        "path": "docs\\troubleshooting\\COMMAND_QUEUE_DATABASE_PATH_ISSUE_REPORT.md",
        "size": 5891,
        "modified": "2025-08-26T02:28:31.282Z",
        "extension": ".md",
        "basename": "COMMAND_QUEUE_DATABASE_PATH_ISSUE_REPORT.md",
        "directory": "docs\\troubleshooting",
        "content": "# Command Queue Database Path Issue Report - RESOLVED ✅\r\n\r\n## Problem Summary\r\n\r\n~~Commands created through the admin panel are stuck in \"pending\" status because the Gateway service cannot retrieve them from the command queue.~~ **RESOLVED**: The database path issue has been fixed and a secondary command payload structure issue has also been resolved.\r\n\r\n## System Architecture\r\n\r\n- **Gateway Service**: Handles API requests, runs on port 3000\r\n- **Panel Service**: Admin interface, runs on port 30",
        "lineCount": 188,
        "isEmpty": false
      }
    },
    "docs\\troubleshooting\\DIRECT_RELAY_TROUBLESHOOTING_REPORT.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs\\troubleshooting directory"
      ],
      "metadata": {
        "path": "docs\\troubleshooting\\DIRECT_RELAY_TROUBLESHOOTING_REPORT.md",
        "size": 8689,
        "modified": "2025-08-26T05:37:14.786Z",
        "extension": ".md",
        "basename": "DIRECT_RELAY_TROUBLESHOOTING_REPORT.md",
        "directory": "docs\\troubleshooting",
        "content": "# Direct Relay Button Troubleshooting Report\r\n## eForm Locker System - Modbus Communication Analysis\r\n\r\n**Date:** August 26, 2025  \r\n**System:** Raspberry Pi with USB-to-RS485 Adapter  \r\n**Hardware:** 16-channel relay cards via Modbus RTU  \r\n\r\n---\r\n\r\n## 📋 **Problem Summary**\r\n\r\nThe Direct Relay button functionality went through several phases:\r\n1. **Initially worked** on the Relay page\r\n2. **Stopped working** after implementing locker room direct button\r\n3. **Required extensive troubleshooting*",
        "lineCount": 254,
        "isEmpty": false
      }
    },
    "docs\\troubleshooting\\hardware-integration-guide.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs\\troubleshooting directory"
      ],
      "metadata": {
        "path": "docs\\troubleshooting\\hardware-integration-guide.md",
        "size": 12860,
        "modified": "2025-08-28T20:12:41.628Z",
        "extension": ".md",
        "basename": "hardware-integration-guide.md",
        "directory": "docs\\troubleshooting",
        "content": "# Hardware Integration & Troubleshooting Guide\r\n\r\n## Overview\r\n\r\nThis guide covers the eForm Locker System's hardware integration, focusing on Modbus RTU communication, serial port management, and common troubleshooting procedures. The system uses a Raspberry Pi 4 with USB-RS485 adapter to control relay cards via Modbus protocol.\r\n\r\n## Modbus RTU Communication\r\n\r\n### Protocol Fundamentals\r\n\r\nThe eForm Locker System uses **Modbus RTU** (Remote Terminal Unit) protocol for hardware communication:\r\n",
        "lineCount": 494,
        "isEmpty": false
      }
    },
    "docs\\troubleshooting\\incident-reports\\kiosk-assignment-failure-2025-08.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs\\troubleshooting\\incident-reports directory"
      ],
      "metadata": {
        "path": "docs\\troubleshooting\\incident-reports\\kiosk-assignment-failure-2025-08.md",
        "size": 9566,
        "modified": "2025-08-28T20:14:38.993Z",
        "extension": ".md",
        "basename": "kiosk-assignment-failure-2025-08.md",
        "directory": "docs\\troubleshooting\\incident-reports",
        "content": "# Kiosk Assignment Failure - Incident Report\r\n\r\n**Date:** August 27, 2025  \r\n**Time:** 19:00 - 19:30 UTC  \r\n**Severity:** High (System Unusable)  \r\n**Status:** Resolved  \r\n**Reporter:** User Testing  \r\n**Resolver:** Kiro AI Assistant\r\n\r\n---\r\n\r\n## 📋 **Executive Summary**\r\n\r\nThe eForm Locker System kiosk experienced a critical failure where users could not assign lockers, receiving the error message \"Assignment failed, Dolap atanamadı\" (Locker could not be assigned). This rendered the manual lock",
        "lineCount": 322,
        "isEmpty": false
      }
    },
    "docs\\troubleshooting\\RASPBERRY_PI_MIGRATION_FIX.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs\\troubleshooting directory"
      ],
      "metadata": {
        "path": "docs\\troubleshooting\\RASPBERRY_PI_MIGRATION_FIX.md",
        "size": 1461,
        "modified": "2025-08-26T00:42:17.243Z",
        "extension": ".md",
        "basename": "RASPBERRY_PI_MIGRATION_FIX.md",
        "directory": "docs\\troubleshooting",
        "content": "# Raspberry Pi Migration Fix\r\n\r\n## Issue\r\nAfter the recent update, the system may fail to start on Raspberry Pi due to duplicate migration conflicts. This happens when migrations 015 and 016 try to apply changes that were already applied by migrations 009 and 010.\r\n\r\n## Symptoms\r\n- Kiosk service fails with \"SQLITE_ERROR: no such table: lockers\"\r\n- Migration errors about duplicate column names\r\n- Services fail to start properly\r\n\r\n## Solution\r\n\r\n### Automatic Fix (Recommended)\r\nRun this command o",
        "lineCount": 49,
        "isEmpty": false
      }
    },
    "docs\\troubleshooting\\README.md": {
      "primary": "documentation",
      "confidence": "high",
      "reasons": [
        "Located in docs\\troubleshooting directory"
      ],
      "metadata": {
        "path": "docs\\troubleshooting\\README.md",
        "size": 2089,
        "modified": "2025-08-28T20:18:18.718Z",
        "extension": ".md",
        "basename": "README.md",
        "directory": "docs\\troubleshooting",
        "content": "# Troubleshooting Reports\r\n\r\nThis folder contains historical troubleshooting reports and solutions for issues encountered during the development and deployment of the eForm Locker System.\r\n\r\n## 📋 **Issue Reports**\r\n\r\n### **[Command Queue Database Path Issue Report](COMMAND_QUEUE_DATABASE_PATH_ISSUE_REPORT.md)**\r\n- **Issue**: Database path conflicts between services\r\n- **Impact**: Service startup failures and data inconsistencies\r\n- **Resolution**: Standardized database path configuration\r\n- **S",
        "lineCount": 40,
        "isEmpty": false
      }
    },
    "favicon.ico": {
      "primary": "unknown",
      "confidence": "low",
      "reasons": [
        "No matching patterns or content indicators"
      ],
      "metadata": {
        "path": "favicon.ico",
        "size": 814,
        "modified": "2025-08-22T21:51:30.515Z",
        "extension": ".ico",
        "basename": "favicon.ico",
        "directory": ".",
        "content": "[BINARY FILE]",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "favicon.svg": {
      "primary": "unknown",
      "confidence": "low",
      "reasons": [
        "No matching patterns or content indicators"
      ],
      "metadata": {
        "path": "favicon.svg",
        "size": 2381,
        "modified": "2025-08-22T21:51:32.236Z",
        "extension": ".svg",
        "basename": "favicon.svg",
        "directory": ".",
        "content": "<svg width=\"165\" height=\"165\" viewBox=\"0 0 165 165\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M120.831 57.2543L84.693 109.505C84.3099 110.059 83.7558 110.474 83.1148 110.687C82.4738 110.9 81.7809 110.898 81.1412 110.684C80.5015 110.469 79.95 110.052 79.5702 109.497C79.1905 108.941 79.0032 108.277 79.037 107.606L80.4833 78.7582L57.1343 73.8064C56.6353 73.7007 56.1704 73.474 55.7807 73.1465C55.391 72.8191 55.0885 72.4009 54.9001 71.929C54.7117 71.4571 54.6432 70.9461 54.7006 70.4412",
        "lineCount": 6,
        "isEmpty": false
      }
    },
    "file-categorization-report.json": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains config keywords: config, settings",
        "Contains temporary keywords: temporary"
      ],
      "alternatives": [
        "config",
        "temporary"
      ],
      "metadata": {
        "path": "file-categorization-report.json",
        "size": 571718,
        "modified": "2025-08-28T20:06:37.384Z",
        "extension": ".json",
        "basename": "file-categorization-report.json",
        "directory": ".",
        "content": "{\n  \"summary\": {\n    \"active\": 311,\n    \"documentation\": 67,\n    \"unknown\": 7,\n    \"config\": 6,\n    \"legacy\": 4,\n    \"temporary\": 21,\n    \"build\": 92,\n    \"redundant\": 1,\n    \"test\": 9\n  },\n  \"recommendations\": {\n    \"active\": {\n      \"count\": 311,\n      \"files\": [\n        \".env\",\n        \".env.example\",\n        \".gitattributes\",\n        \".gitignore\",\n        \".kiro\\\\settings\\\\mcp.json\",\n        \".kiro\\\\specs\\\\admin-panel-relay-control\\\\tasks.md\",\n        \".kiro\\\\specs\\\\admin-panel-ui-improvemen",
        "lineCount": 10278,
        "isEmpty": false
      }
    },
    "fix-opening-status.sql": {
      "primary": "legacy",
      "confidence": "medium",
      "reasons": [
        "Matches legacy filename pattern"
      ],
      "alternatives": [],
      "metadata": {
        "path": "fix-opening-status.sql",
        "size": 360,
        "modified": "2025-08-28T04:22:36.292Z",
        "extension": ".sql",
        "basename": "fix-opening-status.sql",
        "directory": ".",
        "content": "-- Fix lockers stuck in Opening status\r\n-- When a locker has an owner_key, it should be Owned, not Opening\r\n\r\nUPDATE lockers \r\nSET status = 'Owned', \r\n    updated_at = datetime('now') \r\nWHERE status = 'Opening' \r\n  AND owner_key IS NOT NULL;\r\n\r\n-- Show the updated lockers\r\nSELECT id, status, owner_key, updated_at \r\nFROM lockers \r\nWHERE owner_key IS NOT NULL;",
        "lineCount": 13,
        "isEmpty": false
      }
    },
    "LICENSE": {
      "primary": "active",
      "confidence": "medium",
      "reasons": [
        "Matches active filename pattern",
        "Contains documentation keywords: documentation"
      ],
      "alternatives": [
        "documentation"
      ],
      "metadata": {
        "path": "LICENSE",
        "size": 1095,
        "modified": "2025-08-20T09:02:28.466Z",
        "extension": "",
        "basename": "LICENSE",
        "directory": ".",
        "content": "MIT License\r\n\r\nCopyright (c) 2025 Eform Locker System\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nTh",
        "lineCount": 21,
        "isEmpty": false
      }
    },
    "logs\\pi-optimization-validation.json": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern"
      ],
      "alternatives": [],
      "metadata": {
        "path": "logs\\pi-optimization-validation.json",
        "size": 3965,
        "modified": "2025-08-27T05:17:58.309Z",
        "extension": ".json",
        "basename": "pi-optimization-validation.json",
        "directory": "logs",
        "content": "{\n  \"timestamp\": \"2025-08-27T05:17:58.290Z\",\n  \"validations\": {\n    \"fileStructure\": {\n      \"index.html\": {\n        \"path\": \"app/kiosk/src/ui/index.html\",\n        \"exists\": true,\n        \"size\": 5976\n      },\n      \"app-simple.js\": {\n        \"path\": \"app/kiosk/src/ui/static/app-simple.js\",\n        \"exists\": true,\n        \"size\": 48378\n      },\n      \"styles-simple.css\": {\n        \"path\": \"app/kiosk/src/ui/static/styles-simple.css\",\n        \"exists\": true,\n        \"size\": 21088\n      },\n      \"p",
        "lineCount": 177,
        "isEmpty": false
      }
    },
    "migrations\\001_initial_schema.sql": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in migrations directory"
      ],
      "metadata": {
        "path": "migrations\\001_initial_schema.sql",
        "size": 1795,
        "modified": "2025-08-20T09:33:49.777Z",
        "extension": ".sql",
        "basename": "001_initial_schema.sql",
        "directory": "migrations",
        "content": "-- Migration 001: Initial Schema (Simplified)\r\n-- Creates the core tables for the Eform Locker System\r\n\r\n-- Lockers Table (composite primary key: kiosk_id, id)\r\nCREATE TABLE IF NOT EXISTS lockers (\r\n  kiosk_id TEXT NOT NULL,\r\n  id INTEGER NOT NULL,\r\n  status TEXT NOT NULL DEFAULT 'Free',\r\n  owner_type TEXT,\r\n  owner_key TEXT,\r\n  reserved_at DATETIME,\r\n  owned_at DATETIME,\r\n  version INTEGER NOT NULL DEFAULT 1,\r\n  is_vip BOOLEAN NOT NULL DEFAULT 0,\r\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP",
        "lineCount": 53,
        "isEmpty": false
      }
    },
    "migrations\\002_provisioning_and_config.sql": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in migrations directory"
      ],
      "metadata": {
        "path": "migrations\\002_provisioning_and_config.sql",
        "size": 3516,
        "modified": "2025-08-20T09:30:12.188Z",
        "extension": ".sql",
        "basename": "002_provisioning_and_config.sql",
        "directory": "migrations",
        "content": "-- Migration 002: Provisioning and Configuration Tables\r\n-- Adds tables for kiosk provisioning and configuration management\r\n\r\n-- Provisioning Tokens Table\r\nCREATE TABLE IF NOT EXISTS provisioning_tokens (\r\n  token TEXT PRIMARY KEY,\r\n  kiosk_id TEXT NOT NULL,\r\n  zone TEXT NOT NULL,\r\n  expires_at DATETIME NOT NULL,\r\n  used BOOLEAN DEFAULT FALSE,\r\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n  used_at DATETIME,\r\n  UNIQUE(token)\r\n);\r\n\r\n-- Provisioning Status Table\r\nCREATE TABLE IF NOT EXISTS p",
        "lineCount": 85,
        "isEmpty": false
      }
    },
    "migrations\\003_complete_schema.sql": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in migrations directory"
      ],
      "metadata": {
        "path": "migrations\\003_complete_schema.sql",
        "size": 3026,
        "modified": "2025-08-20T13:45:35.998Z",
        "extension": ".sql",
        "basename": "003_complete_schema.sql",
        "directory": "migrations",
        "content": "-- Migration 003: Complete Schema\r\n-- Adds missing tables for VIP contracts and command queue\r\n\r\n-- VIP Contracts Table\r\nCREATE TABLE IF NOT EXISTS vip_contracts (\r\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n  kiosk_id TEXT NOT NULL,\r\n  locker_id INTEGER NOT NULL,\r\n  rfid_card TEXT NOT NULL,\r\n  backup_card TEXT,\r\n  start_date DATE NOT NULL,\r\n  end_date DATE NOT NULL,\r\n  status TEXT NOT NULL DEFAULT 'active',\r\n  created_by TEXT NOT NULL,\r\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n  updated_",
        "lineCount": 75,
        "isEmpty": false
      }
    },
    "migrations\\004_staff_users.sql": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in migrations directory"
      ],
      "metadata": {
        "path": "migrations\\004_staff_users.sql",
        "size": 1251,
        "modified": "2025-08-23T19:26:13.489Z",
        "extension": ".sql",
        "basename": "004_staff_users.sql",
        "directory": "migrations",
        "content": "-- Migration 004: Staff Users and Authentication\r\n-- Adds staff_users table for panel authentication\r\n\r\n-- Staff Users Table\r\nCREATE TABLE IF NOT EXISTS staff_users (\r\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n  username TEXT NOT NULL UNIQUE,\r\n  password_hash TEXT NOT NULL,\r\n  role TEXT NOT NULL DEFAULT 'staff',\r\n  active INTEGER NOT NULL DEFAULT 1,\r\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n  last_login DATETIME,\r\n  pin_expires_at DATETIM",
        "lineCount": 33,
        "isEmpty": false
      }
    },
    "migrations\\005_vip_transfer_audit.sql": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in migrations directory"
      ],
      "metadata": {
        "path": "migrations\\005_vip_transfer_audit.sql",
        "size": 4648,
        "modified": "2025-08-20T17:14:47.008Z",
        "extension": ".sql",
        "basename": "005_vip_transfer_audit.sql",
        "directory": "migrations",
        "content": "-- Migration 005: VIP Transfer and Audit System\r\n-- Adds tables for VIP contract transfers and comprehensive audit logging\r\n\r\n-- VIP Transfer Requests Table\r\nCREATE TABLE IF NOT EXISTS vip_transfer_requests (\r\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n  contract_id INTEGER NOT NULL,\r\n  from_kiosk_id TEXT NOT NULL,\r\n  from_locker_id INTEGER NOT NULL,\r\n  to_kiosk_id TEXT NOT NULL,\r\n  to_locker_id INTEGER NOT NULL,\r\n  new_rfid_card TEXT, -- Optional new card for transfer\r\n  reason TEXT NOT NULL,\r\n  ",
        "lineCount": 127,
        "isEmpty": false
      }
    },
    "migrations\\006_pin_rotation_system.sql": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in migrations directory"
      ],
      "metadata": {
        "path": "migrations\\006_pin_rotation_system.sql",
        "size": 5935,
        "modified": "2025-08-20T19:09:16.933Z",
        "extension": ".sql",
        "basename": "006_pin_rotation_system.sql",
        "directory": "migrations",
        "content": "-- Migration 006: PIN Rotation System\r\n-- Add PIN history tracking and enhanced security features\r\n\r\n-- Create PIN history table for preventing reuse\r\nCREATE TABLE IF NOT EXISTS pin_history (\r\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n  user_id INTEGER NOT NULL,\r\n  pin_hash TEXT NOT NULL,\r\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n  FOREIGN KEY (user_id) REFERENCES staff_users(id) ON DELETE CASCADE\r\n);\r\n\r\n-- Create index for efficient PIN history queries\r\nCREATE INDEX IF NOT EXISTS idx_pi",
        "lineCount": 149,
        "isEmpty": false
      }
    },
    "migrations\\007_soak_testing_tables.sql": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in migrations directory"
      ],
      "metadata": {
        "path": "migrations\\007_soak_testing_tables.sql",
        "size": 7409,
        "modified": "2025-08-20T19:23:47.636Z",
        "extension": ".sql",
        "basename": "007_soak_testing_tables.sql",
        "directory": "migrations",
        "content": "-- Migration 007: Soak Testing Tables\r\n-- Create tables for hardware soak testing automation\r\n\r\n-- Soak tests table\r\nCREATE TABLE IF NOT EXISTS soak_tests (\r\n  id TEXT PRIMARY KEY,\r\n  kiosk_id TEXT NOT NULL,\r\n  locker_id INTEGER NOT NULL,\r\n  target_cycles INTEGER NOT NULL,\r\n  current_cycle INTEGER NOT NULL DEFAULT 0,\r\n  success_count INTEGER NOT NULL DEFAULT 0,\r\n  failure_count INTEGER NOT NULL DEFAULT 0,\r\n  failure_threshold INTEGER NOT NULL DEFAULT 50,\r\n  interval_ms INTEGER NOT NULL DEFAULT 5",
        "lineCount": 191,
        "isEmpty": false
      }
    },
    "migrations\\008_clean_default_users.sql": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in migrations directory"
      ],
      "metadata": {
        "path": "migrations\\008_clean_default_users.sql",
        "size": 466,
        "modified": "2025-08-23T19:27:13.477Z",
        "extension": ".sql",
        "basename": "008_clean_default_users.sql",
        "directory": "migrations",
        "content": "-- Migration 008: Clean Default Users\r\n-- Remove any default users to ensure clean setup process\r\n\r\n-- Remove the default admin user that was created in migration 004\r\nDELETE FROM staff_users WHERE username = 'admin' AND password_hash = '$argon2id$v=19$m=65536,t=3,p=1$YWRtaW4xMjM$8rKZZKjTGxGfaCDLKDT8Dw';\r\n\r\n-- Reset auto-increment counter if no users remain\r\nUPDATE sqlite_sequence SET seq = 0 WHERE name = 'staff_users' AND (SELECT COUNT(*) FROM staff_users) = 0;",
        "lineCount": 8,
        "isEmpty": false
      }
    },
    "migrations\\015_add_command_duration.sql": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in migrations directory"
      ],
      "metadata": {
        "path": "migrations\\015_add_command_duration.sql",
        "size": 370,
        "modified": "2025-08-26T04:52:57.083Z",
        "extension": ".sql",
        "basename": "015_add_command_duration.sql",
        "directory": "migrations",
        "content": "-- Add duration tracking to command queue\r\n-- Migration 009: Add command duration column\r\n\r\n-- Add duration_ms column to command_queue table (completed_at already exists)\r\nALTER TABLE command_queue ADD COLUMN duration_ms INTEGER;\r\n\r\n-- Create index for performance on duration queries\r\nCREATE INDEX IF NOT EXISTS idx_command_queue_duration ON command_queue(duration_ms);",
        "lineCount": 8,
        "isEmpty": false
      }
    },
    "migrations\\016_locker_naming_system.sql": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in migrations directory"
      ],
      "metadata": {
        "path": "migrations\\016_locker_naming_system.sql",
        "size": 2215,
        "modified": "2025-08-27T03:38:22.258Z",
        "extension": ".sql",
        "basename": "016_locker_naming_system.sql",
        "directory": "migrations",
        "content": "-- Migration 016: Locker Naming System\n-- Adds display name functionality and audit tracking for locker names\n\n-- Add naming columns to lockers table\nALTER TABLE lockers ADD COLUMN display_name VARCHAR(20);\nALTER TABLE lockers ADD COLUMN name_updated_at DATETIME;\nALTER TABLE lockers ADD COLUMN name_updated_by VARCHAR(50);\n\n-- Create locker name audit table for tracking name changes\nCREATE TABLE IF NOT EXISTS locker_name_audit (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  kiosk_id TEXT NOT NULL,\n  ",
        "lineCount": 45,
        "isEmpty": false
      }
    },
    "migrations\\017_fix_locker_naming_trigger.sql": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in migrations directory"
      ],
      "metadata": {
        "path": "migrations\\017_fix_locker_naming_trigger.sql",
        "size": 748,
        "modified": "2025-08-27T03:38:22.260Z",
        "extension": ".sql",
        "basename": "017_fix_locker_naming_trigger.sql",
        "directory": "migrations",
        "content": "-- Migration 017: Fix Locker Naming Trigger\n-- Fixes the trigger to only log when changed_by is not NULL\n\n-- Drop the existing trigger\nDROP TRIGGER IF EXISTS log_locker_name_changes;\n\n-- Recreate the trigger with proper NULL check\nCREATE TRIGGER IF NOT EXISTS log_locker_name_changes \n  AFTER UPDATE OF display_name ON lockers\n  FOR EACH ROW\n  WHEN (NEW.display_name != OLD.display_name OR (NEW.display_name IS NOT NULL AND OLD.display_name IS NULL) OR (NEW.display_name IS NULL AND OLD.display_name ",
        "lineCount": 16,
        "isEmpty": false
      }
    },
    "migrations\\018_performance_monitoring.sql": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in migrations directory"
      ],
      "metadata": {
        "path": "migrations\\018_performance_monitoring.sql",
        "size": 6386,
        "modified": "2025-08-27T03:38:22.261Z",
        "extension": ".sql",
        "basename": "018_performance_monitoring.sql",
        "directory": "migrations",
        "content": "-- Migration 018: Performance Monitoring Tables\n-- Add tables for comprehensive performance tracking and metrics collection\n-- Implements requirements 8.1-8.4 for performance monitoring\n\n-- Session metrics table for tracking RFID session performance\nCREATE TABLE IF NOT EXISTS session_metrics (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  session_id TEXT NOT NULL,\n  kiosk_id TEXT NOT NULL,\n  card_id TEXT NOT NULL,\n  start_time DATETIME NOT NULL,\n  end_time DATETIME,\n  duration_seconds INTEGER,\n  out",
        "lineCount": 152,
        "isEmpty": false
      }
    },
    "package-lock.json": {
      "primary": "build",
      "confidence": "low",
      "reasons": [
        "Contains build keywords: package"
      ],
      "alternatives": [],
      "metadata": {
        "path": "package-lock.json",
        "size": 369766,
        "modified": "2025-08-28T08:43:32.398Z",
        "extension": ".json",
        "basename": "package-lock.json",
        "directory": ".",
        "content": "{\r\n  \"name\": \"eform-locker-system\",\r\n  \"version\": \"1.0.0\",\r\n  \"lockfileVersion\": 3,\r\n  \"requires\": true,\r\n  \"packages\": {\r\n    \"\": {\r\n      \"name\": \"eform-locker-system\",\r\n      \"version\": \"1.0.0\",\r\n      \"workspaces\": [\r\n        \"app/gateway\",\r\n        \"app/kiosk\",\r\n        \"app/panel\",\r\n        \"app/agent\",\r\n        \"shared\"\r\n      ],\r\n      \"dependencies\": {\r\n        \"argon2\": \"^0.31.2\",\r\n        \"bcryptjs\": \"^2.4.3\",\r\n        \"fastify\": \"^4.24.3\",\r\n        \"node-fetch\": \"^3.3.2\",\r\n        \"s",
        "lineCount": 10245,
        "isEmpty": false
      }
    },
    "package.json": {
      "primary": "active",
      "confidence": "medium",
      "reasons": [
        "Matches active filename pattern",
        "Contains active keywords: type",
        "Contains build keywords: build"
      ],
      "alternatives": [
        "active",
        "build"
      ],
      "metadata": {
        "path": "package.json",
        "size": 3401,
        "modified": "2025-08-26T00:41:34.854Z",
        "extension": ".json",
        "basename": "package.json",
        "directory": ".",
        "content": "{\r\n  \"name\": \"eform-locker-system\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"RFID-based locker management system\",\r\n  \"main\": \"dist/index.js\",\r\n  \"type\": \"commonjs\",\r\n  \"workspaces\": [\r\n    \"app/gateway\",\r\n    \"app/kiosk\",\r\n    \"app/panel\",\r\n    \"app/agent\",\r\n    \"shared\"\r\n  ],\r\n  \"scripts\": {\r\n    \"build\": \"npm run build --workspaces\",\r\n    \"build:gateway\": \"npm run build --workspace=app/gateway\",\r\n    \"build:kiosk\": \"npm run build --workspace=app/kiosk\",\r\n    \"build:panel\": \"npm run build --w",
        "lineCount": 80,
        "isEmpty": false
      }
    },
    "README.md": {
      "primary": "documentation",
      "confidence": "medium",
      "reasons": [
        "Contains documentation keywords: # , ## ",
        "Matches active filename pattern",
        "Matches documentation filename pattern"
      ],
      "alternatives": [
        "active",
        "documentation"
      ],
      "metadata": {
        "path": "README.md",
        "size": 12117,
        "modified": "2025-08-26T23:45:28.007Z",
        "extension": ".md",
        "basename": "README.md",
        "directory": ".",
        "content": "# 🔐 Eform Locker System\r\n\r\n**Production-Ready RFID Locker Management System**\r\n\r\nA comprehensive locker management solution designed for Raspberry Pi with Waveshare relay cards, featuring RFID/QR access, multi-language support, VIP user management, and enterprise-grade security.\r\n\r\n## 🚀 Quick Start\r\n\r\n### For Raspberry Pi Production Deployment\r\n```bash\r\n# One-command setup for Raspberry Pi (fully automated)\r\ngit clone https://github.com/mredag/eformLockerRoom.git eform-locker\r\ncd eform-locker\r",
        "lineCount": 333,
        "isEmpty": false
      }
    },
    "scripts\\analyze-repository.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\analyze-repository.js",
        "size": 14047,
        "modified": "2025-08-28T20:05:33.227Z",
        "extension": ".js",
        "basename": "analyze-repository.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Repository Analysis Orchestrator\r\n * \r\n * Main script that coordinates all analysis tools:\r\n * - File scanner and inventory\r\n * - File categorization\r\n * - Dependency scanning\r\n * - Safety assessment\r\n * \r\n * Generates comprehensive cleanup recommendations\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst RepositoryAnalyzer = require('./repository-analyzer');\r\nconst FileCategorizer = require('./file-categorizer');\r\nconst DependencyScanner = re",
        "lineCount": 426,
        "isEmpty": false
      }
    },
    "scripts\\backup-maksisoft-integration.ps1": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\backup-maksisoft-integration.ps1",
        "size": 6036,
        "modified": "2025-08-28T07:58:23.890Z",
        "extension": ".ps1",
        "basename": "backup-maksisoft-integration.ps1",
        "directory": "scripts",
        "content": "#!/usr/bin/env pwsh\r\n\r\n<#\r\n.SYNOPSIS\r\n    Creates a backup of the current state before Maksisoft integration deployment\r\n    \r\n.DESCRIPTION\r\n    This script creates a complete backup of all files that will be modified\r\n    by the Maksisoft integration, allowing for easy rollback if needed.\r\n    \r\n.EXAMPLE\r\n    .\\scripts\\backup-maksisoft-integration.ps1\r\n#>\r\n\r\nparam(\r\n    [string]$BackupDir = \"backups/pre-maksisoft-$(Get-Date -Format 'yyyyMMdd-HHmmss')\"\r\n)\r\n\r\nWrite-Host \"🔄 Creating Maksisoft Int",
        "lineCount": 171,
        "isEmpty": false
      }
    },
    "scripts\\backup-maksisoft-integration.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\backup-maksisoft-integration.sh",
        "size": 5316,
        "modified": "2025-08-28T07:56:27.018Z",
        "extension": ".sh",
        "basename": "backup-maksisoft-integration.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Maksisoft Integration Backup Script (Linux/macOS)\n# Creates a complete backup before deployment\n\nset -e\n\nBACKUP_DIR=\"backups/pre-maksisoft-$(date +%Y%m%d-%H%M%S)\"\n\necho \"🔄 Creating Maksisoft Integration Backup...\"\necho \"Backup Directory: $BACKUP_DIR\"\n\n# Create backup directory\nmkdir -p \"$BACKUP_DIR\"\n\n# Files to backup\nFILES_TO_BACKUP=(\n    \"app/panel/src/services/maksi.ts\"\n    \"app/panel/src/services/maksi-types.ts\"\n    \"app/panel/src/routes/maksi-routes.ts\"\n    \"app/panel/src/mi",
        "lineCount": 203,
        "isEmpty": false
      }
    },
    "scripts\\backup.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\backup.sh",
        "size": 9514,
        "modified": "2025-08-21T18:15:08.362Z",
        "extension": ".sh",
        "basename": "backup.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Eform Locker System Backup Script\n# Creates backups of database and configuration files\n\nset -e\n\n# Configuration\nINSTALL_DIR=\"/opt/eform\"\nDATA_DIR=\"/opt/eform/data\"\nCONFIG_DIR=\"/opt/eform/config\"\nBACKUP_DIR=\"/opt/eform/backups\"\nLOG_FILE=\"/var/log/eform/backup.log\"\n\n# Retention settings\nDAILY_RETENTION=7\nWEEKLY_RETENTION=4\nMONTHLY_RETENTION=12\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\n# Logging functions\n",
        "lineCount": 353,
        "isEmpty": false
      }
    },
    "scripts\\canary-deploy.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\canary-deploy.sh",
        "size": 20255,
        "modified": "2025-08-21T18:22:15.013Z",
        "extension": ".sh",
        "basename": "canary-deploy.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Eform Locker System Canary Deployment Script\n# Implements canary deployment with kiosk grouping and automatic rollback\n\nset -e\n\n# Configuration\nINSTALL_DIR=\"/opt/eform\"\nCONFIG_DIR=\"/opt/eform/config\"\nBACKUP_DIR=\"/opt/eform/backups\"\nLOG_FILE=\"/var/log/eform/canary-deploy.log\"\nCANARY_CONFIG_FILE=\"$CONFIG_DIR/canary-config.json\"\n\n# Canary deployment settings\nCANARY_PERCENTAGE=20  # Percentage of kiosks for canary deployment\nROLLBACK_THRESHOLD=10  # Percentage of failures that trigger",
        "lineCount": 625,
        "isEmpty": false
      }
    },
    "scripts\\check-rfid-devices.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\check-rfid-devices.js",
        "size": 3901,
        "modified": "2025-08-22T19:12:49.692Z",
        "extension": ".js",
        "basename": "check-rfid-devices.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * RFID Device Detection Script\r\n * Checks for available RFID readers and HID devices\r\n */\r\n\r\nimport HID from 'node-hid';\r\n\r\nconsole.log('🔍 RFID Cihaz Tarama Başlatılıyor...\\n');\r\n\r\ntry {\r\n  // Get all HID devices\r\n  const devices = HID.devices();\r\n  \r\n  console.log('📱 Bulunan HID Cihazları:');\r\n  console.log('========================');\r\n  \r\n  if (devices.length === 0) {\r\n    console.log('❌ Hiç HID cihazı bulunamadı');\r\n  } else {\r\n    devices.forEach((device, inde",
        "lineCount": 99,
        "isEmpty": false
      }
    },
    "scripts\\cleanup-repository.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\cleanup-repository.js",
        "size": 12644,
        "modified": "2025-08-27T20:33:11.733Z",
        "extension": ".js",
        "basename": "cleanup-repository.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Repository Cleanup Script\r\n * \r\n * Removes unnecessary files, outdated content, and consolidates documentation\r\n * while preserving essential functionality and current working code.\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nconsole.log('🧹 Repository Cleanup');\r\nconsole.log('====================');\r\n\r\n// Files and directories to remove\r\nconst filesToRemove = [\r\n  // Outdated summary files (keep only the latest)\r\n  'kiosk-assignment-failure",
        "lineCount": 361,
        "isEmpty": false
      }
    },
    "scripts\\configure-pi-model.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\configure-pi-model.sh",
        "size": 7835,
        "modified": "2025-08-27T17:45:30.265Z",
        "extension": ".sh",
        "basename": "configure-pi-model.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Raspberry Pi Model Auto-Configuration Script\n# Automatically detects Pi model and applies optimal configuration\n\nset -e\n\necho \"🔍 Detecting Raspberry Pi model...\"\n\n# Detect Pi model\nPI_MODEL=$(cat /proc/cpuinfo | grep Model | cut -d':' -f2 | xargs)\nMEMORY_MB=$(free -m | awk 'NR==2{print $2}')\nCPU_CORES=$(nproc)\n\necho \"Detected: $PI_MODEL\"\necho \"Memory: ${MEMORY_MB}MB\"\necho \"CPU Cores: $CPU_CORES\"\n\n# Determine Pi generation\nif [[ \"$PI_MODEL\" == *\"Pi 4\"* ]]; then\n    PI_TYPE=\"pi4\"\n ",
        "lineCount": 302,
        "isEmpty": false
      }
    },
    "scripts\\debug-pi-commands.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\debug-pi-commands.sh",
        "size": 1737,
        "modified": "2025-08-26T01:32:54.867Z",
        "extension": ".sh",
        "basename": "debug-pi-commands.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\necho \"🔍 Raspberry Pi Command Status Debug\"\necho \"====================================\"\n\n# Check if services are running\necho \"📋 Checking running services...\"\nps aux | grep -E \"(node|npm)\" | grep -v grep\n\necho \"\"\necho \"📡 Testing Gateway connection...\"\ncurl -s http://localhost:3000/api/heartbeat/commands/poll || echo \"❌ Gateway not responding\"\n\necho \"\"\necho \"🖥️ Testing Kiosk connection...\"\ncurl -s http://localhost:3001/health || echo \"❌ Kiosk not responding\"\n\necho \"\"\necho \"📊 Chec",
        "lineCount": 60,
        "isEmpty": false
      }
    },
    "scripts\\dependency-scanner.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\dependency-scanner.js",
        "size": 11772,
        "modified": "2025-08-28T20:01:14.122Z",
        "extension": ".js",
        "basename": "dependency-scanner.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Dependency Scanner\r\n * \r\n * Specialized tool for finding file references and dependencies in codebase\r\n * Supports multiple programming languages and file types\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nclass DependencyScanner {\r\n  constructor(rootPath = '.') {\r\n    this.rootPath = path.resolve(rootPath);\r\n    this.dependencyMap = new Map();\r\n    this.reverseMap = new Map();\r\n    \r\n    // File extensions to scan\r\n    this.scanExtensions = ",
        "lineCount": 395,
        "isEmpty": false
      }
    },
    "scripts\\deploy-accessibility-improvements.ps1": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\deploy-accessibility-improvements.ps1",
        "size": 6436,
        "modified": "2025-08-28T03:55:51.656Z",
        "extension": ".ps1",
        "basename": "deploy-accessibility-improvements.ps1",
        "directory": "scripts",
        "content": "# Deploy Accessibility Improvements to Raspberry Pi\r\n# Task 7: Accessibility validation and WCAG 2.1 AA compliance\r\n\r\nWrite-Host \"🚀 Deploying accessibility improvements to Raspberry Pi...\" -ForegroundColor Blue\r\n\r\n# Function to print colored output\r\nfunction Write-Status {\r\n    param([string]$Message)\r\n    Write-Host \"[INFO] $Message\" -ForegroundColor Cyan\r\n}\r\n\r\nfunction Write-Success {\r\n    param([string]$Message)\r\n    Write-Host \"[SUCCESS] $Message\" -ForegroundColor Green\r\n}\r\n\r\nfunction Write",
        "lineCount": 190,
        "isEmpty": false
      }
    },
    "scripts\\deploy-accessibility-improvements.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\deploy-accessibility-improvements.sh",
        "size": 5995,
        "modified": "2025-08-28T03:55:16.342Z",
        "extension": ".sh",
        "basename": "deploy-accessibility-improvements.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Deploy Accessibility Improvements to Raspberry Pi\n# Task 7: Accessibility validation and WCAG 2.1 AA compliance\n\necho \"🚀 Deploying accessibility improvements to Raspberry Pi...\"\n\n# Colors for output\nGREEN='\\033[0;32m'\nBLUE='\\033[0;34m'\nYELLOW='\\033[1;33m'\nRED='\\033[0;31m'\nNC='\\033[0m' # No Color\n\n# Function to print colored output\nprint_status() {\n    echo -e \"${BLUE}[INFO]${NC} $1\"\n}\n\nprint_success() {\n    echo -e \"${GREEN}[SUCCESS]${NC} $1\"\n}\n\nprint_warning() {\n    echo -e \"${Y",
        "lineCount": 204,
        "isEmpty": false
      }
    },
    "scripts\\deploy-kiosk-ui.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\deploy-kiosk-ui.sh",
        "size": 4521,
        "modified": "2025-08-27T17:38:51.070Z",
        "extension": ".sh",
        "basename": "deploy-kiosk-ui.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Kiosk UI Deployment Script for Raspberry Pi\n# This script deploys the optimized kiosk UI to production\n\nset -e\n\necho \"🚀 Starting Kiosk UI Deployment...\"\n\n# Configuration\nBACKUP_DIR=\"/home/pi/backups/kiosk-ui\"\nSERVICE_NAME=\"kiosk\"\nLOG_FILE=\"/home/pi/logs/deployment.log\"\n\n# Create backup directory if it doesn't exist\nmkdir -p \"$BACKUP_DIR\"\nmkdir -p \"/home/pi/logs\"\n\n# Function to log messages\nlog() {\n    echo \"[$(date '+%Y-%m-%d %H:%M:%S')] $1\" | tee -a \"$LOG_FILE\"\n}\n\n# Function to ",
        "lineCount": 190,
        "isEmpty": false
      }
    },
    "scripts\\deploy-to-pi.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\deploy-to-pi.sh",
        "size": 3160,
        "modified": "2025-08-23T20:12:13.508Z",
        "extension": ".sh",
        "basename": "deploy-to-pi.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\necho \"🚀 Deploying eForm Locker System to Raspberry Pi...\"\necho \"==================================================\"\n\n# Check if we're on the Pi\nif [[ $(uname -m) != \"armv7l\" && $(uname -m) != \"aarch64\" ]]; then\n    echo \"⚠️  This script should be run on the Raspberry Pi\"\n    echo \"   Current architecture: $(uname -m)\"\n    echo \"   Expected: armv7l or aarch64\"\n    read -p \"Continue anyway? (y/N): \" -n 1 -r\n    echo\n    if [[ ! $REPLY =~ ^[Yy]$ ]]; then\n        exit 1\n    fi\nfi\n\n# St",
        "lineCount": 124,
        "isEmpty": false
      }
    },
    "scripts\\deploy-websocket-fix.ps1": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\deploy-websocket-fix.ps1",
        "size": 2504,
        "modified": "2025-08-28T01:06:14.699Z",
        "extension": ".ps1",
        "basename": "deploy-websocket-fix.ps1",
        "directory": "scripts",
        "content": "# Deploy WebSocket fix to Raspberry Pi (PowerShell version)\r\n# This script deploys the WebSocket connection fixes to the Pi\r\n\r\nWrite-Host \"🚀 Deploying WebSocket connection fix to Raspberry Pi...\" -ForegroundColor Green\r\n\r\ntry {\r\n    Write-Host \"📡 Connecting to Raspberry Pi and deploying...\" -ForegroundColor Yellow\r\n    \r\n    # Execute deployment commands on Pi via SSH\r\n    $deployCommands = @\"\r\ncd /home/pi/eform-locker && \r\necho '📥 Pulling latest changes...' && \r\ngit pull origin main && \r\nech",
        "lineCount": 63,
        "isEmpty": false
      }
    },
    "scripts\\deploy-websocket-fix.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\deploy-websocket-fix.sh",
        "size": 2156,
        "modified": "2025-08-28T01:05:59.728Z",
        "extension": ".sh",
        "basename": "deploy-websocket-fix.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Deploy WebSocket fix to Raspberry Pi\n# This script deploys the WebSocket connection fixes to the Pi\n\necho \"🚀 Deploying WebSocket connection fix to Raspberry Pi...\"\n\n# Check if we're on the development machine\nif [[ \"$OSTYPE\" == \"msys\" || \"$OSTYPE\" == \"win32\" ]]; then\n    echo \"📝 Windows detected - use PowerShell commands instead\"\n    echo \"Run: ssh pi@pi-eform-locker \\\"cd /home/pi/eform-locker && git pull origin main\\\"\"\n    exit 1\nfi\n\n# SSH to Pi and deploy\necho \"📡 Connecting t",
        "lineCount": 66,
        "isEmpty": false
      }
    },
    "scripts\\deploy.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\deploy.sh",
        "size": 11938,
        "modified": "2025-08-21T18:17:27.096Z",
        "extension": ".sh",
        "basename": "deploy.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Eform Locker System Deployment Script\n# Handles application updates and deployments\n\nset -e\n\n# Configuration\nINSTALL_DIR=\"/opt/eform\"\nDATA_DIR=\"/opt/eform/data\"\nCONFIG_DIR=\"/opt/eform/config\"\nBACKUP_DIR=\"/opt/eform/backups\"\nLOG_FILE=\"/var/log/eform/deploy.log\"\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\n# Logging functions\nlog_info() {\n    echo -e \"${BLUE}[INFO]${NC} $1\" | tee -a \"$LOG_FILE\"\n}\n\nlog_success",
        "lineCount": 470,
        "isEmpty": false
      }
    },
    "scripts\\deployment-monitor.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\deployment-monitor.sh",
        "size": 16805,
        "modified": "2025-08-21T18:24:29.675Z",
        "extension": ".sh",
        "basename": "deployment-monitor.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Eform Deployment Monitoring Script\n# Monitors deployment health and provides rollback recommendations\n\nset -e\n\n# Configuration\nINSTALL_DIR=\"/opt/eform\"\nCONFIG_DIR=\"/opt/eform/config\"\nLOG_DIR=\"/var/log/eform\"\nMONITOR_LOG=\"$LOG_DIR/deployment-monitor.log\"\nMETRICS_FILE=\"/tmp/eform-deployment-metrics.json\"\n\n# Monitoring thresholds\nCPU_THRESHOLD=80          # CPU usage percentage\nMEMORY_THRESHOLD=85       # Memory usage percentage\nDISK_THRESHOLD=90         # Disk usage percentage\nERROR",
        "lineCount": 510,
        "isEmpty": false
      }
    },
    "scripts\\diagnose-modbus-issue.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\diagnose-modbus-issue.js",
        "size": 5428,
        "modified": "2025-08-22T18:49:18.176Z",
        "extension": ".js",
        "basename": "diagnose-modbus-issue.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Modbus Issue Diagnostic Script\r\n * Helps diagnose timeout and connection issues\r\n */\r\n\r\nimport { SerialPort } from 'serialport';\r\n\r\nasync function diagnoseModbusIssue() {\r\n  console.log('🔍 Modbus Connection Diagnostic');\r\n  console.log('=' .repeat(40));\r\n  \r\n  try {\r\n    // Step 1: Check available ports\r\n    console.log('1️⃣  Checking available serial ports...');\r\n    const ports = await SerialPort.list();\r\n    \r\n    if (ports.length === 0) {\r\n      console.log('❌",
        "lineCount": 180,
        "isEmpty": false
      }
    },
    "scripts\\diagnose-panel-relay-issue.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\diagnose-panel-relay-issue.js",
        "size": 8029,
        "modified": "2025-08-28T06:17:13.238Z",
        "extension": ".js",
        "basename": "diagnose-panel-relay-issue.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Panel Relay Issue Diagnostic Script\r\n * \r\n * This script helps diagnose the \"500 Internal Server Error\" issue\r\n * that occurs after 20-30 minutes of Panel service operation.\r\n */\r\n\r\nconst { exec } = require('child_process');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nconsole.log('🔍 Panel Relay Issue Diagnostic Tool');\r\nconsole.log('=====================================\\n');\r\n\r\nasync function runCommand(command) {\r\n  return new Promise((resolve, r",
        "lineCount": 245,
        "isEmpty": false
      }
    },
    "scripts\\e2e-setup-report.json": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\e2e-setup-report.json",
        "size": 176,
        "modified": "2025-08-26T00:09:24.359Z",
        "extension": ".json",
        "basename": "e2e-setup-report.json",
        "directory": "scripts",
        "content": "{\n  \"timestamp\": \"2025-08-26T00:09:24.358Z\",\n  \"summary\": {\n    \"passed\": 30,\n    \"failed\": 0,\n    \"warnings\": 0,\n    \"total\": 30\n  },\n  \"errors\": [],\n  \"recommendations\": []\n}",
        "lineCount": 11,
        "isEmpty": false
      }
    },
    "scripts\\emergency-close-relay.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\emergency-close-relay.js",
        "size": 1744,
        "modified": "2025-08-26T18:17:16.214Z",
        "extension": ".js",
        "basename": "emergency-close-relay.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * EMERGENCY: Close all relays immediately\r\n * Use this if relays are stuck open to prevent hardware damage\r\n */\r\n\r\nconst axios = require('axios').default;\r\n\r\nconst KIOSK_URL = 'http://localhost:3002';\r\n\r\nasync function emergencyCloseAllRelays() {\r\n  console.log('🚨 EMERGENCY: Closing all relays to prevent hardware damage');\r\n  console.log('============================================================');\r\n  \r\n  try {\r\n    // Try to close relays 1-16 (first card)\r\n    f",
        "lineCount": 51,
        "isEmpty": false
      }
    },
    "scripts\\emergency-relay-reset.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\emergency-relay-reset.js",
        "size": 5177,
        "modified": "2025-08-26T05:00:19.817Z",
        "extension": ".js",
        "basename": "emergency-relay-reset.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * EMERGENCY RELAY RESET\r\n * Turns off all relays that are stuck in ON position\r\n * Use this when relays remain active after service shutdown\r\n */\r\n\r\nconst ModbusRTU = require(\"modbus-serial\");\r\n\r\nasync function emergencyRelayReset() {\r\n  console.log(\"🚨 EMERGENCY RELAY RESET\");\r\n  console.log(\"=\".repeat(50));\r\n  console.log(\"⚠️  This will turn OFF all relays on all cards\");\r\n  console.log(\"🔧 Use this when relays are stuck ON after service shutdown\");\r\n  console.log(",
        "lineCount": 142,
        "isEmpty": false
      }
    },
    "scripts\\file-categorizer.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\file-categorizer.js",
        "size": 14901,
        "modified": "2025-08-28T20:06:32.534Z",
        "extension": ".js",
        "basename": "file-categorizer.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * File Categorization Tool\r\n * \r\n * Specialized tool for categorizing repository files based on:\r\n * - Naming patterns\r\n * - Content analysis\r\n * - File metadata\r\n * - Directory structure\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nclass FileCategorizer {\r\n  constructor(rootPath = '.') {\r\n    this.rootPath = path.resolve(rootPath);\r\n    \r\n    // Comprehensive categorization patterns\r\n    this.patterns = {\r\n      // Temporary/Debug files - high",
        "lineCount": 515,
        "isEmpty": false
      }
    },
    "scripts\\fix-database-path.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\fix-database-path.js",
        "size": 1432,
        "modified": "2025-08-26T02:12:31.388Z",
        "extension": ".js",
        "basename": "fix-database-path.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\nconst path = require('path');\r\n\r\nconsole.log('🔧 Database Path Fix Verification');\r\nconsole.log('=================================');\r\n\r\n// Get the absolute database path\r\nconst projectRoot = process.cwd();\r\nconst dbPath = path.join(projectRoot, 'data', 'eform.db');\r\n\r\nconsole.log('Project root:', projectRoot);\r\nconsole.log('Database path:', dbPath);\r\nconsole.log('EFORM_DB_PATH env var:', process.env.EFORM_DB_PATH || 'not set');\r\n\r\n// Set the environment variable\r\nprocess.",
        "lineCount": 44,
        "isEmpty": false
      }
    },
    "scripts\\fix-duplicate-migrations.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\fix-duplicate-migrations.js",
        "size": 1837,
        "modified": "2025-08-26T00:41:17.214Z",
        "extension": ".js",
        "basename": "fix-duplicate-migrations.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Fix Duplicate Migrations\r\n * This script removes duplicate migration entries that were accidentally created\r\n * when migrations 015 and 016 duplicated the functionality of 009 and 010\r\n */\r\n\r\nconst sqlite3 = require('sqlite3').verbose();\r\nconst path = require('path');\r\nconst fs = require('fs');\r\n\r\nconst dbPath = path.join(__dirname, '..', 'data', 'eform.db');\r\n\r\nconsole.log('🔧 Fixing duplicate migration entries...\\n');\r\n\r\n// Check if database exists\r\nif (!fs.exist",
        "lineCount": 57,
        "isEmpty": false
      }
    },
    "scripts\\fix-kiosk-startup.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\fix-kiosk-startup.sh",
        "size": 1858,
        "modified": "2025-08-23T15:59:45.574Z",
        "extension": ".sh",
        "basename": "fix-kiosk-startup.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Fix Kiosk Startup Issues\n# This script helps diagnose and fix common kiosk startup problems\n\necho \"🔧 Eform Locker - Kiosk Startup Fix Script\"\necho \"==========================================\"\n\n# Check Node.js version\necho \"📋 Checking Node.js version...\"\nnode --version\necho \"\"\n\n# Check if we're in the right directory\nif [ ! -f \"package.json\" ]; then\n    echo \"❌ Error: Not in the project root directory\"\n    echo \"Please run this script from the eform-locker project root\"\n    exit ",
        "lineCount": 74,
        "isEmpty": false
      }
    },
    "scripts\\fix-panel-port.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\fix-panel-port.sh",
        "size": 1053,
        "modified": "2025-08-26T05:15:58.713Z",
        "extension": ".sh",
        "basename": "fix-panel-port.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\necho \"🔍 Checking port usage...\"\necho \"==========================\"\n\n# Check what's using port 3003\necho \"Port 3003 usage:\"\nsudo netstat -tlnp | grep :3003 || echo \"Port 3003 is free\"\n\n# Check what's using port 3001  \necho \"Port 3001 usage:\"\nsudo netstat -tlnp | grep :3001 || echo \"Port 3001 is free\"\n\n# Kill any processes using these ports\necho \"\"\necho \"🛑 Killing processes on ports 3001 and 3003...\"\nsudo pkill -f \"node.*panel\" 2>/dev/null || true\nsudo fuser -k 3001/tcp 2>/dev/null |",
        "lineCount": 42,
        "isEmpty": false
      }
    },
    "scripts\\hardware-diagnostics.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\hardware-diagnostics.js",
        "size": 26934,
        "modified": "2025-08-22T09:33:52.740Z",
        "extension": ".js",
        "basename": "hardware-diagnostics.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Hardware Diagnostics CLI Tool\r\n * Interactive tool for validating RS485 and RFID hardware\r\n * Task 16.4 - Hardware diagnostic tools validation\r\n */\r\n\r\nimport { SerialPort } from 'serialport';\r\nimport { createInterface } from 'readline';\r\nimport { RS485Diagnostics } from '../app/kiosk/src/hardware/rs485-diagnostics.js';\r\nimport { ModbusController } from '../app/kiosk/src/hardware/modbus-controller.js';\r\nimport { RfidHandler } from '../app/kiosk/src/hardware/rfid-han",
        "lineCount": 901,
        "isEmpty": false
      }
    },
    "scripts\\health-check-kiosk.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\health-check-kiosk.sh",
        "size": 10471,
        "modified": "2025-08-27T17:46:19.411Z",
        "extension": ".sh",
        "basename": "health-check-kiosk.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Kiosk UI Health Check Script\n# Comprehensive health monitoring for the kiosk system\n\nset -e\n\n# Configuration\nLOG_FILE=\"/home/pi/logs/health-check.log\"\nALERT_THRESHOLD_CPU=80\nALERT_THRESHOLD_MEMORY=85\nALERT_THRESHOLD_TEMP=75\nALERT_THRESHOLD_RESPONSE=1000\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nNC='\\033[0m' # No Color\n\n# Logging function\nlog() {\n    echo \"[$(date '+%Y-%m-%d %H:%M:%S')] $1\" | tee -a \"$LOG_FILE\"\n}\n\n# Status functions\nstatus_ok() {\n",
        "lineCount": 365,
        "isEmpty": false
      }
    },
    "scripts\\health-check.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\health-check.sh",
        "size": 12227,
        "modified": "2025-08-21T18:18:22.470Z",
        "extension": ".sh",
        "basename": "health-check.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Eform Locker System Health Check Script\n# Comprehensive system health monitoring\n\nset -e\n\n# Configuration\nINSTALL_DIR=\"/opt/eform\"\nDATA_DIR=\"/opt/eform/data\"\nCONFIG_DIR=\"/opt/eform/config\"\nLOG_DIR=\"/var/log/eform\"\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\n# Health status\nOVERALL_STATUS=\"healthy\"\nISSUES=()\n\n# Logging functions\nlog_info() {\n    echo -e \"${BLUE}[INFO]${NC} $1\"\n}\n\nlog_success() {\n    echo -e",
        "lineCount": 403,
        "isEmpty": false
      }
    },
    "scripts\\init-database-manual.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\init-database-manual.sh",
        "size": 1303,
        "modified": "2025-08-23T16:13:44.247Z",
        "extension": ".sh",
        "basename": "init-database-manual.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Manual Database Initialization Script\n# Creates the database and tables manually if the TypeScript migration fails\n\necho \"🗄️  Manual Database Initialization\"\necho \"=================================\"\n\nDB_FILE=\"eform_locker.db\"\n\necho \"📋 Creating database file: $DB_FILE\"\n\n# Create the database and run all migration files\nsqlite3 $DB_FILE << 'EOF'\n-- Enable foreign keys\nPRAGMA foreign_keys = ON;\n\n-- Run all migrations in order\n.read migrations/001_initial_schema.sql\n.read migrations",
        "lineCount": 49,
        "isEmpty": false
      }
    },
    "scripts\\install-production.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\install-production.sh",
        "size": 0,
        "modified": "2025-08-26T00:19:01.721Z",
        "extension": ".sh",
        "basename": "install-production.sh",
        "directory": "scripts",
        "content": "",
        "lineCount": 1,
        "isEmpty": true
      }
    },
    "scripts\\install.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\install.sh",
        "size": 20883,
        "modified": "2025-08-23T11:02:38.472Z",
        "extension": ".sh",
        "basename": "install.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Eform Locker System Installation Script\n# This script installs and configures the Eform Locker System on Linux systems\n\nset -e\n\n# Trap errors and provide cleanup\ntrap 'handle_error $? $LINENO' ERR\n\n# Error handler\nhandle_error() {\n    local exit_code=$1\n    local line_number=$2\n    log_error \"Installation failed at line $line_number with exit code $exit_code\"\n    log_info \"You can try running the script again or check the logs for more details\"\n    exit $exit_code\n}\n\n# Configurati",
        "lineCount": 678,
        "isEmpty": false
      }
    },
    "scripts\\migrate.ts": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\migrate.ts",
        "size": 3336,
        "modified": "2025-08-26T00:28:07.652Z",
        "extension": ".ts",
        "basename": "migrate.ts",
        "directory": "scripts",
        "content": "#!/usr/bin/env tsx\r\n\r\nimport { MigrationRunner } from '../shared/database/migration-runner';\r\nimport { DatabaseConnection } from '../shared/database/connection';\r\n\r\nasync function runMigrations() {\r\n  console.log('🔄 Running database migrations...\\n');\r\n\r\n  try {\r\n    const migrationRunner = new MigrationRunner();\r\n    \r\n    // Show current status\r\n    const status = await migrationRunner.getStatus();\r\n    console.log(`📊 Migration Status:`);\r\n    console.log(`   Applied: ${status.applied.length",
        "lineCount": 111,
        "isEmpty": false
      }
    },
    "scripts\\package.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\package.sh",
        "size": 11807,
        "modified": "2025-08-21T18:20:24.045Z",
        "extension": ".sh",
        "basename": "package.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Eform Locker System Package Creation Script\n# Creates deployment packages for the Eform Locker System\n\nset -e\n\n# Configuration\nPROJECT_ROOT=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")/..\" && pwd)\"\nPACKAGE_DIR=\"$PROJECT_ROOT/dist/packages\"\nBUILD_DIR=\"$PROJECT_ROOT/dist/build\"\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\n# Logging functions\nlog_info() {\n    echo -e \"${BLUE}[INFO]${NC} $1\"\n}\n\nlog_success() {\n    ech",
        "lineCount": 435,
        "isEmpty": false
      }
    },
    "scripts\\pi-database-fix.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\pi-database-fix.sh",
        "size": 1421,
        "modified": "2025-08-26T00:49:54.374Z",
        "extension": ".sh",
        "basename": "pi-database-fix.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\necho \"🔧 Raspberry Pi Database Fix Script\"\necho \"==================================\"\n\n# Check if we're in the right directory\nif [ ! -f \"package.json\" ]; then\n    echo \"❌ Error: Not in the project root directory\"\n    echo \"Please run this script from the eform-locker project root\"\n    exit 1\nfi\n\necho \"📋 Checking current directory: $(pwd)\"\necho \"\"\n\n# Step 1: Fix duplicate migrations\necho \"🔄 Step 1: Fixing duplicate migrations...\"\nnpm run migrate:fix-duplicates\necho \"\"\n\n# Step 2: Ch",
        "lineCount": 51,
        "isEmpty": false
      }
    },
    "scripts\\prepare-release.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\prepare-release.sh",
        "size": 5902,
        "modified": "2025-08-26T00:07:21.751Z",
        "extension": ".sh",
        "basename": "prepare-release.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Release Preparation Script for Admin Panel Relay Control\n# This script prepares the codebase for production deployment on Raspberry Pi\n\nset -e\n\nVERSION=${1:-\"1.0.0\"}\nRELEASE_TAG=\"v${VERSION}\"\n\necho \"🚀 Preparing release ${RELEASE_TAG} for production deployment\"\necho \"============================================================\"\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nNC='\\033[0m' # No Color\n\nprint_status() {\n    local color=$1\n    local message",
        "lineCount": 206,
        "isEmpty": false
      }
    },
    "scripts\\production-startup.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\production-startup.js",
        "size": 7217,
        "modified": "2025-08-25T23:18:22.621Z",
        "extension": ".js",
        "basename": "production-startup.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Production Startup Script\r\n * Ensures all services start with proper configuration logging\r\n */\r\n\r\nconst { spawn } = require('child_process');\r\nconst path = require('path');\r\n\r\nconsole.log('🚀 Production Startup');\r\nconsole.log('=====================');\r\n\r\n// Configuration\r\nconst config = {\r\n  EFORM_DB_PATH: process.env.EFORM_DB_PATH || '/home/pi/eform-locker/data/eform.db',\r\n  KIOSK_ID: process.env.KIOSK_ID || 'KIOSK-1',\r\n  MODBUS_PORT: process.env.MODBUS_PORT || ",
        "lineCount": 245,
        "isEmpty": false
      }
    },
    "scripts\\quick-fix-validation.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\quick-fix-validation.sh",
        "size": 702,
        "modified": "2025-08-23T20:12:02.847Z",
        "extension": ".sh",
        "basename": "quick-fix-validation.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\necho \"🔧 Quick Fix for Validation Dependencies...\"\n\n# Install bcrypt if missing\necho \"📦 Installing bcrypt...\"\nnpm install bcrypt\n\nif [ $? -eq 0 ]; then\n    echo \"✅ bcrypt installed successfully\"\n    \n    # Run the full validation\n    echo \"🔍 Running full database validation...\"\n    node scripts/validate-complete-fix.js\nelse\n    echo \"⚠️  bcrypt installation failed, using simple validation...\"\n    node scripts/validate-database-simple.js\nfi\n\necho \"\"\necho \"🎯 Next steps:\"\necho \"1. C",
        "lineCount": 25,
        "isEmpty": false
      }
    },
    "scripts\\README-analysis-tools.md": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\README-analysis-tools.md",
        "size": 7922,
        "modified": "2025-08-28T20:06:17.795Z",
        "extension": ".md",
        "basename": "README-analysis-tools.md",
        "directory": "scripts",
        "content": "# Repository Analysis Tools\r\n\r\nThis directory contains comprehensive tools for analyzing repository files and generating cleanup recommendations.\r\n\r\n## 🛠️ Available Tools\r\n\r\n### 1. Main Orchestrator\r\n- **`analyze-repository.js`** - Main script that runs all analysis tools and generates comprehensive reports\r\n\r\n### 2. Individual Analysis Tools\r\n- **`repository-analyzer.js`** - Complete file inventory with metadata and categorization\r\n- **`file-categorizer.js`** - Specialized file categorization ",
        "lineCount": 262,
        "isEmpty": false
      }
    },
    "scripts\\README.md": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\README.md",
        "size": 9224,
        "modified": "2025-08-21T18:19:25.955Z",
        "extension": ".md",
        "basename": "README.md",
        "directory": "scripts",
        "content": "# Eform Locker System - Deployment Scripts\r\n\r\nThis directory contains installation, deployment, and maintenance scripts for the Eform Locker System.\r\n\r\n## Scripts Overview\r\n\r\n### Installation Scripts\r\n\r\n#### `install.sh`\r\nComplete system installation script for Ubuntu/Debian systems.\r\n\r\n**Features:**\r\n- Installs Node.js 20 LTS and system dependencies\r\n- Creates system user and directories with proper permissions\r\n- Installs and builds the application\r\n- Sets up systemd services\r\n- Configures har",
        "lineCount": 405,
        "isEmpty": false
      }
    },
    "scripts\\repository-analyzer.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\repository-analyzer.js",
        "size": 15239,
        "modified": "2025-08-28T19:59:51.131Z",
        "extension": ".js",
        "basename": "repository-analyzer.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Repository Analysis Tool\r\n * \r\n * Analyzes repository files for cleanup planning by:\r\n * - Inventorying all files with metadata\r\n * - Categorizing files based on patterns and content\r\n * - Scanning for dependencies and references\r\n * - Assessing safety for removal\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst crypto = require('crypto');\r\n\r\nclass RepositoryAnalyzer {\r\n  constructor(rootPath = '.') {\r\n    this.rootPath = path.resolve(rootPat",
        "lineCount": 537,
        "isEmpty": false
      }
    },
    "scripts\\reset-users.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\reset-users.js",
        "size": 1244,
        "modified": "2025-08-23T19:30:28.252Z",
        "extension": ".js",
        "basename": "reset-users.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\nconst sqlite3 = require('sqlite3').verbose();\r\nconst path = require('path');\r\nconst fs = require('fs');\r\n\r\nfunction resetUsers() {\r\n  console.log('🔄 Resetting users table...');\r\n  \r\n  const dbPath = path.join(__dirname, '../data/eform.db');\r\n  \r\n  if (!fs.existsSync(dbPath)) {\r\n    console.log('❌ Database file does not exist');\r\n    console.log('✅ Nothing to reset - fresh installation');\r\n    return;\r\n  }\r\n  \r\n  const db = new sqlite3.Database(dbPath);\r\n  \r\n  // Delete al",
        "lineCount": 46,
        "isEmpty": false
      }
    },
    "scripts\\restore-auth.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\restore-auth.js",
        "size": 1457,
        "modified": "2025-08-23T21:33:31.098Z",
        "extension": ".js",
        "basename": "restore-auth.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Restore normal authentication after debugging\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nconsole.log('🔧 Restoring Normal Authentication');\r\nconsole.log('=================================\\n');\r\n\r\nconst authMiddlewarePath = path.join(__dirname, '../app/panel/src/middleware/auth-middleware.ts');\r\nconst backupPath = authMiddlewarePath + '.backup';\r\n\r\ntry {\r\n  if (!fs.existsSync(backupPath)) {\r\n    console.log('❌ No backup found. Auth middlewar",
        "lineCount": 49,
        "isEmpty": false
      }
    },
    "scripts\\restore.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\restore.sh",
        "size": 10333,
        "modified": "2025-08-21T18:15:53.459Z",
        "extension": ".sh",
        "basename": "restore.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Eform Locker System Restore Script\n# Restores system from backup files\n\nset -e\n\n# Configuration\nINSTALL_DIR=\"/opt/eform\"\nDATA_DIR=\"/opt/eform/data\"\nCONFIG_DIR=\"/opt/eform/config\"\nBACKUP_DIR=\"/opt/eform/backups\"\nLOG_FILE=\"/var/log/eform/restore.log\"\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\n# Logging functions\nlog_info() {\n    echo -e \"${BLUE}[INFO]${NC} $1\" | tee -a \"$LOG_FILE\"\n}\n\nlog_success() {\n    ech",
        "lineCount": 389,
        "isEmpty": false
      }
    },
    "scripts\\run-comprehensive-tests.ps1": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\run-comprehensive-tests.ps1",
        "size": 13249,
        "modified": "2025-08-21T19:42:14.591Z",
        "extension": ".ps1",
        "basename": "run-comprehensive-tests.ps1",
        "directory": "scripts",
        "content": "# Comprehensive Test Suite Runner (PowerShell)\r\n# Executes all test categories with proper reporting and coverage\r\n\r\nparam(\r\n    [switch]$SkipSoak = $false,\r\n    [switch]$SkipE2E = $false,\r\n    [switch]$Verbose = $false\r\n)\r\n\r\n# Colors for output\r\n$Red = \"Red\"\r\n$Green = \"Green\"\r\n$Yellow = \"Yellow\"\r\n$Blue = \"Blue\"\r\n$White = \"White\"\r\n\r\n# Test results tracking\r\n$TotalTests = 0\r\n$PassedTests = 0\r\n$FailedTests = 0\r\n$TestResults = @()\r\n\r\n# Function to run tests and capture results\r\nfunction Run-TestSui",
        "lineCount": 411,
        "isEmpty": false
      }
    },
    "scripts\\run-comprehensive-tests.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\run-comprehensive-tests.sh",
        "size": 10343,
        "modified": "2025-08-21T19:41:08.151Z",
        "extension": ".sh",
        "basename": "run-comprehensive-tests.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Comprehensive Test Suite Runner\n# Executes all test categories with proper reporting and coverage\n\nset -e\n\necho \"🧪 Starting Comprehensive Test Suite\"\necho \"======================================\"\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\n# Test results tracking\nTOTAL_TESTS=0\nPASSED_TESTS=0\nFAILED_TESTS=0\nTEST_RESULTS=()\n\n# Function to run tests and capture results\nrun_test_suite() {\n    local suite_name",
        "lineCount": 322,
        "isEmpty": false
      }
    },
    "scripts\\run-cookie-diagnostics.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\run-cookie-diagnostics.sh",
        "size": 472,
        "modified": "2025-08-23T23:28:20.758Z",
        "extension": ".sh",
        "basename": "run-cookie-diagnostics.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\necho \"🔍 Running Complete Cookie Diagnostics\"\necho \"======================================\"\necho \"\"\n\necho \"1️⃣ Checking Configuration...\"\nnode scripts/check-cookie-config.js\n\necho \"\"\necho \"2️⃣ Testing Cookie Behavior...\"\nnode scripts/debug-cookie-issue.js\n\necho \"\"\necho \"3️⃣ Validating Fix Implementation...\"\nnode scripts/validate-auth-fix-quick.js\n\necho \"\"\necho \"🎯 Diagnostics Complete!\"\necho \"Review the output above to identify the issue.\"",
        "lineCount": 20,
        "isEmpty": false
      }
    },
    "scripts\\run-e2e-admin-panel-tests.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\run-e2e-admin-panel-tests.js",
        "size": 12311,
        "modified": "2025-08-26T00:04:37.234Z",
        "extension": ".js",
        "basename": "run-e2e-admin-panel-tests.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Comprehensive End-to-End Test Runner for Admin Panel Relay Control\r\n * \r\n * This script orchestrates all end-to-end tests including:\r\n * - Service availability checks\r\n * - Hardware validation\r\n * - Admin panel functionality tests\r\n * - Error scenario validation\r\n * - Logging verification\r\n * - UI feedback validation\r\n */\r\n\r\nconst { spawn } = require('child_process');\r\nconst fs = require('fs').promises;\r\nconst path = require('path');\r\n\r\nconst __dirname = __dirname;",
        "lineCount": 424,
        "isEmpty": false
      }
    },
    "scripts\\run-integration-tests.ps1": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\run-integration-tests.ps1",
        "size": 5612,
        "modified": "2025-08-21T20:07:04.950Z",
        "extension": ".ps1",
        "basename": "run-integration-tests.ps1",
        "directory": "scripts",
        "content": "#!/usr/bin/env pwsh\r\n\r\n# Integration Test Runner for Eform Locker System\r\n# This script runs integration tests for multi-room operations and system validation\r\n\r\nparam(\r\n    [switch]$Verbose = $false,\r\n    [switch]$Coverage = $false,\r\n    [string]$Filter = \"\"\r\n)\r\n\r\n$ErrorActionPreference = \"Stop\"\r\n$ProgressPreference = \"SilentlyContinue\"\r\n\r\n# Colors for output\r\n$Green = \"Green\"\r\n$Red = \"Red\"\r\n$Yellow = \"Yellow\"\r\n$Blue = \"Blue\"\r\n\r\nfunction Write-TestHeader {\r\n    param([string]$Message)\r\n    Writ",
        "lineCount": 182,
        "isEmpty": false
      }
    },
    "scripts\\run-system-validation.ps1": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\run-system-validation.ps1",
        "size": 15656,
        "modified": "2025-08-21T20:32:24.079Z",
        "extension": ".ps1",
        "basename": "run-system-validation.ps1",
        "directory": "scripts",
        "content": "#!/usr/bin/env pwsh\r\n\r\n<#\r\n.SYNOPSIS\r\n    Comprehensive System Validation Test Runner\r\n    \r\n.DESCRIPTION\r\n    Runs complete system validation and performance testing for the Eform Locker System.\r\n    This script validates all requirements and performs acceptance testing.\r\n    \r\n.PARAMETER TestType\r\n    Type of validation to run: all, unit, integration, performance, hardware, security\r\n    \r\n.PARAMETER Verbose\r\n    Enable verbose output\r\n    \r\n.PARAMETER GenerateReport\r\n    Generate detailed tes",
        "lineCount": 462,
        "isEmpty": false
      }
    },
    "scripts\\run-system-validation.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\run-system-validation.sh",
        "size": 13801,
        "modified": "2025-08-21T20:33:40.201Z",
        "extension": ".sh",
        "basename": "run-system-validation.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Comprehensive System Validation Test Runner\n# Runs complete system validation and performance testing for the Eform Locker System\n\nset -euo pipefail\n\n# Configuration\nSCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\nPROJECT_ROOT=\"$(dirname \"$SCRIPT_DIR\")\"\nTEST_TYPE=\"${1:-all}\"\nVERBOSE=\"${2:-false}\"\nGENERATE_REPORT=\"${3:-false}\"\n\n# Colors\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nPURPLE='\\033[0;35m'\nCYAN='\\033[0;36m'\nNC='\\033[0m' # No Color\n",
        "lineCount": 444,
        "isEmpty": false
      }
    },
    "scripts\\safety-assessor.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\safety-assessor.js",
        "size": 12581,
        "modified": "2025-08-28T20:02:42.523Z",
        "extension": ".js",
        "basename": "safety-assessor.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Safety Assessment Tool\r\n * \r\n * Evaluates files for safe removal based on multiple criteria:\r\n * - File categorization\r\n * - Dependency analysis\r\n * - Content analysis\r\n * - Risk assessment\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst RepositoryAnalyzer = require('./repository-analyzer');\r\nconst DependencyScanner = require('./dependency-scanner');\r\n\r\nclass SafetyAssessor {\r\n  constructor(rootPath = '.') {\r\n    this.rootPath = path.resolve",
        "lineCount": 400,
        "isEmpty": false
      }
    },
    "scripts\\setup-config.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\setup-config.js",
        "size": 6860,
        "modified": "2025-08-22T19:34:22.229Z",
        "extension": ".js",
        "basename": "setup-config.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Configuration Setup Script\r\n * Helps set up system configuration for different environments\r\n */\r\n\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport { createHash, randomBytes } from 'crypto';\r\n\r\nconst CONFIG_DIR = './config';\r\nconst ENVIRONMENTS = ['development', 'production', 'test'];\r\n\r\nfunction generateSecureSecret(length = 64) {\r\n  return randomBytes(length).toString('hex');\r\n}\r\n\r\nfunction generateSystemId() {\r\n  const timestamp = Date.now().toString();\r\n",
        "lineCount": 203,
        "isEmpty": false
      }
    },
    "scripts\\setup-database.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\setup-database.sh",
        "size": 1314,
        "modified": "2025-08-23T16:13:35.574Z",
        "extension": ".sh",
        "basename": "setup-database.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Database Setup Script for Raspberry Pi\n# This script initializes the database with all required tables\n\necho \"🗄️  Eform Locker - Database Setup\"\necho \"=================================\"\n\n# Check if we're in the right directory\nif [ ! -f \"package.json\" ]; then\n    echo \"❌ Error: Not in the project root directory\"\n    echo \"Please run this script from the eform-locker project root\"\n    exit 1\nfi\n\necho \"📋 Checking database status...\"\n\n# Check if tsx is available\nif ! command -v tsx",
        "lineCount": 50,
        "isEmpty": false
      }
    },
    "scripts\\setup-logs-dir.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\setup-logs-dir.sh",
        "size": 120,
        "modified": "2025-08-26T05:11:41.982Z",
        "extension": ".sh",
        "basename": "setup-logs-dir.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n# Create logs directory if it doesn't exist\nmkdir -p logs\necho \"📁 Logs directory created at: $(pwd)/logs\"",
        "lineCount": 4,
        "isEmpty": false
      }
    },
    "scripts\\setup-pi-environment.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\setup-pi-environment.sh",
        "size": 3375,
        "modified": "2025-08-26T01:07:32.667Z",
        "extension": ".sh",
        "basename": "setup-pi-environment.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\necho \"🔧 Raspberry Pi Environment Setup for eForm Locker\"\necho \"==================================================\"\n\n# Check if running as pi user\nif [ \"$USER\" != \"pi\" ]; then\n    echo \"⚠️  Warning: This script is designed to run as the 'pi' user\"\n    echo \"Current user: $USER\"\n    read -p \"Continue anyway? (y/N): \" -n 1 -r\n    echo\n    if [[ ! $REPLY =~ ^[Yy]$ ]]; then\n        exit 1\n    fi\nfi\n\n# Get project directory\nPROJECT_DIR=$(pwd)\nif [ ! -f \"$PROJECT_DIR/package.json\" ]; then",
        "lineCount": 122,
        "isEmpty": false
      }
    },
    "scripts\\sign-package.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\sign-package.sh",
        "size": 12570,
        "modified": "2025-08-21T18:23:09.410Z",
        "extension": ".sh",
        "basename": "sign-package.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Eform Package Signing Script\n# Creates and verifies digital signatures for deployment packages\n\nset -e\n\n# Configuration\nKEYS_DIR=\"/opt/eform/keys\"\nPRIVATE_KEY_FILE=\"$KEYS_DIR/update-private-key.pem\"\nPUBLIC_KEY_FILE=\"$KEYS_DIR/update-public-key.pem\"\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\n# Logging functions\nlog_info() {\n    echo -e \"${BLUE}[INFO]${NC} $1\"\n}\n\nlog_success() {\n    echo -e \"${GREEN}[SUCCES",
        "lineCount": 427,
        "isEmpty": false
      }
    },
    "scripts\\simple-relay-test.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\simple-relay-test.js",
        "size": 2112,
        "modified": "2025-08-25T23:33:03.099Z",
        "extension": ".js",
        "basename": "simple-relay-test.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Simple Relay Test - Corrected Version\r\n * Uses the proper public interface of ModbusController\r\n */\r\n\r\nimport { ModbusController } from '../app/kiosk/src/hardware/modbus-controller.ts';\r\n\r\nasync function simpleRelayTest() {\r\n  console.log('🔧 Simple Relay Test (Corrected)');\r\n  console.log('=' .repeat(35));\r\n  \r\n  // Auto-detect RS-485 port\r\n  const { SerialPort } = await import('serialport');\r\n  const ports = await SerialPort.list();\r\n  const rs485Port = ports.fin",
        "lineCount": 69,
        "isEmpty": false
      }
    },
    "scripts\\start-all-clean.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\start-all-clean.sh",
        "size": 2983,
        "modified": "2025-08-27T18:17:00.817Z",
        "extension": ".sh",
        "basename": "start-all-clean.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\necho \"🚀 Starting all eForm Locker services (Clean Start)...\"\necho \"=====================================================\"\n\n# Ensure we're in the right directory\ncd /home/pi/eform-locker\n\n# Kill any existing services\necho \"🛑 Stopping existing services...\"\nsudo killall node 2>/dev/null || true\nsleep 3\n\n# Verify no processes are running\nRUNNING=$(ps aux | grep \"node.*dist/index.js\" | grep -v grep | wc -l)\nif [ \"$RUNNING\" -gt 0 ]; then\n    echo \"⚠️  Warning: $RUNNING processes still r",
        "lineCount": 112,
        "isEmpty": false
      }
    },
    "scripts\\start-kiosk-clean.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\start-kiosk-clean.sh",
        "size": 714,
        "modified": "2025-08-26T18:28:46.176Z",
        "extension": ".sh",
        "basename": "start-kiosk-clean.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Clean Kiosk Startup Script\n# Ensures only one Kiosk process runs at a time\n\necho \"🧹 Cleaning up any existing Kiosk processes...\"\n\n# Kill any existing node processes\nsudo killall node 2>/dev/null || true\nsleep 3\n\n# Verify no processes are running\nRUNNING=$(ps aux | grep \"node dist/index.js\" | grep -v grep | wc -l)\nif [ \"$RUNNING\" -gt 0 ]; then\n    echo \"⚠️  Warning: $RUNNING processes still running, force killing...\"\n    sudo pkill -9 -f \"node dist/index.js\"\n    sleep 2\nfi\n\necho \"",
        "lineCount": 30,
        "isEmpty": false
      }
    },
    "scripts\\systemd\\eform-agent.service": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts\\systemd directory"
      ],
      "metadata": {
        "path": "scripts\\systemd\\eform-agent.service",
        "size": 1159,
        "modified": "2025-08-21T18:14:24.687Z",
        "extension": ".service",
        "basename": "eform-agent.service",
        "directory": "scripts\\systemd",
        "content": "[Unit]\r\nDescription=Eform Locker System - Update Agent\r\nDocumentation=https://github.com/eform/locker-system\r\nAfter=network.target\r\nWants=network.target\r\n\r\n[Service]\r\nType=simple\r\nUser=eform\r\nGroup=eform\r\nWorkingDirectory=/opt/eform\r\nExecStart=/usr/bin/node app/agent/dist/index.js\r\nExecReload=/bin/kill -HUP $MAINPID\r\nRestart=always\r\nRestartSec=30\r\nStandardOutput=journal\r\nStandardError=journal\r\nSyslogIdentifier=eform-agent\r\n\r\n# Environment\r\nEnvironment=NODE_ENV=production\r\nEnvironment=CONFIG_PATH",
        "lineCount": 46,
        "isEmpty": false
      }
    },
    "scripts\\systemd\\eform-gateway.service": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts\\systemd directory"
      ],
      "metadata": {
        "path": "scripts\\systemd\\eform-gateway.service",
        "size": 1139,
        "modified": "2025-08-21T18:14:01.585Z",
        "extension": ".service",
        "basename": "eform-gateway.service",
        "directory": "scripts\\systemd",
        "content": "[Unit]\r\nDescription=Eform Locker System - Gateway Service\r\nDocumentation=https://github.com/eform/locker-system\r\nAfter=network.target\r\nWants=network.target\r\n\r\n[Service]\r\nType=simple\r\nUser=eform\r\nGroup=eform\r\nWorkingDirectory=/opt/eform\r\nExecStart=/usr/bin/node app/gateway/dist/index.js\r\nExecReload=/bin/kill -HUP $MAINPID\r\nRestart=always\r\nRestartSec=10\r\nStandardOutput=journal\r\nStandardError=journal\r\nSyslogIdentifier=eform-gateway\r\n\r\n# Environment\r\nEnvironment=NODE_ENV=production\r\nEnvironment=CONF",
        "lineCount": 47,
        "isEmpty": false
      }
    },
    "scripts\\systemd\\eform-kiosk.service": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts\\systemd directory"
      ],
      "metadata": {
        "path": "scripts\\systemd\\eform-kiosk.service",
        "size": 1270,
        "modified": "2025-08-21T18:14:09.114Z",
        "extension": ".service",
        "basename": "eform-kiosk.service",
        "directory": "scripts\\systemd",
        "content": "[Unit]\r\nDescription=Eform Locker System - Kiosk Service\r\nDocumentation=https://github.com/eform/locker-system\r\nAfter=network.target eform-gateway.service\r\nWants=network.target\r\nRequires=eform-gateway.service\r\n\r\n[Service]\r\nType=simple\r\nUser=eform\r\nGroup=eform\r\nWorkingDirectory=/opt/eform\r\nExecStart=/usr/bin/node app/kiosk/dist/index.js\r\nExecReload=/bin/kill -HUP $MAINPID\r\nRestart=always\r\nRestartSec=10\r\nStandardOutput=journal\r\nStandardError=journal\r\nSyslogIdentifier=eform-kiosk\r\n\r\n# Environment\r\nE",
        "lineCount": 52,
        "isEmpty": false
      }
    },
    "scripts\\systemd\\eform-panel.service": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts\\systemd directory"
      ],
      "metadata": {
        "path": "scripts\\systemd\\eform-panel.service",
        "size": 1218,
        "modified": "2025-08-21T18:14:16.471Z",
        "extension": ".service",
        "basename": "eform-panel.service",
        "directory": "scripts\\systemd",
        "content": "[Unit]\r\nDescription=Eform Locker System - Management Panel\r\nDocumentation=https://github.com/eform/locker-system\r\nAfter=network.target eform-gateway.service\r\nWants=network.target\r\nRequires=eform-gateway.service\r\n\r\n[Service]\r\nType=simple\r\nUser=eform\r\nGroup=eform\r\nWorkingDirectory=/opt/eform\r\nExecStart=/usr/bin/node app/panel/dist/index.js\r\nExecReload=/bin/kill -HUP $MAINPID\r\nRestart=always\r\nRestartSec=10\r\nStandardOutput=journal\r\nStandardError=journal\r\nSyslogIdentifier=eform-panel\r\n\r\n# Environment",
        "lineCount": 49,
        "isEmpty": false
      }
    },
    "scripts\\test-admin-panel-e2e.ps1": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\test-admin-panel-e2e.ps1",
        "size": 5895,
        "modified": "2025-08-26T00:05:32.522Z",
        "extension": ".ps1",
        "basename": "test-admin-panel-e2e.ps1",
        "directory": "scripts",
        "content": "# End-to-End Test Runner for Admin Panel Relay Control (PowerShell)\r\n# This script runs all the comprehensive tests for the admin panel relay control feature\r\n\r\nparam(\r\n    [switch]$SkipHardware = $false,\r\n    [switch]$Verbose = $false\r\n)\r\n\r\n# Set error action preference\r\n$ErrorActionPreference = \"Stop\"\r\n\r\nWrite-Host \"🚀 Starting End-to-End Tests for Admin Panel Relay Control\" -ForegroundColor Cyan\r\nWrite-Host \"============================================================\" -ForegroundColor Cyan\r\n",
        "lineCount": 158,
        "isEmpty": false
      }
    },
    "scripts\\test-admin-panel-e2e.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\test-admin-panel-e2e.sh",
        "size": 2707,
        "modified": "2025-08-26T00:05:11.893Z",
        "extension": ".sh",
        "basename": "test-admin-panel-e2e.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# End-to-End Test Runner for Admin Panel Relay Control\n# This script runs all the comprehensive tests for the admin panel relay control feature\n\nset -e\n\necho \"🚀 Starting End-to-End Tests for Admin Panel Relay Control\"\necho \"============================================================\"\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nNC='\\033[0m' # No Color\n\n# Function to print colored output\nprint_status() {\n    local color=$1\n    local message=$2\n    ec",
        "lineCount": 101,
        "isEmpty": false
      }
    },
    "scripts\\test-basic-relay-control.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\test-basic-relay-control.js",
        "size": 2329,
        "modified": "2025-08-26T18:40:49.874Z",
        "extension": ".js",
        "basename": "test-basic-relay-control.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Test Basic Relay Control\r\n * Tests if we can turn relay ON and OFF with simple commands\r\n */\r\n\r\nconst { SerialPort } = require('serialport');\r\n\r\nasync function testBasicRelayControl() {\r\n  console.log('🔧 Testing basic relay control...');\r\n  \r\n  let port;\r\n  try {\r\n    // Open serial port\r\n    port = new SerialPort({\r\n      path: '/dev/ttyUSB0',\r\n      baudRate: 9600,\r\n      dataBits: 8,\r\n      parity: 'none',\r\n      stopBits: 1\r\n    });\r\n\r\n    await new Promise((r",
        "lineCount": 71,
        "isEmpty": false
      }
    },
    "scripts\\test-card-assignment.bat": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\test-card-assignment.bat",
        "size": 546,
        "modified": "2025-08-27T05:44:43.642Z",
        "extension": ".bat",
        "basename": "test-card-assignment.bat",
        "directory": "scripts",
        "content": "@echo off\r\necho Running Card Assignment Flow Tests\r\necho ===================================\r\n\r\necho.\r\necho Checking if Node.js is available...\r\nnode --version\r\nif %errorlevel% neq 0 (\r\n    echo Error: Node.js is not installed or not in PATH\r\n    exit /b 1\r\n)\r\n\r\necho.\r\necho Running comprehensive card assignment tests...\r\nnode scripts/run-card-assignment-tests.js\r\n\r\nif %errorlevel% neq 0 (\r\n    echo.\r\n    echo Tests failed! Please check the output above.\r\n    exit /b 1\r\n) else (\r\n    echo.\r\n    e",
        "lineCount": 26,
        "isEmpty": false
      }
    },
    "scripts\\test-multiple-relay-cards.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\test-multiple-relay-cards.js",
        "size": 6028,
        "modified": "2025-08-28T00:20:37.384Z",
        "extension": ".js",
        "basename": "test-multiple-relay-cards.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Test script for multiple Waveshare 16-channel relay cards\r\n * Tests locker mapping across 3 cards (48 lockers total)\r\n */\r\n\r\nconst { SerialPort } = require('serialport');\r\n\r\n// Configuration\r\nconst SERIAL_PORT = process.env.MODBUS_PORT || '/dev/ttyUSB0';\r\nconst BAUDRATE = 9600;\r\nconst PULSE_DURATION = 500; // ms\r\n\r\n// CRC16 calculation (same as working implementation)\r\nfunction calculateCRC16(data) {\r\n  let crc = 0xFFFF;\r\n  \r\n  for (let i = 0; i < data.length; i++)",
        "lineCount": 193,
        "isEmpty": false
      }
    },
    "scripts\\test-queue-vs-direct.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\test-queue-vs-direct.js",
        "size": 5247,
        "modified": "2025-08-26T04:57:49.660Z",
        "extension": ".js",
        "basename": "test-queue-vs-direct.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Test Queue vs Direct Relay Activation\r\n * Compares queue-based locker opening vs direct relay activation\r\n */\r\n\r\nconst { exec } = require('child_process');\r\nconst { promisify } = require('util');\r\nconst execAsync = promisify(exec);\r\n\r\nasync function testQueueVsDirect() {\r\n  console.log(\"🔧 Testing Queue vs Direct Relay Activation\");\r\n  console.log(\"=\".repeat(60));\r\n\r\n  const PANEL_URL = 'http://localhost:3001';\r\n  const GATEWAY_URL = 'http://localhost:3000';\r\n  con",
        "lineCount": 136,
        "isEmpty": false
      }
    },
    "scripts\\test-relay-activation.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\test-relay-activation.js",
        "size": 3593,
        "modified": "2025-08-28T18:22:20.921Z",
        "extension": ".js",
        "basename": "test-relay-activation.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Test Relay Activation Script\r\n * Tests individual relay activation using proper ModbusController interface\r\n */\r\n\r\nconst { ModbusController } = require(\"../app/kiosk/dist/index.js\");\r\n\r\nasync function testRelayActivation() {\r\n  console.log(\"🔧 Testing Individual Relay Activation\");\r\n  console.log(\"=\".repeat(50));\r\n\r\n  // Create controller with proper configuration\r\n  const controller = new ModbusController({\r\n    port: \"/dev/ttyUSB0\",\r\n    baudrate: 9600,\r\n    time",
        "lineCount": 106,
        "isEmpty": false
      }
    },
    "scripts\\test-relays-1-8.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\test-relays-1-8.js",
        "size": 3536,
        "modified": "2025-08-26T18:51:24.298Z",
        "extension": ".js",
        "basename": "test-relays-1-8.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Test Relays 1-8 Control\r\n * Tests which relays in the first 8 work properly (ON and OFF)\r\n */\r\n\r\nconst { SerialPort } = require('serialport');\r\n\r\n// CRC16 calculation for Modbus RTU\r\nfunction calculateCRC16(data) {\r\n  let crc = 0xFFFF;\r\n  \r\n  for (let i = 0; i < data.length; i++) {\r\n    crc ^= data[i];\r\n    \r\n    for (let j = 0; j < 8; j++) {\r\n      if (crc & 0x0001) {\r\n        crc = (crc >> 1) ^ 0xA001;\r\n      } else {\r\n        crc = crc >> 1;\r\n      }\r\n    }\r\n  }",
        "lineCount": 117,
        "isEmpty": false
      }
    },
    "scripts\\test-rfid-simple.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\test-rfid-simple.js",
        "size": 3562,
        "modified": "2025-08-22T19:12:30.531Z",
        "extension": ".js",
        "basename": "test-rfid-simple.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Simple RFID Reader Test Script\r\n * Tests RFID functionality with proper configuration\r\n */\r\n\r\nimport { RfidHandler } from '../app/kiosk/src/hardware/rfid-handler.ts';\r\n\r\nasync function testRfidReader() {\r\n  console.log('🔍 RFID Okuyucu Test Başlatılıyor...');\r\n  \r\n  // Try HID mode first\r\n  const hidConfig = {\r\n    reader_type: 'hid',\r\n    debounce_ms: 1000,\r\n    // Auto-detect common RFID readers\r\n  };\r\n  \r\n  const rfidHandler = new RfidHandler(hidConfig);\r\n  \r\n  ",
        "lineCount": 120,
        "isEmpty": false
      }
    },
    "scripts\\test-services-startup.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\test-services-startup.js",
        "size": 4650,
        "modified": "2025-08-26T04:58:12.115Z",
        "extension": ".js",
        "basename": "test-services-startup.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Test Services Startup\r\n * Simple test to verify services can start without hardware\r\n */\r\n\r\nconst { exec } = require('child_process');\r\nconst { promisify } = require('util');\r\nconst execAsync = promisify(exec);\r\n\r\nasync function testServicesStartup() {\r\n  console.log(\"🔧 Testing Services Startup (No Hardware Required)\");\r\n  console.log(\"=\".repeat(60));\r\n\r\n  // Test 1: Check if services are running\r\n  console.log(\"\\n📊 Test 1: Service Status Check\");\r\n  console.log(",
        "lineCount": 126,
        "isEmpty": false
      }
    },
    "scripts\\test-websocket-connection.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\test-websocket-connection.js",
        "size": 2492,
        "modified": "2025-08-28T00:41:59.867Z",
        "extension": ".js",
        "basename": "test-websocket-connection.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Test WebSocket connection to Panel service\r\n * This script tests the WebSocket server that should be running on port 8080\r\n */\r\n\r\nconst WebSocket = require('ws');\r\n\r\nconst WEBSOCKET_URL = 'ws://192.168.1.8:8080';\r\nconst TEST_TIMEOUT = 10000; // 10 seconds\r\n\r\nconsole.log('🔌 Testing WebSocket connection to Panel service...');\r\nconsole.log(`📡 Connecting to: ${WEBSOCKET_URL}`);\r\n\r\nconst ws = new WebSocket(WEBSOCKET_URL);\r\nlet connected = false;\r\nlet messageReceived =",
        "lineCount": 89,
        "isEmpty": false
      }
    },
    "scripts\\test-websocket-realtime-updates.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\test-websocket-realtime-updates.js",
        "size": 18176,
        "modified": "2025-08-28T03:22:03.732Z",
        "extension": ".js",
        "basename": "test-websocket-realtime-updates.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Test real-time WebSocket updates for Admin Panel UI improvements\r\n * This script tests Task 5 requirements:\r\n * - WebSocket state updates properly refresh RFID display information\r\n * - Status color changes are applied immediately when locker states change\r\n * - Owner information updates in real-time when lockers are assigned or released\r\n * - Smooth transition animations for status color changes\r\n * - Performance with multiple simultaneous locker state updates\r\n *",
        "lineCount": 471,
        "isEmpty": false
      }
    },
    "scripts\\test-websocket-realtime-updates.ps1": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\test-websocket-realtime-updates.ps1",
        "size": 12560,
        "modified": "2025-08-28T03:29:00.201Z",
        "extension": ".ps1",
        "basename": "test-websocket-realtime-updates.ps1",
        "directory": "scripts",
        "content": "#!/usr/bin/env pwsh\r\n\r\n<#\r\n.SYNOPSIS\r\n    Test real-time WebSocket updates for Admin Panel UI improvements (Task 5)\r\n\r\n.DESCRIPTION\r\n    This script tests the WebSocket real-time update functionality for Task 5:\r\n    - WebSocket state updates properly refresh RFID display information\r\n    - Status color changes are applied immediately when locker states change\r\n    - Owner information updates in real-time when lockers are assigned or released\r\n    - Smooth transition animations for status color ",
        "lineCount": 343,
        "isEmpty": false
      }
    },
    "scripts\\test-websocket-simple.ps1": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\test-websocket-simple.ps1",
        "size": 3617,
        "modified": "2025-08-28T03:29:31.483Z",
        "extension": ".ps1",
        "basename": "test-websocket-simple.ps1",
        "directory": "scripts",
        "content": "#!/usr/bin/env pwsh\r\n\r\n<#\r\n.SYNOPSIS\r\n    Simple WebSocket real-time update test for Task 5\r\n\r\n.DESCRIPTION\r\n    This script runs the Node.js WebSocket test and validates the admin panel UI\r\n#>\r\n\r\nparam(\r\n    [Parameter(Mandatory=$false)]\r\n    [switch]$Verbose\r\n)\r\n\r\n$WEBSOCKET_URL = \"ws://192.168.1.8:8080\"\r\n$PANEL_URL = \"http://192.168.1.8:3001\"\r\n\r\nWrite-Host \"🧪 Testing Real-time WebSocket Updates (Task 5)\" -ForegroundColor Cyan\r\nWrite-Host \"=\" * 50 -ForegroundColor Gray\r\n\r\n# Test 1: WebSocket ",
        "lineCount": 94,
        "isEmpty": false
      }
    },
    "scripts\\uninstall.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\uninstall.sh",
        "size": 8736,
        "modified": "2025-08-21T18:16:33.052Z",
        "extension": ".sh",
        "basename": "uninstall.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Eform Locker System Uninstall Script\n# Removes the Eform Locker System from the system\n\nset -e\n\n# Configuration\nINSTALL_DIR=\"/opt/eform\"\nSERVICE_USER=\"eform\"\nSERVICE_GROUP=\"eform\"\nLOG_DIR=\"/var/log/eform\"\nBACKUP_DIR=\"/opt/eform/backups\"\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\n# Logging functions\nlog_info() {\n    echo -e \"${BLUE}[INFO]${NC} $1\"\n}\n\nlog_success() {\n    echo -e \"${GREEN}[SUCCESS]${NC} $1\"\n",
        "lineCount": 337,
        "isEmpty": false
      }
    },
    "scripts\\upgrade-nodejs.ps1": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\upgrade-nodejs.ps1",
        "size": 4784,
        "modified": "2025-08-22T09:23:17.462Z",
        "extension": ".ps1",
        "basename": "upgrade-nodejs.ps1",
        "directory": "scripts",
        "content": "# Node.js 20 LTS Upgrade Script for Windows\r\n# This script upgrades Node.js from v18 to v20 LTS on Windows\r\n\r\nWrite-Host \"🚀 Starting Node.js 20 LTS upgrade...\" -ForegroundColor Green\r\n\r\n# Check current Node.js version\r\n$currentVersion = node --version\r\nWrite-Host \"📋 Current Node.js version: $currentVersion\" -ForegroundColor Cyan\r\n\r\n# Check if already on Node.js 20\r\nif ($currentVersion -match \"^v20\\.\") {\r\n    Write-Host \"✅ Already running Node.js 20 LTS\" -ForegroundColor Green\r\n    exit 0\r\n}\r\n\r",
        "lineCount": 123,
        "isEmpty": false
      }
    },
    "scripts\\upgrade-nodejs.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\upgrade-nodejs.sh",
        "size": 3061,
        "modified": "2025-08-22T09:22:57.143Z",
        "extension": ".sh",
        "basename": "upgrade-nodejs.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n# Node.js 20 LTS Upgrade Script\n# This script upgrades Node.js from v18 to v20 LTS\n\nset -e\n\necho \"🚀 Starting Node.js 20 LTS upgrade...\"\n\n# Check current Node.js version\nCURRENT_VERSION=$(node --version)\necho \"📋 Current Node.js version: $CURRENT_VERSION\"\n\n# Check if already on Node.js 20\nif [[ $CURRENT_VERSION == v20* ]]; then\n    echo \"✅ Already running Node.js 20 LTS\"\n    exit 0\nfi\n\n# Backup current Node.js version info\necho \"💾 Backing up current environment info...\"\nnode --versi",
        "lineCount": 107,
        "isEmpty": false
      }
    },
    "scripts\\validate-deployment.sh": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\validate-deployment.sh",
        "size": 13150,
        "modified": "2025-08-27T17:48:14.210Z",
        "extension": ".sh",
        "basename": "validate-deployment.sh",
        "directory": "scripts",
        "content": "#!/bin/bash\n\n# Deployment Validation Script\n# Validates that the kiosk UI deployment is working correctly\n\nset -e\n\n# Configuration\nVALIDATION_LOG=\"/home/pi/logs/deployment-validation.log\"\nKIOSK_URL=\"http://localhost:3002\"\nTIMEOUT=30\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\n# Logging function\nlog() {\n    echo \"[$(date '+%Y-%m-%d %H:%M:%S')] $1\" | tee -a \"$VALIDATION_LOG\"\n}\n\n# Status functions\ntest_pass() {\n    echo -e ",
        "lineCount": 429,
        "isEmpty": false
      }
    },
    "scripts\\validate-hardware-integration.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\validate-hardware-integration.js",
        "size": 20641,
        "modified": "2025-08-22T09:29:11.921Z",
        "extension": ".js",
        "basename": "validate-hardware-integration.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Hardware Integration Validation Script\r\n * Validates serialport dependency installation and hardware integration\r\n * Task 16.4 - Validate hardware integration and dependencies\r\n */\r\n\r\nimport { execSync, spawn } from 'child_process';\r\nimport { existsSync, readFileSync } from 'fs';\r\nimport { join, dirname } from 'path';\r\nimport { fileURLToPath } from 'url';\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = dirname(__filename);\r\nconst rootDir = ",
        "lineCount": 534,
        "isEmpty": false
      }
    },
    "scripts\\validate-integration.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\validate-integration.js",
        "size": 4656,
        "modified": "2025-08-21T20:07:40.240Z",
        "extension": ".js",
        "basename": "validate-integration.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Integration Test Validation Script\r\n * Validates that all integration tests can be loaded and basic functionality works\r\n */\r\n\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nconst testFiles = [\r\n  'app/gateway/src/__tests__/integration/full-system-integration.test.ts',\r\n  'app/gateway/src/__tests__/integration/multi-room-coordination.test.ts',\r\n  'app/panel/src/__tests__/integration/vip-workflow-integration.test.ts'\r\n];\r\n\r\nfunction validateTestFile(filePath) {\r",
        "lineCount": 158,
        "isEmpty": false
      }
    },
    "scripts\\validate-maksisoft-mvp.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\validate-maksisoft-mvp.js",
        "size": 8528,
        "modified": "2025-08-28T07:50:40.899Z",
        "extension": ".js",
        "basename": "validate-maksisoft-mvp.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Maksisoft Integration MVP Validation Script\r\n * Validates all acceptance criteria from the requirements\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst crypto = require('crypto');\r\n\r\nconsole.log('🔍 Maksisoft Integration MVP Validation');\r\nconsole.log('=' .repeat(50));\r\n\r\nconst results = {\r\n  environmentConfig: false,\r\n  serviceImplementation: false,\r\n  routeImplementation: false,\r\n  uiIntegration: false,\r\n  securityFeatures: false,\r\n  error",
        "lineCount": 279,
        "isEmpty": false
      }
    },
    "scripts\\validate-nodejs20-compatibility.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\validate-nodejs20-compatibility.js",
        "size": 5552,
        "modified": "2025-08-22T09:24:29.964Z",
        "extension": ".js",
        "basename": "validate-nodejs20-compatibility.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n/**\r\n * Node.js 20 Compatibility Validation Script\r\n * This script validates that the system is compatible with Node.js 20\r\n */\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport { execSync } from 'child_process';\r\n\r\nasync function validateNodeJSCompatibility() {\r\nconsole.log('🧪 Node.js 20 Compatibility Validation');\r\nconsole.log('=====================================\\n');\r\n\r\n// Check Node.js version\r\nconst nodeVersion = process.version;\r\nconsole.log(`📋 Current Node.j",
        "lineCount": 154,
        "isEmpty": false
      }
    },
    "scripts\\validate-system-requirements.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\validate-system-requirements.js",
        "size": 13315,
        "modified": "2025-08-21T20:43:15.709Z",
        "extension": ".js",
        "basename": "validate-system-requirements.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * System Requirements Validation Script\r\n * Validates that the system meets all requirements without running full test suite\r\n */\r\n\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nconst COLORS = {\r\n  SUCCESS: '\\x1b[32m',\r\n  ERROR: '\\x1b[31m',\r\n  WARNING: '\\x1b[33m',\r\n  INFO: '\\x1b[36m',\r\n  HEADER: '\\x1b[35m',\r\n  RESET: '\\x1b[0m'\r\n};\r\n\r\nfunction log(message, color = 'RESET') {\r\n  console.log(`${COLORS[color]}${message}${COLORS.RESET}`);\r\n}\r\n\r\nfunction logHeader(tit",
        "lineCount": 441,
        "isEmpty": false
      }
    },
    "scripts\\validate-waveshare-hardware.js": {
      "primary": "build",
      "confidence": "high",
      "reasons": [
        "Located in scripts directory"
      ],
      "metadata": {
        "path": "scripts\\validate-waveshare-hardware.js",
        "size": 16462,
        "modified": "2025-08-25T23:34:44.327Z",
        "extension": ".js",
        "basename": "validate-waveshare-hardware.js",
        "directory": "scripts",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Waveshare Hardware Validation Script\r\n * Specifically tests Waveshare 16CH Modbus RTU Relay compatibility\r\n */\r\n\r\nimport { SerialPort } from 'serialport';\r\nimport { ModbusController } from '../app/kiosk/src/hardware/modbus-controller.ts';\r\n\r\nclass WaveshareValidator {\r\n  constructor() {\r\n    this.results = {\r\n      port_detection: false,\r\n      communication: false,\r\n      address_scan: [],\r\n      function_codes: {\r\n        read_coils: false,\r\n        write_single_",
        "lineCount": 479,
        "isEmpty": false
      }
    },
    "shared\\controllers\\health-controller.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\controllers directory"
      ],
      "metadata": {
        "path": "shared\\controllers\\health-controller.ts",
        "size": 6683,
        "modified": "2025-08-23T14:28:23.244Z",
        "extension": ".ts",
        "basename": "health-controller.ts",
        "directory": "shared\\controllers",
        "content": "import { FastifyRequest, FastifyReply } from 'fastify';\r\nimport { HealthMonitor } from '../services/health-monitor';\r\nimport { HealthCheckResponse } from '../types/core-entities';\r\n\r\n/**\r\n * Health Check Controller\r\n * Provides standardized health endpoints for all services\r\n * Requirements: 10.3, 10.5\r\n */\r\nexport class HealthController {\r\n  private healthMonitor: HealthMonitor;\r\n\r\n  constructor(healthMonitor: HealthMonitor) {\r\n    this.healthMonitor = healthMonitor;\r\n  }\r\n\r\n  /**\r\n   * Basic h",
        "lineCount": 243,
        "isEmpty": false
      }
    },
    "shared\\controllers\\__tests__\\health-controller.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\controllers\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\controllers\\__tests__\\health-controller.test.ts",
        "size": 12515,
        "modified": "2025-08-23T17:08:18.805Z",
        "extension": ".ts",
        "basename": "health-controller.test.ts",
        "directory": "shared\\controllers\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi } from 'vitest';\r\nimport { HealthController } from '../health-controller';\r\nimport { HealthMonitor } from '../../services/health-monitor';\r\nimport { FastifyRequest, FastifyReply } from 'fastify';\r\n\r\n// Mock HealthMonitor\r\nconst mockHealthMonitor = {\r\n  getSystemHealth: vi.fn(),\r\n  runDiagnostics: vi.fn(),\r\n  getKioskHealth: vi.fn(),\r\n  generateDiagnosticReport: vi.fn(),\r\n  rotateLogFiles: vi.fn()\r\n} as unknown as HealthMonitor;\r\n\r\n// Mock Fastify req",
        "lineCount": 334,
        "isEmpty": false
      }
    },
    "shared\\data\\test\\test-1755810829494.db": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\data\\test directory"
      ],
      "metadata": {
        "path": "shared\\data\\test\\test-1755810829494.db",
        "size": 0,
        "modified": "2025-08-21T21:13:49.496Z",
        "extension": ".db",
        "basename": "test-1755810829494.db",
        "directory": "shared\\data\\test",
        "content": "",
        "lineCount": 1,
        "isEmpty": true
      }
    },
    "shared\\data\\test\\test-1755810839501.db": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\data\\test directory"
      ],
      "metadata": {
        "path": "shared\\data\\test\\test-1755810839501.db",
        "size": 0,
        "modified": "2025-08-21T21:13:59.501Z",
        "extension": ".db",
        "basename": "test-1755810839501.db",
        "directory": "shared\\data\\test",
        "content": "",
        "lineCount": 1,
        "isEmpty": true
      }
    },
    "shared\\data\\test\\test-1755810849515.db": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\data\\test directory"
      ],
      "metadata": {
        "path": "shared\\data\\test\\test-1755810849515.db",
        "size": 0,
        "modified": "2025-08-21T21:14:09.516Z",
        "extension": ".db",
        "basename": "test-1755810849515.db",
        "directory": "shared\\data\\test",
        "content": "",
        "lineCount": 1,
        "isEmpty": true
      }
    },
    "shared\\data\\test\\test-1755810859530.db": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\data\\test directory"
      ],
      "metadata": {
        "path": "shared\\data\\test\\test-1755810859530.db",
        "size": 0,
        "modified": "2025-08-21T21:14:19.531Z",
        "extension": ".db",
        "basename": "test-1755810859530.db",
        "directory": "shared\\data\\test",
        "content": "",
        "lineCount": 1,
        "isEmpty": true
      }
    },
    "shared\\data\\test\\test-1755810869535.db": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\data\\test directory"
      ],
      "metadata": {
        "path": "shared\\data\\test\\test-1755810869535.db",
        "size": 0,
        "modified": "2025-08-21T21:14:29.536Z",
        "extension": ".db",
        "basename": "test-1755810869535.db",
        "directory": "shared\\data\\test",
        "content": "",
        "lineCount": 1,
        "isEmpty": true
      }
    },
    "shared\\data\\test\\test-1755849355388.db": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\data\\test directory"
      ],
      "metadata": {
        "path": "shared\\data\\test\\test-1755849355388.db",
        "size": 0,
        "modified": "2025-08-22T07:55:55.392Z",
        "extension": ".db",
        "basename": "test-1755849355388.db",
        "directory": "shared\\data\\test",
        "content": "",
        "lineCount": 1,
        "isEmpty": true
      }
    },
    "shared\\data\\test\\test-1755849360406.db": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\data\\test directory"
      ],
      "metadata": {
        "path": "shared\\data\\test\\test-1755849360406.db",
        "size": 0,
        "modified": "2025-08-22T07:56:00.407Z",
        "extension": ".db",
        "basename": "test-1755849360406.db",
        "directory": "shared\\data\\test",
        "content": "",
        "lineCount": 1,
        "isEmpty": true
      }
    },
    "shared\\data\\test\\test-1755849365408.db": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\data\\test directory"
      ],
      "metadata": {
        "path": "shared\\data\\test\\test-1755849365408.db",
        "size": 0,
        "modified": "2025-08-22T07:56:05.409Z",
        "extension": ".db",
        "basename": "test-1755849365408.db",
        "directory": "shared\\data\\test",
        "content": "",
        "lineCount": 1,
        "isEmpty": true
      }
    },
    "shared\\data\\test\\test-1755849370413.db": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\data\\test directory"
      ],
      "metadata": {
        "path": "shared\\data\\test\\test-1755849370413.db",
        "size": 0,
        "modified": "2025-08-22T07:56:10.414Z",
        "extension": ".db",
        "basename": "test-1755849370413.db",
        "directory": "shared\\data\\test",
        "content": "",
        "lineCount": 1,
        "isEmpty": true
      }
    },
    "shared\\data\\test\\test-1755849375428.db": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\data\\test directory"
      ],
      "metadata": {
        "path": "shared\\data\\test\\test-1755849375428.db",
        "size": 0,
        "modified": "2025-08-22T07:56:15.429Z",
        "extension": ".db",
        "basename": "test-1755849375428.db",
        "directory": "shared\\data\\test",
        "content": "",
        "lineCount": 1,
        "isEmpty": true
      }
    },
    "shared\\database\\base-repository.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database directory"
      ],
      "metadata": {
        "path": "shared\\database\\base-repository.ts",
        "size": 4081,
        "modified": "2025-08-23T14:28:23.259Z",
        "extension": ".ts",
        "basename": "base-repository.ts",
        "directory": "shared\\database",
        "content": "import { DatabaseConnection } from './connection';\r\n\r\nexport interface OptimisticLockError extends Error {\r\n  name: 'OptimisticLockError';\r\n  entity: string;\r\n  id: string | number;\r\n  currentVersion: number;\r\n  expectedVersion: number;\r\n}\r\n\r\nexport class OptimisticLockError extends Error implements OptimisticLockError {\r\n  name = 'OptimisticLockError' as const;\r\n  \r\n  constructor(\r\n    public entity: string,\r\n    public id: string | number,\r\n    public currentVersion: number,\r\n    public expect",
        "lineCount": 148,
        "isEmpty": false
      }
    },
    "shared\\database\\command-queue-repository.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database directory"
      ],
      "metadata": {
        "path": "shared\\database\\command-queue-repository.ts",
        "size": 11127,
        "modified": "2025-08-23T14:28:23.270Z",
        "extension": ".ts",
        "basename": "command-queue-repository.ts",
        "directory": "shared\\database",
        "content": "import { BaseRepository } from './base-repository';\r\nimport { DatabaseConnection } from './connection';\r\nimport { Command, CommandStatus, CommandType } from '../types/core-entities';\r\n\r\nexport interface CommandFilter {\r\n  kiosk_id?: string;\r\n  command_type?: CommandType | CommandType[];\r\n  status?: CommandStatus | CommandStatus[];\r\n  created_after?: Date;\r\n  created_before?: Date;\r\n  next_attempt_before?: Date;\r\n  limit?: number;\r\n}\r\n\r\nexport class CommandQueueRepository extends BaseRepository<C",
        "lineCount": 376,
        "isEmpty": false
      }
    },
    "shared\\database\\connection.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database directory"
      ],
      "metadata": {
        "path": "shared\\database\\connection.ts",
        "size": 7688,
        "modified": "2025-08-25T23:18:48.118Z",
        "extension": ".ts",
        "basename": "connection.ts",
        "directory": "shared\\database",
        "content": "import sqlite3 from 'sqlite3';\r\nimport { join, dirname } from 'path';\r\nimport * as fs from 'fs-extra';\r\n\r\nexport class DatabaseConnection {\r\n  private db: sqlite3.Database | null = null;\r\n  private static instances = new Map<string, DatabaseConnection>();\r\n  private isInitialized: boolean = false;\r\n  private dbPath: string;\r\n\r\n  private constructor(dbPath: string = process.env.EFORM_DB_PATH || './data/eform.db') {\r\n    this.dbPath = this.resolveDatabasePath(dbPath);\r\n  }\r\n\r\n  private resolveData",
        "lineCount": 262,
        "isEmpty": false
      }
    },
    "shared\\database\\database-manager.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database directory"
      ],
      "metadata": {
        "path": "shared\\database\\database-manager.ts",
        "size": 5727,
        "modified": "2025-08-23T14:28:23.289Z",
        "extension": ".ts",
        "basename": "database-manager.ts",
        "directory": "shared\\database",
        "content": "import { DatabaseConnection } from './connection';\r\nimport { MigrationRunner } from './migration-runner';\r\n\r\nexport interface DatabaseConfig {\r\n  path?: string;\r\n  enableWAL?: boolean;\r\n  busyTimeout?: number;\r\n  cacheSize?: number;\r\n  migrationsPath?: string;\r\n}\r\n\r\nexport class DatabaseManager {\r\n  private static instances = new Map<string, DatabaseManager>();\r\n  private connection: DatabaseConnection;\r\n  private config: DatabaseConfig;\r\n\r\n  private constructor(config: DatabaseConfig = {}) {\r\n ",
        "lineCount": 193,
        "isEmpty": false
      }
    },
    "shared\\database\\event-repository.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database directory"
      ],
      "metadata": {
        "path": "shared\\database\\event-repository.ts",
        "size": 10526,
        "modified": "2025-08-23T14:28:23.301Z",
        "extension": ".ts",
        "basename": "event-repository.ts",
        "directory": "shared\\database",
        "content": "import { BaseRepository } from './base-repository';\r\nimport { DatabaseConnection } from './connection';\r\nimport { Event, EventType } from '../types/core-entities';\r\n\r\nexport interface EventFilter {\r\n  kiosk_id?: string;\r\n  locker_id?: number;\r\n  event_type?: EventType | EventType[];\r\n  rfid_card?: string;\r\n  device_id?: string;\r\n  staff_user?: string;\r\n  from_date?: Date;\r\n  to_date?: Date;\r\n  limit?: number;\r\n  offset?: number;\r\n}\r\n\r\nexport class EventRepository extends BaseRepository<Event> {\r",
        "lineCount": 385,
        "isEmpty": false
      }
    },
    "shared\\database\\index.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database directory"
      ],
      "metadata": {
        "path": "shared\\database\\index.ts",
        "size": 774,
        "modified": "2025-08-25T12:46:15.492Z",
        "extension": ".ts",
        "basename": "index.ts",
        "directory": "shared\\database",
        "content": "export { DatabaseConnection } from './connection';\r\nexport { DatabaseManager, type DatabaseConfig } from './database-manager';\r\nexport { MigrationRunner, type Migration } from './migration-runner';\r\n\r\n// Repositories\r\nexport { BaseRepository, OptimisticLockError } from './base-repository';\r\nexport { LockerRepository, type LockerFilter } from './locker-repository';\r\nexport { VipContractRepository, type VipContractFilter } from './vip-contract-repository';\r\nexport { EventRepository, type EventFilt",
        "lineCount": 13,
        "isEmpty": false
      }
    },
    "shared\\database\\kiosk-heartbeat-repository.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database directory"
      ],
      "metadata": {
        "path": "shared\\database\\kiosk-heartbeat-repository.ts",
        "size": 11484,
        "modified": "2025-08-25T14:14:00.985Z",
        "extension": ".ts",
        "basename": "kiosk-heartbeat-repository.ts",
        "directory": "shared\\database",
        "content": "import { DatabaseConnection } from './connection';\r\nimport { KioskHeartbeat, KioskStatus } from '../types/core-entities';\r\n\r\nexport interface KioskFilter {\r\n  zone?: string;\r\n  status?: KioskStatus | KioskStatus[];\r\n  hardware_id?: string;\r\n  offline_since?: Date;\r\n  version?: string;\r\n}\r\n\r\nexport class KioskHeartbeatRepository {\r\n  protected db: DatabaseConnection;\r\n  protected tableName: string = 'kiosk_heartbeat';\r\n\r\n  constructor(db: DatabaseConnection) {\r\n    this.db = db;\r\n  }\r\n\r\n  async f",
        "lineCount": 393,
        "isEmpty": false
      }
    },
    "shared\\database\\locker-repository.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database directory"
      ],
      "metadata": {
        "path": "shared\\database\\locker-repository.ts",
        "size": 9511,
        "modified": "2025-08-27T20:18:08.968Z",
        "extension": ".ts",
        "basename": "locker-repository.ts",
        "directory": "shared\\database",
        "content": "import { BaseRepository } from './base-repository';\nimport { DatabaseConnection } from './connection';\nimport { Locker, LockerStatus, OwnerType } from '../types/core-entities';\n\nexport interface LockerFilter {\n  kiosk_id?: string;\n  status?: LockerStatus | LockerStatus[];\n  owner_type?: OwnerType;\n  owner_key?: string;\n  is_vip?: boolean;\n}\n\nexport class LockerRepository extends BaseRepository<Locker> {\n  constructor(db: DatabaseConnection) {\n    super(db, 'lockers');\n  }\n\n  async findById(id: s",
        "lineCount": 321,
        "isEmpty": false
      }
    },
    "shared\\database\\migration-runner.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database directory"
      ],
      "metadata": {
        "path": "shared\\database\\migration-runner.ts",
        "size": 5739,
        "modified": "2025-08-26T00:27:48.911Z",
        "extension": ".ts",
        "basename": "migration-runner.ts",
        "directory": "shared\\database",
        "content": "import { readFileSync, readdirSync } from 'fs';\r\nimport { join } from 'path';\r\nimport { DatabaseConnection } from './connection';\r\n\r\nexport interface Migration {\r\n  id: number;\r\n  filename: string;\r\n  applied_at: Date;\r\n  checksum: string;\r\n}\r\n\r\nexport class MigrationRunner {\r\n  private db: DatabaseConnection;\r\n  private migrationsPath: string;\r\n\r\n  constructor(migrationsPath: string = './migrations') {\r\n    this.db = DatabaseConnection.getInstance();\r\n    this.migrationsPath = migrationsPath;\r\n",
        "lineCount": 192,
        "isEmpty": false
      }
    },
    "shared\\database\\repository-factory.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database directory"
      ],
      "metadata": {
        "path": "shared\\database\\repository-factory.ts",
        "size": 2914,
        "modified": "2025-08-23T14:28:23.334Z",
        "extension": ".ts",
        "basename": "repository-factory.ts",
        "directory": "shared\\database",
        "content": "import { DatabaseConnection } from './connection';\r\nimport { LockerRepository } from './locker-repository';\r\nimport { VipContractRepository } from './vip-contract-repository';\r\nimport { EventRepository } from './event-repository';\r\nimport { CommandQueueRepository } from './command-queue-repository';\r\nimport { KioskHeartbeatRepository } from './kiosk-heartbeat-repository';\r\n\r\nexport class RepositoryFactory {\r\n  private static instance: RepositoryFactory;\r\n  private db: DatabaseConnection;\r\n  \r\n  ",
        "lineCount": 93,
        "isEmpty": false
      }
    },
    "shared\\database\\schema.sql": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database directory"
      ],
      "metadata": {
        "path": "shared\\database\\schema.sql",
        "size": 3458,
        "modified": "2025-08-20T08:36:36.275Z",
        "extension": ".sql",
        "basename": "schema.sql",
        "directory": "shared\\database",
        "content": "-- Kiosk Heartbeat Table\r\nCREATE TABLE IF NOT EXISTS kiosk_heartbeat (\r\n  kiosk_id TEXT PRIMARY KEY,\r\n  last_seen DATETIME NOT NULL,\r\n  zone TEXT NOT NULL,\r\n  status TEXT NOT NULL DEFAULT 'online',\r\n  version TEXT NOT NULL,\r\n  last_config_hash TEXT,\r\n  offline_threshold_seconds INTEGER DEFAULT 30,\r\n  hardware_id TEXT,\r\n  registration_secret TEXT,\r\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP\r\n);\r\n\r\n-- Provisioning Tokens Table\r\nCREATE TABLE IF",
        "lineCount": 98,
        "isEmpty": false
      }
    },
    "shared\\database\\vip-contract-repository.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database directory"
      ],
      "metadata": {
        "path": "shared\\database\\vip-contract-repository.ts",
        "size": 17746,
        "modified": "2025-08-23T17:01:47.212Z",
        "extension": ".ts",
        "basename": "vip-contract-repository.ts",
        "directory": "shared\\database",
        "content": "import { BaseRepository } from './base-repository';\r\nimport { DatabaseConnection } from './connection';\r\nimport { VipContract, VipContractStatus } from '../types/core-entities';\r\nimport { VipHistoryRepository } from './vip-history-repository';\r\n\r\nexport interface VipContractFilter {\r\n  kiosk_id?: string;\r\n  locker_id?: number;\r\n  rfid_card?: string;\r\n  status?: VipContractStatus | VipContractStatus[];\r\n  created_by?: string;\r\n  expires_before?: Date;\r\n  expires_after?: Date;\r\n}\r\n\r\nexport class V",
        "lineCount": 581,
        "isEmpty": false
      }
    },
    "shared\\database\\vip-history-repository.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database directory"
      ],
      "metadata": {
        "path": "shared\\database\\vip-history-repository.ts",
        "size": 8119,
        "modified": "2025-08-23T14:28:23.357Z",
        "extension": ".ts",
        "basename": "vip-history-repository.ts",
        "directory": "shared\\database",
        "content": "import { BaseRepository } from './base-repository';\r\nimport { DatabaseConnection } from './connection';\r\nimport { VipContractHistory } from '../types/core-entities';\r\n\r\nexport interface VipHistoryFilter {\r\n  contract_id?: number;\r\n  action_type?: string | string[];\r\n  performed_by?: string;\r\n  from_date?: Date;\r\n  to_date?: Date;\r\n  limit?: number;\r\n  offset?: number;\r\n}\r\n\r\nexport class VipHistoryRepository extends BaseRepository<VipContractHistory> {\r\n  private dbManager: any;\r\n\r\n  constructor(",
        "lineCount": 264,
        "isEmpty": false
      }
    },
    "shared\\database\\vip-transfer-repository.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database directory"
      ],
      "metadata": {
        "path": "shared\\database\\vip-transfer-repository.ts",
        "size": 9211,
        "modified": "2025-08-23T14:28:23.365Z",
        "extension": ".ts",
        "basename": "vip-transfer-repository.ts",
        "directory": "shared\\database",
        "content": "import { BaseRepository } from './base-repository';\r\nimport { DatabaseConnection } from './connection';\r\nimport { VipTransferRequest, VipTransferStatus } from '../types/core-entities';\r\n\r\nexport interface VipTransferFilter {\r\n  contract_id?: number;\r\n  status?: VipTransferStatus | VipTransferStatus[];\r\n  requested_by?: string;\r\n  approved_by?: string;\r\n  from_kiosk_id?: string;\r\n  to_kiosk_id?: string;\r\n  from_date?: Date;\r\n  to_date?: Date;\r\n}\r\n\r\nexport class VipTransferRepository extends BaseR",
        "lineCount": 291,
        "isEmpty": false
      }
    },
    "shared\\database\\vitest.config.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database directory"
      ],
      "metadata": {
        "path": "shared\\database\\vitest.config.ts",
        "size": 490,
        "modified": "2025-08-23T15:30:55.992Z",
        "extension": ".ts",
        "basename": "vitest.config.ts",
        "directory": "shared\\database",
        "content": "import { defineConfig } from 'vitest/config';\r\n\r\nexport default defineConfig({\r\n  test: {\r\n    globals: true,\r\n    environment: 'node',\r\n    include: ['**/__tests__/**/*.test.ts'],\r\n    exclude: ['**/node_modules/**', '**/dist/**'],\r\n    testTimeout: 15000,\r\n    hookTimeout: 15000,\r\n    setupFiles: ['../../test-setup.ts'],\r\n    sequence: {\r\n      hooks: 'stack'\r\n    }\r\n  },\r\n  // resolve: {\r\n  //   alias: {\r\n  //     '@': new URL('./', import.meta.url).pathname\r\n  //   }\r\n  // }\r\n});\r\n",
        "lineCount": 22,
        "isEmpty": false
      }
    },
    "shared\\database\\__tests__\\command-queue-repository.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\database\\__tests__\\command-queue-repository.test.ts",
        "size": 19817,
        "modified": "2025-08-23T17:08:18.814Z",
        "extension": ".ts",
        "basename": "command-queue-repository.test.ts",
        "directory": "shared\\database\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { CommandQueueRepository } from '../command-queue-repository';\r\nimport { DatabaseConnection } from '../connection';\r\nimport { Command, CommandType, CommandStatus } from '../../types/core-entities';\r\n\r\n// Mock the database connection\r\nvi.mock('../connection.js');\r\n\r\ndescribe('CommandQueueRepository', () => {\r\n  let repository: CommandQueueRepository;\r\n  let mockDb: any;\r\n\r\n  beforeEach(() => {\r\n    mockDb = {\r\n     ",
        "lineCount": 626,
        "isEmpty": false
      }
    },
    "shared\\database\\__tests__\\database-manager.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\database\\__tests__\\database-manager.test.ts",
        "size": 3487,
        "modified": "2025-08-23T14:28:23.389Z",
        "extension": ".ts",
        "basename": "database-manager.test.ts",
        "directory": "shared\\database\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach } from 'vitest';\r\nimport { DatabaseManager } from '../database-manager';\r\nimport { DatabaseConnection } from '../connection';\r\nimport * as path from 'path';\r\n\r\ndescribe('DatabaseManager', () => {\r\n  let manager: DatabaseManager;\r\n  let testDbPath: string;\r\n\r\n  beforeEach(async () => {\r\n    // Use in-memory database for faster tests\r\n    testDbPath = ':memory:';\r\n    \r\n    // Reset all instances\r\n    await DatabaseManager.resetAllInstances();\r\n",
        "lineCount": 110,
        "isEmpty": false
      }
    },
    "shared\\database\\__tests__\\locker-repository.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\database\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\database\\__tests__\\locker-repository.test.ts",
        "size": 7461,
        "modified": "2025-08-27T20:18:08.967Z",
        "extension": ".ts",
        "basename": "locker-repository.test.ts",
        "directory": "shared\\database\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach } from 'vitest';\nimport { DatabaseConnection } from '../connection';\nimport { LockerRepository } from '../locker-repository';\nimport { OptimisticLockError } from '../base-repository';\nimport { Locker, LockerStatus } from '../../types/core-entities';\n\ndescribe('LockerRepository', () => {\n  let db: DatabaseConnection;\n  let repository: LockerRepository;\n\n  beforeEach(async () => {\n    // Use in-memory database for testing\n    DatabaseConnection.",
        "lineCount": 258,
        "isEmpty": false
      }
    },
    "shared\\package.json": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared directory"
      ],
      "metadata": {
        "path": "shared\\package.json",
        "size": 567,
        "modified": "2025-08-27T03:38:22.281Z",
        "extension": ".json",
        "basename": "package.json",
        "directory": "shared",
        "content": "{\n  \"name\": \"@eform/shared\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Eform Locker System - Shared Components\",\n  \"main\": \"dist/index.js\",\n  \"type\": \"commonjs\",\n  \"scripts\": {\n    \"build\": \"tsc\",\n    \"test\": \"vitest --run\",\n    \"test:watch\": \"vitest\"\n  },\n  \"dependencies\": {\n    \"fs-extra\": \"^11.1.1\",\n    \"sqlite3\": \"^5.1.6\",\n    \"ws\": \"^8.18.3\"\n  },\n  \"devDependencies\": {\n    \"@types/fs-extra\": \"^11.0.4\",\n    \"@types/node\": \"^20.8.0\",\n    \"@types/ws\": \"^8.18.1\",\n    \"typescript\": \"^5.2.2\",\n    \"",
        "lineCount": 28,
        "isEmpty": false
      }
    },
    "shared\\services\\command-queue-manager.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\command-queue-manager.ts",
        "size": 10547,
        "modified": "2025-08-25T23:43:54.543Z",
        "extension": ".ts",
        "basename": "command-queue-manager.ts",
        "directory": "shared\\services",
        "content": "import { v4 as uuidv4 } from 'uuid';\r\nimport { DatabaseConnection } from '../database/connection';\r\nimport { Command, CommandType, CommandStatus, CommandPayload } from '../types/core-entities';\r\n\r\n/**\r\n * CommandQueueManager handles the complete command lifecycle:\r\n * \r\n * COMMAND LIFECYCLE:\r\n * 1. pending → Command created and waiting to be processed by kiosk\r\n * 2. executing → Kiosk has picked up the command and is processing it\r\n * 3. completed → Command successfully executed by kiosk\r\n * 4. ",
        "lineCount": 340,
        "isEmpty": false
      }
    },
    "shared\\services\\config-manager.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\config-manager.ts",
        "size": 14834,
        "modified": "2025-08-23T14:28:23.636Z",
        "extension": ".ts",
        "basename": "config-manager.ts",
        "directory": "shared\\services",
        "content": "/**\r\n * Configuration Manager for the Eform Locker System\r\n * Handles loading, validation, and management of system configuration\r\n */\r\n\r\nimport { readFile, writeFile, access } from 'fs/promises';\r\nimport { join } from 'path';\r\nimport { \r\n  SystemConfig, \r\n  CompleteSystemConfig, \r\n  ConfigValidationResult,\r\n  ConfigChangeEvent\r\n} from '../types/system-config';\r\nimport { EventType } from '../types/core-entities';\r\nimport { EventRepository } from '../database/event-repository';\r\nimport { Database",
        "lineCount": 472,
        "isEmpty": false
      }
    },
    "shared\\services\\cookie-cleanup-service.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\cookie-cleanup-service.ts",
        "size": 3105,
        "modified": "2025-08-23T23:53:03.529Z",
        "extension": ".ts",
        "basename": "cookie-cleanup-service.ts",
        "directory": "shared\\services",
        "content": "import { FastifyInstance } from 'fastify';\r\n\r\nexport class CookieCleanupService {\r\n  private static instance: CookieCleanupService;\r\n  \r\n  static getInstance(): CookieCleanupService {\r\n    if (!this.instance) {\r\n      this.instance = new CookieCleanupService();\r\n    }\r\n    return this.instance;\r\n  }\r\n  \r\n  /**\r\n   * Start automatic cookie cleanup\r\n   */\r\n  startCleanup(fastify: FastifyInstance): void {\r\n    // Add cleanup route that's called periodically\r\n    fastify.get('/internal/cleanup-cooki",
        "lineCount": 93,
        "isEmpty": false
      }
    },
    "shared\\services\\cookie-manager.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\cookie-manager.ts",
        "size": 2332,
        "modified": "2025-08-25T12:52:15.374Z",
        "extension": ".ts",
        "basename": "cookie-manager.ts",
        "directory": "shared\\services",
        "content": "import { FastifyReply } from 'fastify';\r\n\r\nexport interface CookieOptions {\r\n  httpOnly?: boolean;\r\n  secure?: boolean;\r\n  sameSite?: 'strict' | 'lax' | 'none';\r\n  maxAge?: number;\r\n  path?: string;\r\n  domain?: string;\r\n}\r\n\r\nexport class CookieManager {\r\n  private static readonly COOKIE_NAME = 'session';\r\n  private static readonly DEFAULT_PATH = '/';\r\n  \r\n  /**\r\n   * Set session cookie with simple clearing of old cookies\r\n   */\r\n  static setSessionCookie(reply: any, sessionId: string, options: C",
        "lineCount": 78,
        "isEmpty": false
      }
    },
    "shared\\services\\event-logger.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\event-logger.ts",
        "size": 17570,
        "modified": "2025-08-23T14:28:23.648Z",
        "extension": ".ts",
        "basename": "event-logger.ts",
        "directory": "shared\\services",
        "content": "import { EventRepository } from '../database/event-repository';\r\nimport { Event, EventType, EventDetails, ValidationResult, ValidationError } from '../types/core-entities';\r\n\r\n/**\r\n * Comprehensive Event Logging System\r\n * Implements standardized event types with schema validation\r\n * Requirements: 8.4, 9.3\r\n */\r\nexport class EventLogger {\r\n  private eventRepository: EventRepository;\r\n  private validationSchemas: Map<EventType, EventSchema>;\r\n\r\n  constructor(eventRepository: EventRepository) {\r\n",
        "lineCount": 659,
        "isEmpty": false
      }
    },
    "shared\\services\\hardware-soak-tester.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\hardware-soak-tester.ts",
        "size": 28318,
        "modified": "2025-08-23T17:08:18.839Z",
        "extension": ".ts",
        "basename": "hardware-soak-tester.ts",
        "directory": "shared\\services",
        "content": "import { EventLogger } from './event-logger';\r\nimport { DatabaseConnection } from '../database/connection';\r\nimport { EventType } from '../types/core-entities';\r\n\r\n/**\r\n * Hardware Soak Testing Automation System\r\n * Implements automated 1000-cycle testing with failure detection\r\n * Requirements: Testing Strategy - Hardware Testing\r\n */\r\nexport class HardwareSoakTester {\r\n  private db: DatabaseConnection;\r\n  private eventLogger: EventLogger;\r\n  private modbusController?: any; // Optional for test",
        "lineCount": 916,
        "isEmpty": false
      }
    },
    "shared\\services\\health-monitor.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\health-monitor.ts",
        "size": 19739,
        "modified": "2025-08-23T14:28:23.681Z",
        "extension": ".ts",
        "basename": "health-monitor.ts",
        "directory": "shared\\services",
        "content": "import { DatabaseConnection } from '../database/connection';\r\nimport { KioskHealth, HealthCheckResponse, EventType } from '../types/core-entities';\r\nimport { EventLogger } from './event-logger';\r\nimport { CommandQueueManager } from './command-queue-manager';\r\nimport fs from 'fs/promises';\r\nimport path from 'path';\r\n\r\ninterface CountResult {\r\n  count: number;\r\n}\r\n\r\n/**\r\n * Health Monitoring and Diagnostics System\r\n * Provides comprehensive system health monitoring with detailed status reporting\r\n",
        "lineCount": 623,
        "isEmpty": false
      }
    },
    "shared\\services\\heartbeat-manager.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\heartbeat-manager.ts",
        "size": 13006,
        "modified": "2025-08-25T23:44:04.520Z",
        "extension": ".ts",
        "basename": "heartbeat-manager.ts",
        "directory": "shared\\services",
        "content": "import { KioskHeartbeatRepository } from '../database/kiosk-heartbeat-repository';\r\nimport { CommandQueueManager } from './command-queue-manager';\r\nimport { EventLogger } from './event-logger';\r\nimport { DatabaseConnection } from '../database/connection';\r\nimport { KioskHeartbeat, KioskStatus, EventType } from '../types/core-entities';\r\n\r\nexport interface HeartbeatConfig {\r\n  heartbeatIntervalMs: number; // Default: 10000 (10 seconds)\r\n  offlineThresholdMs: number;  // Default: 30000 (30 seconds",
        "lineCount": 435,
        "isEmpty": false
      }
    },
    "shared\\services\\i18n-service.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\i18n-service.ts",
        "size": 16628,
        "modified": "2025-08-25T12:46:15.496Z",
        "extension": ".ts",
        "basename": "i18n-service.ts",
        "directory": "shared\\services",
        "content": "/**\r\n * Internationalization service for the Eform Locker System\r\n * Supports Turkish and English languages with parameterized messages\r\n */\r\n\r\nexport interface MessageParams {\r\n  [key: string]: string | number;\r\n}\r\n\r\nexport interface Messages {\r\n  // Kiosk messages\r\n  kiosk: {\r\n    scan_card: string;\r\n    scan_card_subtitle: string;\r\n    master_access: string;\r\n    back: string;\r\n    loading: string;\r\n    select_locker: string;\r\n    select_locker_info: string;\r\n    enter_master_pin: string;\r\n  ",
        "lineCount": 541,
        "isEmpty": false
      }
    },
    "shared\\services\\locker-naming-service.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\locker-naming-service.ts",
        "size": 10335,
        "modified": "2025-08-27T03:38:22.289Z",
        "extension": ".ts",
        "basename": "locker-naming-service.ts",
        "directory": "shared\\services",
        "content": "import { DatabaseConnection } from '../database/connection';\nimport { LockerRepository } from '../database/locker-repository';\n\nexport interface ValidationResult {\n  isValid: boolean;\n  errors: string[];\n  suggestions?: string[];\n}\n\nexport interface LockerNameAudit {\n  id: number;\n  kiosk_id: string;\n  locker_id: number;\n  old_name: string | null;\n  new_name: string | null;\n  changed_by: string;\n  changed_at: Date;\n}\n\nexport interface PrintableMap {\n  kiosk_id: string;\n  generated_at: Date;\n  lo",
        "lineCount": 337,
        "isEmpty": false
      }
    },
    "shared\\services\\locker-state-manager.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\locker-state-manager.ts",
        "size": 32922,
        "modified": "2025-08-28T04:32:43.322Z",
        "extension": ".ts",
        "basename": "locker-state-manager.ts",
        "directory": "shared\\services",
        "content": "import { DatabaseConnection } from '../database/connection';\nimport { Locker, LockerStatus, OwnerType, EventType, LockerStateTransition, LockerStateUpdate } from '../types/core-entities';\nimport { webSocketService } from './websocket-service';\nimport { LockerNamingService } from './locker-naming-service';\n\nexport class LockerStateManager {\n  private db: DatabaseConnection;\n  private dbManager: any;\n  private cleanupInterval: NodeJS.Timeout | null = null;\n  private readonly RESERVE_TIMEOUT_SECOND",
        "lineCount": 1012,
        "isEmpty": false
      }
    },
    "shared\\services\\log-retention-manager.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\log-retention-manager.ts",
        "size": 17253,
        "modified": "2025-08-23T17:08:18.842Z",
        "extension": ".ts",
        "basename": "log-retention-manager.ts",
        "directory": "shared\\services",
        "content": "import { DatabaseConnection } from '../database/connection';\r\nimport { EventLogger } from './event-logger';\r\nimport { EventType } from '../types/core-entities';\r\nimport fs from 'fs/promises';\r\nimport path from 'path';\r\nimport crypto from 'crypto';\r\n\r\n/**\r\n * Log Retention and Anonymization Manager\r\n * Implements automatic log cleanup and privacy protection\r\n * Requirements: Log Retention Policy\r\n */\r\nexport class LogRetentionManager {\r\n  private db: DatabaseConnection;\r\n  private eventLogger: Ev",
        "lineCount": 622,
        "isEmpty": false
      }
    },
    "shared\\services\\performance-monitor.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\performance-monitor.ts",
        "size": 14548,
        "modified": "2025-08-27T03:38:22.292Z",
        "extension": ".ts",
        "basename": "performance-monitor.ts",
        "directory": "shared\\services",
        "content": "/**\n * Performance Monitor Service\n * \n * Implements comprehensive performance tracking and metrics collection\n * for the eForm Locker System as specified in requirements 8.1-8.4\n */\n\nimport { Database } from 'sqlite3';\nimport { promisify } from 'util';\n\nexport interface PerformanceMetrics {\n  timeToOpen: number[]; // Array of response times in ms\n  errorRate: number; // Percentage\n  sessionsPerHour: number;\n  mostSelectedLockers: { lockerId: number; displayName: string; count: number }[];\n  ave",
        "lineCount": 422,
        "isEmpty": false
      }
    },
    "shared\\services\\rate-limiter.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\rate-limiter.ts",
        "size": 15464,
        "modified": "2025-08-23T14:28:23.774Z",
        "extension": ".ts",
        "basename": "rate-limiter.ts",
        "directory": "shared\\services",
        "content": "import { RateLimitBucket, RateLimitViolation, EventType } from '../types/core-entities';\r\nimport { EventRepository } from '../database/event-repository';\r\n\r\nexport interface RateLimitConfig {\r\n  ip: { maxTokens: number; refillRate: number; blockThreshold: number; blockDuration: number };\r\n  card: { maxTokens: number; refillRate: number; blockThreshold: number; blockDuration: number };\r\n  locker: { maxTokens: number; refillRate: number; blockThreshold: number; blockDuration: number };\r\n  device: ",
        "lineCount": 498,
        "isEmpty": false
      }
    },
    "shared\\services\\security-validation.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\security-validation.ts",
        "size": 9872,
        "modified": "2025-08-23T14:28:23.789Z",
        "extension": ".ts",
        "basename": "security-validation.ts",
        "directory": "shared\\services",
        "content": "import { createHmac, timingSafeEqual } from 'crypto';\r\nimport { EventLogger } from './event-logger';\r\nimport { EventType } from '../types/core-entities';\r\n\r\nexport interface SecurityViolation {\r\n  type: string;\r\n  ip: string;\r\n  details: Record<string, any>;\r\n}\r\n\r\nexport interface AuthenticationFailure {\r\n  username: string;\r\n  ip: string;\r\n  reason: string;\r\n  attempts: number;\r\n}\r\n\r\nexport interface PinValidation {\r\n  isValid: boolean;\r\n  reason?: string;\r\n}\r\n\r\nexport class SecurityValidator {",
        "lineCount": 368,
        "isEmpty": false
      }
    },
    "shared\\services\\session-conflict-detector.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\session-conflict-detector.ts",
        "size": 3139,
        "modified": "2025-08-23T23:51:53.887Z",
        "extension": ".ts",
        "basename": "session-conflict-detector.ts",
        "directory": "shared\\services",
        "content": "import { FastifyRequest } from 'fastify';\r\n\r\nexport class SessionConflictDetector {\r\n  private static readonly MAX_SESSIONS_PER_USER = 3;\r\n  private static readonly CONFLICT_DETECTION_WINDOW = 5000; // 5 seconds\r\n  \r\n  private static recentSessions = new Map<string, { timestamp: number; sessionIds: Set<string> }>();\r\n  \r\n  /**\r\n   * Detect and resolve session conflicts for a user\r\n   */\r\n  static detectAndResolve(userId: number, newSessionId: string, sessionManager: any): boolean {\r\n    const us",
        "lineCount": 91,
        "isEmpty": false
      }
    },
    "shared\\services\\websocket-service.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services directory"
      ],
      "metadata": {
        "path": "shared\\services\\websocket-service.ts",
        "size": 5869,
        "modified": "2025-08-28T01:25:28.268Z",
        "extension": ".ts",
        "basename": "websocket-service.ts",
        "directory": "shared\\services",
        "content": "import { WebSocket, WebSocketServer } from 'ws';\nimport { WebSocketMessage, LockerStateUpdate, ConnectionStatus } from '../types/core-entities';\n\nexport class WebSocketService {\n  private wss: WebSocketServer | null = null;\n  private clients: Set<WebSocket> = new Set();\n  private heartbeatInterval: NodeJS.Timeout | null = null;\n  private connectionStatus: ConnectionStatus = {\n    status: 'offline',\n    lastUpdate: new Date(),\n    connectedClients: 0\n  };\n\n  /**\n   * Initialize WebSocket server\n ",
        "lineCount": 235,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\command-queue-manager.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\command-queue-manager.test.ts",
        "size": 14794,
        "modified": "2025-08-23T17:08:18.810Z",
        "extension": ".ts",
        "basename": "command-queue-manager.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { CommandQueueManager } from '../command-queue-manager';\r\nimport { DatabaseConnection } from '../../database/connection';\r\nimport { CommandType, CommandStatus } from '../../types/core-entities';\r\n\r\n// Mock the database connection\r\nvi.mock('../../database/connection.js');\r\n\r\ndescribe('CommandQueueManager', () => {\r\n  let commandQueue: CommandQueueManager;\r\n  let mockDb: any;\r\n\r\n  beforeEach(() => {\r\n    mockDb = {\r\n",
        "lineCount": 462,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\config-manager.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\config-manager.test.ts",
        "size": 20251,
        "modified": "2025-08-23T14:28:23.817Z",
        "extension": ".ts",
        "basename": "config-manager.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi, afterEach } from 'vitest';\r\nimport { ConfigManager } from '../config-manager';\r\nimport { readFile, writeFile, access } from 'fs/promises';\r\nimport { CompleteSystemConfig } from '../../types/system-config';\r\n\r\n// Mock fs/promises\r\nvi.mock('fs/promises', () => ({\r\n  readFile: vi.fn(),\r\n  writeFile: vi.fn(),\r\n  access: vi.fn()\r\n}));\r\n\r\n// Mock DatabaseManager\r\nvi.mock('../../database/database-manager.js', () => ({\r\n  DatabaseManager: {\r\n    getInstance",
        "lineCount": 468,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\event-logger.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\event-logger.test.ts",
        "size": 19109,
        "modified": "2025-08-23T17:08:18.819Z",
        "extension": ".ts",
        "basename": "event-logger.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi } from 'vitest';\r\nimport { EventLogger } from '../event-logger';\r\nimport { EventRepository } from '../../database/event-repository';\r\nimport { EventType } from '../../types/core-entities';\r\n\r\n// Mock EventRepository\r\nconst mockEventRepository = {\r\n  create: vi.fn(),\r\n  findAll: vi.fn(),\r\n  getStatistics: vi.fn(),\r\n  findStaffActions: vi.fn(),\r\n  cleanupOldEvents: vi.fn()\r\n} as unknown as EventRepository;\r\n\r\ndescribe('EventLogger', () => {\r\n  let even",
        "lineCount": 648,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\hardware-soak-tester.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\hardware-soak-tester.test.ts",
        "size": 17478,
        "modified": "2025-08-23T17:08:18.822Z",
        "extension": ".ts",
        "basename": "hardware-soak-tester.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi, afterEach } from 'vitest';\r\nimport { HardwareSoakTester, SoakTest } from '../hardware-soak-tester';\r\nimport { DatabaseConnection } from '../../database/connection';\r\nimport { EventLogger } from '../event-logger';\r\n\r\n// Mock dependencies\r\nconst mockDb = {\r\n  run: vi.fn(),\r\n  get: vi.fn(),\r\n  all: vi.fn()\r\n} as unknown as DatabaseConnection;\r\n\r\nconst mockEventLogger = {\r\n  logEvent: vi.fn()\r\n} as unknown as EventLogger;\r\n\r\ndescribe('HardwareSoakTester",
        "lineCount": 509,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\health-monitor.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\health-monitor.test.ts",
        "size": 15246,
        "modified": "2025-08-23T17:08:18.826Z",
        "extension": ".ts",
        "basename": "health-monitor.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi, afterEach } from 'vitest';\r\nimport { HealthMonitor } from '../health-monitor';\r\nimport { DatabaseConnection } from '../../database/connection';\r\nimport { EventLogger } from '../event-logger';\r\nimport { CommandQueueManager } from '../command-queue-manager';\r\nimport fs from 'fs/promises';\r\nimport path from 'path';\r\n\r\n// Mock dependencies\r\nconst mockDb = {\r\n  get: vi.fn(),\r\n  all: vi.fn(),\r\n  getDatabasePath: vi.fn().mockReturnValue('/test/db/test.db')",
        "lineCount": 390,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\i18n-regression.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\i18n-regression.test.ts",
        "size": 11709,
        "modified": "2025-08-23T17:08:18.827Z",
        "extension": ".ts",
        "basename": "i18n-regression.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect } from 'vitest';\r\nimport { I18nService, SupportedLanguage } from '../i18n-service';\r\n\r\n/**\r\n * Regression tests for i18n system\r\n * These tests ensure that new message additions don't break existing functionality\r\n * and that message structure remains consistent across languages\r\n */\r\ndescribe('I18n Regression Tests', () => {\r\n  const i18nService = new I18nService();\r\n\r\n  describe('Message Structure Stability', () => {\r\n    it('should maintain expected message struc",
        "lineCount": 336,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\i18n-service.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\i18n-service.test.ts",
        "size": 11563,
        "modified": "2025-08-23T17:08:18.831Z",
        "extension": ".ts",
        "basename": "i18n-service.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach } from 'vitest';\r\nimport { I18nService, SupportedLanguage } from '../i18n-service';\r\n\r\ndescribe('I18nService', () => {\r\n  let i18nService: I18nService;\r\n\r\n  beforeEach(() => {\r\n    i18nService = new I18nService();\r\n  });\r\n\r\n  describe('Language Management', () => {\r\n    it('should default to Turkish language', () => {\r\n      expect(i18nService.getCurrentLanguage()).toBe('tr');\r\n    });\r\n\r\n    it('should set language correctly', () => {\r\n      i18nService",
        "lineCount": 338,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\locker-assignment-release.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\locker-assignment-release.test.ts",
        "size": 10036,
        "modified": "2025-08-27T20:18:08.971Z",
        "extension": ".ts",
        "basename": "locker-assignment-release.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect, beforeAll, afterAll, beforeEach } from 'vitest';\nimport { LockerStateManager } from '../locker-state-manager';\nimport { LockerStatus, OwnerType } from '../../types/core-entities';\n\n// Mock database for testing assignment and release logic\nclass MockDatabase {\n  private lockers: Map<string, any> = new Map();\n  private events: any[] = [];\n\n  async get<T>(sql: string, params: any[]): Promise<T | undefined> {\n    if (sql.includes('SELECT * FROM lockers WHERE kiosk_id =",
        "lineCount": 292,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\locker-naming-service.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\locker-naming-service.test.ts",
        "size": 16945,
        "modified": "2025-08-27T03:38:22.284Z",
        "extension": ".ts",
        "basename": "locker-naming-service.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach } from 'vitest';\nimport { LockerNamingService, ValidationResult } from '../locker-naming-service';\nimport { DatabaseConnection } from '../../database/connection';\nimport { LockerRepository } from '../../database/locker-repository';\nimport { Locker, LockerStatus } from '../../types/core-entities';\n\ndescribe('LockerNamingService', () => {\n  let db: DatabaseConnection;\n  let lockerRepository: LockerRepository;\n  let namingService: LockerNamingSer",
        "lineCount": 464,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\locker-state-manager-enhanced.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\locker-state-manager-enhanced.test.ts",
        "size": 6625,
        "modified": "2025-08-27T20:18:08.974Z",
        "extension": ".ts",
        "basename": "locker-state-manager-enhanced.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\nimport { LockerStateManager } from '../locker-state-manager';\nimport { LockerNamingService } from '../locker-naming-service';\nimport { webSocketService } from '../websocket-service';\n\n// Mock dependencies\nvi.mock('../websocket-service', () => ({\n  webSocketService: {\n    broadcastStateUpdate: vi.fn(),\n    initialize: vi.fn(),\n    shutdown: vi.fn(),\n    getConnectionStatus: vi.fn(() => ({\n      status: 'online',\n      conne",
        "lineCount": 233,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\locker-state-manager-simple.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\locker-state-manager-simple.test.ts",
        "size": 2143,
        "modified": "2025-08-27T20:18:08.976Z",
        "extension": ".ts",
        "basename": "locker-state-manager-simple.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach } from 'vitest';\nimport { DatabaseConnection } from '../../database/connection';\nimport { LockerStateManager } from '../locker-state-manager';\n\ndescribe('LockerStateManager - Simple Tests', () => {\n  let db: DatabaseConnection;\n  let stateManager: LockerStateManager;\n\n  beforeEach(async () => {\n    DatabaseConnection.resetInstance();\n    db = DatabaseConnection.getInstance(':memory:');\n    await db.waitForInitialization();\n    \n    // Create m",
        "lineCount": 72,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\locker-state-manager.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\locker-state-manager.test.ts",
        "size": 15880,
        "modified": "2025-08-27T20:18:08.979Z",
        "extension": ".ts",
        "basename": "locker-state-manager.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\nimport { DatabaseConnection } from '../../database/connection';\nimport { LockerStateManager } from '../locker-state-manager';\nimport { LockerStatus, OwnerType, EventType } from '../../types/core-entities';\n\ndescribe('LockerStateManager', () => {\n  let db: DatabaseConnection;\n  let stateManager: LockerStateManager;\n\n  beforeEach(async () => {\n    // Use in-memory database for testing\n    DatabaseConnection.resetInstance();\n",
        "lineCount": 453,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\log-retention-manager.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\log-retention-manager.test.ts",
        "size": 16303,
        "modified": "2025-08-23T17:08:18.823Z",
        "extension": ".ts",
        "basename": "log-retention-manager.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi, afterEach } from 'vitest';\r\nimport { LogRetentionManager, RetentionConfig, CleanupResult } from '../log-retention-manager';\r\nimport { DatabaseConnection } from '../../database/connection';\r\nimport { EventLogger } from '../event-logger';\r\nimport fs from 'fs/promises';\r\n\r\n// Mock dependencies\r\nconst mockDb = {\r\n  run: vi.fn(),\r\n  get: vi.fn(),\r\n  all: vi.fn()\r\n} as unknown as DatabaseConnection;\r\n\r\nconst mockEventLogger = {\r\n  logEvent: vi.fn()\r\n} as ",
        "lineCount": 419,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\rate-limiter.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\rate-limiter.test.ts",
        "size": 14395,
        "modified": "2025-08-23T17:08:18.834Z",
        "extension": ".ts",
        "basename": "rate-limiter.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { RateLimiter, RateLimitConfig, createRateLimiter } from '../rate-limiter';\r\nimport { EventRepository } from '../../database/event-repository';\r\nimport { EventType } from '../../types/core-entities';\r\n\r\n// Mock EventRepository\r\nconst mockEventRepository = {\r\n  createEvent: vi.fn().mockResolvedValue({ id: 1 })\r\n} as unknown as EventRepository;\r\n\r\ndescribe('RateLimiter', () => {\r\n  let rateLimiter: RateLimiter;\r\n  le",
        "lineCount": 424,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\security-validation.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\security-validation.test.ts",
        "size": 13182,
        "modified": "2025-08-23T17:08:18.836Z",
        "extension": ".ts",
        "basename": "security-validation.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, vi } from 'vitest';\r\nimport { SecurityValidator } from '../security-validation';\r\nimport { EventLogger } from '../event-logger';\r\n\r\n// Mock dependencies\r\nvi.mock('../event-logger.js');\r\n\r\ndescribe('SecurityValidator', () => {\r\n  let validator: SecurityValidator;\r\n  let mockEventLogger: any;\r\n\r\n  beforeEach(() => {\r\n    mockEventLogger = {\r\n      logEvent: vi.fn()\r\n    };\r\n\r\n    validator = new SecurityValidator(mockEventLogger);\r\n  });\r\n\r\n  describe('In",
        "lineCount": 415,
        "isEmpty": false
      }
    },
    "shared\\services\\__tests__\\websocket-service.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "shared\\services\\__tests__\\websocket-service.test.ts",
        "size": 1969,
        "modified": "2025-08-27T20:18:08.981Z",
        "extension": ".ts",
        "basename": "websocket-service.test.ts",
        "directory": "shared\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\nimport { WebSocketService } from '../websocket-service';\nimport { LockerStateUpdate } from '../../types/core-entities';\n\n// Mock the ws module\nvi.mock('ws', () => ({\n  WebSocketServer: vi.fn().mockImplementation(() => ({\n    on: vi.fn(),\n    close: vi.fn()\n  })),\n  WebSocket: {\n    OPEN: 1\n  }\n}));\n\ndescribe('WebSocketService', () => {\n  let webSocketService: WebSocketService;\n\n  beforeEach(() => {\n    webSocketService = n",
        "lineCount": 77,
        "isEmpty": false
      }
    },
    "shared\\tsconfig.json": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared directory"
      ],
      "metadata": {
        "path": "shared\\tsconfig.json",
        "size": 246,
        "modified": "2025-08-25T12:46:15.499Z",
        "extension": ".json",
        "basename": "tsconfig.json",
        "directory": "shared",
        "content": "{\r\n  \"extends\": \"../tsconfig.json\",\r\n  \"compilerOptions\": {\r\n    \"outDir\": \"./dist\",\r\n    \"rootDir\": \"./\",\r\n    \"composite\": true\r\n  },\r\n  \"include\": [\r\n    \"./**/*\"\r\n  ],\r\n  \"exclude\": [\r\n    \"node_modules\",\r\n    \"dist\",\r\n    \"__tests__\"\r\n  ]\r\n}",
        "lineCount": 16,
        "isEmpty": false
      }
    },
    "shared\\types\\core-entities.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\types directory"
      ],
      "metadata": {
        "path": "shared\\types\\core-entities.ts",
        "size": 16404,
        "modified": "2025-08-27T20:15:19.510Z",
        "extension": ".ts",
        "basename": "core-entities.ts",
        "directory": "shared\\types",
        "content": "/**\n * Core Entity Interfaces for Eform Locker System\n * Following the design specification for multi-room locker management\n */\n\n// ============================================================================\n// LOCKER ENTITIES\n// ============================================================================\n\nexport type LockerStatus = 'Free' | 'Owned' | 'Opening' | 'Error' | 'Blocked';\nexport type OwnerType = 'rfid' | 'device' | 'vip';\n\nexport interface Locker {\n  id: number; // Locker number wi",
        "lineCount": 652,
        "isEmpty": false
      }
    },
    "shared\\types\\index.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\types directory"
      ],
      "metadata": {
        "path": "shared\\types\\index.ts",
        "size": 2098,
        "modified": "2025-08-23T14:28:23.951Z",
        "extension": ".ts",
        "basename": "index.ts",
        "directory": "shared\\types",
        "content": "// Re-export core entities for backward compatibility\r\nexport * from './core-entities';\r\n\r\n// Provisioning-specific interfaces (legacy compatibility)\r\nexport interface KioskRegistrationRequest {\r\n  zone: string;\r\n  version: string;\r\n  hardware_id: string;\r\n}\r\n\r\nexport interface KioskRegistrationResponse {\r\n  kiosk_id: string;\r\n  registration_secret: string;\r\n  panel_url: string;\r\n  config_hash?: string;\r\n}\r\n\r\nexport interface ProvisioningToken {\r\n  token: string;\r\n  kiosk_id: string;\r\n  zone: st",
        "lineCount": 81,
        "isEmpty": false
      }
    },
    "shared\\types\\system-config.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in shared\\types directory"
      ],
      "metadata": {
        "path": "shared\\types\\system-config.ts",
        "size": 4460,
        "modified": "2025-08-23T14:28:23.955Z",
        "extension": ".ts",
        "basename": "system-config.ts",
        "directory": "shared\\types",
        "content": "/**\r\n * System configuration interface for the Eform Locker System\r\n * All configurable parameters as specified in the design document\r\n */\r\n\r\nexport interface SystemConfig {\r\n  // Locker operation timing\r\n  BULK_INTERVAL_MS: number; // Default: 300\r\n  RESERVE_TTL_SECONDS: number; // Default: 90\r\n  OPEN_PULSE_MS: number; // Default: 400\r\n  OPEN_BURST_SECONDS: number; // Default: 10\r\n  OPEN_BURST_INTERVAL_MS: number; // Default: 2000\r\n\r\n  // Master PIN security\r\n  MASTER_LOCKOUT_FAILS: number; //",
        "lineCount": 180,
        "isEmpty": false
      }
    },
    "src\\cli\\config-test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\cli directory"
      ],
      "metadata": {
        "path": "src\\cli\\config-test.ts",
        "size": 5275,
        "modified": "2025-08-20T08:43:22.202Z",
        "extension": ".ts",
        "basename": "config-test.ts",
        "directory": "src\\cli",
        "content": "#!/usr/bin/env tsx\r\n\r\nimport { DatabaseConnection } from '../database/connection.js';\r\nimport { ConfigurationService } from '../services/configuration.js';\r\n\r\nasync function testConfigurationSystem() {\r\n  console.log('🔧 Testing Configuration Distribution System...\\n');\r\n\r\n  try {\r\n    // Initialize database\r\n    const db = DatabaseConnection.getInstance('./data/eform.db');\r\n    await db.initializeSchema();\r\n    \r\n    const configService = new ConfigurationService();\r\n\r\n    // 1. Create a test k",
        "lineCount": 114,
        "isEmpty": false
      }
    },
    "src\\cli\\provision.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\cli directory"
      ],
      "metadata": {
        "path": "src\\cli\\provision.ts",
        "size": 2723,
        "modified": "2025-08-17T19:57:55.745Z",
        "extension": ".ts",
        "basename": "provision.ts",
        "directory": "src\\cli",
        "content": "#!/usr/bin/env node\r\n\r\nimport { ProvisioningService } from '../services/provisioning.js';\r\nimport { DatabaseConnection } from '../database/connection.js';\r\n\r\nasync function main() {\r\n  const args = process.argv.slice(2);\r\n  const command = args[0];\r\n\r\n  if (!command) {\r\n    console.log('Usage: provision <command> [options]');\r\n    console.log('Commands:');\r\n    console.log('  token <zone>     Generate provisioning token for zone');\r\n    console.log('  list             List all kiosks');\r\n    con",
        "lineCount": 87,
        "isEmpty": false
      }
    },
    "src\\controllers\\configuration.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\controllers directory"
      ],
      "metadata": {
        "path": "src\\controllers\\configuration.ts",
        "size": 8561,
        "modified": "2025-08-20T08:38:04.855Z",
        "extension": ".ts",
        "basename": "configuration.ts",
        "directory": "src\\controllers",
        "content": "import { FastifyRequest, FastifyReply } from 'fastify';\r\nimport { ConfigurationService } from '../services/configuration.js';\r\nimport { SystemConfig } from '../types/index.js';\r\n\r\nexport class ConfigurationController {\r\n  private configService: ConfigurationService;\r\n\r\n  constructor() {\r\n    this.configService = new ConfigurationService();\r\n  }\r\n\r\n  /**\r\n   * Get default configuration template\r\n   */\r\n  async getDefaultConfig(request: FastifyRequest, reply: FastifyReply) {\r\n    try {\r\n      cons",
        "lineCount": 307,
        "isEmpty": false
      }
    },
    "src\\controllers\\provisioning.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\controllers directory"
      ],
      "metadata": {
        "path": "src\\controllers\\provisioning.ts",
        "size": 5908,
        "modified": "2025-08-17T19:56:25.921Z",
        "extension": ".ts",
        "basename": "provisioning.ts",
        "directory": "src\\controllers",
        "content": "import { FastifyRequest, FastifyReply } from 'fastify';\r\nimport { ProvisioningService } from '../services/provisioning.js';\r\nimport { KioskRegistrationRequest } from '../types/index.js';\r\n\r\nexport class ProvisioningController {\r\n  private provisioningService: ProvisioningService;\r\n\r\n  constructor() {\r\n    this.provisioningService = new ProvisioningService();\r\n  }\r\n\r\n  /**\r\n   * Generate a new provisioning token for a zone\r\n   * POST /api/provisioning/token\r\n   */\r\n  async generateToken(request: ",
        "lineCount": 206,
        "isEmpty": false
      }
    },
    "src\\controllers\\__tests__\\configuration.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\controllers\\__tests__ directory"
      ],
      "metadata": {
        "path": "src\\controllers\\__tests__\\configuration.test.ts",
        "size": 10617,
        "modified": "2025-08-20T08:40:57.630Z",
        "extension": ".ts",
        "basename": "configuration.test.ts",
        "directory": "src\\controllers\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport Fastify, { FastifyInstance } from 'fastify';\r\nimport { configurationRoutes } from '../../routes/configuration.js';\r\nimport { DatabaseConnection } from '../../database/connection.js';\r\n\r\ndescribe('ConfigurationController', () => {\r\n  let app: FastifyInstance;\r\n  let db: DatabaseConnection;\r\n\r\n  beforeEach(async () => {\r\n    // Use in-memory database for testing\r\n    db = DatabaseConnection.getInstance(':memory:');\r\n",
        "lineCount": 324,
        "isEmpty": false
      }
    },
    "src\\controllers\\__tests__\\provisioning.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\controllers\\__tests__ directory"
      ],
      "metadata": {
        "path": "src\\controllers\\__tests__\\provisioning.test.ts",
        "size": 8157,
        "modified": "2025-08-17T20:08:15.937Z",
        "extension": ".ts",
        "basename": "provisioning.test.ts",
        "directory": "src\\controllers\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach } from 'vitest';\r\nimport Fastify, { FastifyInstance } from 'fastify';\r\nimport { provisioningRoutes } from '../../routes/provisioning.js';\r\nimport { DatabaseConnection } from '../../database/connection.js';\r\nimport { unlinkSync } from 'fs';\r\n\r\ndescribe('ProvisioningController', () => {\r\n  let app: FastifyInstance;\r\n  let db: DatabaseConnection;\r\n  const testDbPath = './test-controller.db';\r\n\r\n  beforeEach(async () => {\r\n    app = Fastify();\r\n  ",
        "lineCount": 266,
        "isEmpty": false
      }
    },
    "src\\database\\connection.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\database directory"
      ],
      "metadata": {
        "path": "src\\database\\connection.ts",
        "size": 4581,
        "modified": "2025-08-20T13:46:15.262Z",
        "extension": ".ts",
        "basename": "connection.ts",
        "directory": "src\\database",
        "content": "import sqlite3 from 'sqlite3';\r\nimport { readFileSync } from 'fs';\r\nimport { join } from 'path';\r\nimport { promisify } from 'util';\r\n\r\nexport class DatabaseConnection {\r\n  private db: sqlite3.Database;\r\n  private static instance: DatabaseConnection;\r\n  private isInitialized: boolean = false;\r\n\r\n  private constructor(dbPath: string = './data/eform.db') {\r\n    this.db = new sqlite3.Database(dbPath, sqlite3.OPEN_READWRITE | sqlite3.OPEN_CREATE, (err) => {\r\n      if (err) {\r\n        console.error('E",
        "lineCount": 163,
        "isEmpty": false
      }
    },
    "src\\database\\schema.sql": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\database directory"
      ],
      "metadata": {
        "path": "src\\database\\schema.sql",
        "size": 3458,
        "modified": "2025-08-20T08:36:36.275Z",
        "extension": ".sql",
        "basename": "schema.sql",
        "directory": "src\\database",
        "content": "-- Kiosk Heartbeat Table\r\nCREATE TABLE IF NOT EXISTS kiosk_heartbeat (\r\n  kiosk_id TEXT PRIMARY KEY,\r\n  last_seen DATETIME NOT NULL,\r\n  zone TEXT NOT NULL,\r\n  status TEXT NOT NULL DEFAULT 'online',\r\n  version TEXT NOT NULL,\r\n  last_config_hash TEXT,\r\n  offline_threshold_seconds INTEGER DEFAULT 30,\r\n  hardware_id TEXT,\r\n  registration_secret TEXT,\r\n  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP\r\n);\r\n\r\n-- Provisioning Tokens Table\r\nCREATE TABLE IF",
        "lineCount": 98,
        "isEmpty": false
      }
    },
    "src\\index.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src directory"
      ],
      "metadata": {
        "path": "src\\index.ts",
        "size": 1759,
        "modified": "2025-08-20T08:39:24.685Z",
        "extension": ".ts",
        "basename": "index.ts",
        "directory": "src",
        "content": "import Fastify from 'fastify';\r\nimport { DatabaseConnection } from './database/connection.js';\r\nimport { provisioningRoutes } from './routes/provisioning.js';\r\nimport { configurationRoutes } from './routes/configuration.js';\r\nimport { mkdirSync } from 'fs';\r\n\r\nconst fastify = Fastify({\r\n  logger: true\r\n});\r\n\r\n// Ensure data directory exists\r\ntry {\r\n  mkdirSync('./data', { recursive: true });\r\n} catch (error) {\r\n  // Directory might already exist\r\n}\r\n\r\n// Initialize database\r\nasync function initi",
        "lineCount": 63,
        "isEmpty": false
      }
    },
    "src\\routes\\configuration.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\routes directory"
      ],
      "metadata": {
        "path": "src\\routes\\configuration.ts",
        "size": 1975,
        "modified": "2025-08-20T08:38:14.049Z",
        "extension": ".ts",
        "basename": "configuration.ts",
        "directory": "src\\routes",
        "content": "import { FastifyInstance } from 'fastify';\r\nimport { ConfigurationController } from '../controllers/configuration.js';\r\n\r\nexport async function configurationRoutes(fastify: FastifyInstance) {\r\n  const configController = new ConfigurationController();\r\n\r\n  // Panel endpoints (staff management interface)\r\n  \r\n  // Get default configuration template\r\n  fastify.get('/default', configController.getDefaultConfig.bind(configController));\r\n  \r\n  // Create new configuration package\r\n  fastify.post('/pack",
        "lineCount": 43,
        "isEmpty": false
      }
    },
    "src\\routes\\provisioning.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\routes directory"
      ],
      "metadata": {
        "path": "src\\routes\\provisioning.ts",
        "size": 2673,
        "modified": "2025-08-17T19:56:36.239Z",
        "extension": ".ts",
        "basename": "provisioning.ts",
        "directory": "src\\routes",
        "content": "import { FastifyInstance } from 'fastify';\r\nimport { ProvisioningController } from '../controllers/provisioning.js';\r\n\r\nexport async function provisioningRoutes(fastify: FastifyInstance) {\r\n  const controller = new ProvisioningController();\r\n\r\n  // Generate provisioning token\r\n  fastify.post('/token', {\r\n    schema: {\r\n      body: {\r\n        type: 'object',\r\n        required: ['zone'],\r\n        properties: {\r\n          zone: { type: 'string', minLength: 1 }\r\n        }\r\n      },\r\n      response: ",
        "lineCount": 100,
        "isEmpty": false
      }
    },
    "src\\services\\configuration.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\services directory"
      ],
      "metadata": {
        "path": "src\\services\\configuration.ts",
        "size": 13908,
        "modified": "2025-08-20T08:37:34.141Z",
        "extension": ".ts",
        "basename": "configuration.ts",
        "directory": "src\\services",
        "content": "import { createHash } from 'crypto';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { DatabaseConnection } from '../database/connection.js';\r\nimport { \r\n  SystemConfig, \r\n  ConfigurationPackage, \r\n  ConfigurationDeployment, \r\n  KioskConfigStatus \r\n} from '../types/index.js';\r\n\r\nexport class ConfigurationService {\r\n  private db: DatabaseConnection;\r\n\r\n  constructor() {\r\n    this.db = DatabaseConnection.getInstance();\r\n  }\r\n\r\n  /**\r\n   * Get default system configuration\r\n   */\r\n  getDefaultConfig()",
        "lineCount": 437,
        "isEmpty": false
      }
    },
    "src\\services\\provisioning.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\services directory"
      ],
      "metadata": {
        "path": "src\\services\\provisioning.ts",
        "size": 8189,
        "modified": "2025-08-17T20:08:45.234Z",
        "extension": ".ts",
        "basename": "provisioning.ts",
        "directory": "src\\services",
        "content": "import { randomBytes, createHmac } from 'crypto';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { DatabaseConnection } from '../database/connection.js';\r\nimport { \r\n  KioskRegistrationRequest, \r\n  KioskRegistrationResponse, \r\n  ProvisioningToken, \r\n  ProvisioningStatus,\r\n  KioskHeartbeat \r\n} from '../types/index.js';\r\n\r\nexport class ProvisioningService {\r\n  private db: DatabaseConnection;\r\n  private readonly SECRET_KEY = process.env.PROVISIONING_SECRET || 'default-secret-key';\r\n  private readonl",
        "lineCount": 249,
        "isEmpty": false
      }
    },
    "src\\services\\__tests__\\configuration.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "src\\services\\__tests__\\configuration.test.ts",
        "size": 12582,
        "modified": "2025-08-20T08:42:36.677Z",
        "extension": ".ts",
        "basename": "configuration.test.ts",
        "directory": "src\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach } from 'vitest';\r\nimport { ConfigurationService } from '../configuration.js';\r\nimport { DatabaseConnection } from '../../database/connection.js';\r\nimport { SystemConfig } from '../../types/index.js';\r\n\r\ndescribe('ConfigurationService', () => {\r\n  let configService: ConfigurationService;\r\n  let db: DatabaseConnection;\r\n\r\n  beforeEach(async () => {\r\n    // Use in-memory database for testing\r\n    db = DatabaseConnection.getInstance(':memory:');\r\n",
        "lineCount": 305,
        "isEmpty": false
      }
    },
    "src\\services\\__tests__\\provisioning.test.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\services\\__tests__ directory"
      ],
      "metadata": {
        "path": "src\\services\\__tests__\\provisioning.test.ts",
        "size": 9352,
        "modified": "2025-08-22T14:00:51.824Z",
        "extension": ".ts",
        "basename": "provisioning.test.ts",
        "directory": "src\\services\\__tests__",
        "content": "import { describe, it, expect, beforeEach, afterEach } from 'vitest';\r\nimport { ProvisioningService } from '../provisioning.js';\r\nimport { DatabaseConnection } from '../../database/connection.js';\r\nimport { unlinkSync } from 'fs';\r\n\r\ndescribe('ProvisioningService', () => {\r\n  let provisioningService: ProvisioningService;\r\n  let db: DatabaseConnection;\r\n  const testDbPath = './test.db';\r\n\r\n  beforeEach(async () => {\r\n    // Reset database instance and use test database\r\n    DatabaseConnection.res",
        "lineCount": 277,
        "isEmpty": false
      }
    },
    "src\\types\\core-entities.d.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\types directory"
      ],
      "metadata": {
        "path": "src\\types\\core-entities.d.ts",
        "size": 12456,
        "modified": "2025-08-23T12:28:39.344Z",
        "extension": ".ts",
        "basename": "core-entities.d.ts",
        "directory": "src\\types",
        "content": "/**\n * Core Entity Interfaces for Eform Locker System\n * Following the design specification for multi-room locker management\n */\nexport type LockerStatus = 'Free' | 'Reserved' | 'Owned' | 'Opening' | 'Blocked';\nexport type OwnerType = 'rfid' | 'device' | 'vip';\nexport interface Locker {\n    id: number;\n    kiosk_id: string;\n    status: LockerStatus;\n    owner_type?: OwnerType;\n    owner_key?: string;\n    reserved_at?: Date;\n    owned_at?: Date;\n    version: number;\n    is_vip: boolean;\n    creat",
        "lineCount": 466,
        "isEmpty": false
      }
    },
    "src\\types\\core-entities.d.ts.map": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\types directory"
      ],
      "metadata": {
        "path": "src\\types\\core-entities.d.ts.map",
        "size": 11643,
        "modified": "2025-08-23T12:28:39.343Z",
        "extension": ".map",
        "basename": "core-entities.d.ts.map",
        "directory": "src\\types",
        "content": "{\"version\":3,\"file\":\"core-entities.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"core-entities.ts\"],\"names\":[],\"mappings\":\"AAAA;;;GAGG;AAMH,MAAM,MAAM,YAAY,GAAG,MAAM,GAAG,UAAU,GAAG,OAAO,GAAG,SAAS,GAAG,SAAS,CAAC;AACjF,MAAM,MAAM,SAAS,GAAG,MAAM,GAAG,QAAQ,GAAG,KAAK,CAAC;AAElD,MAAM,WAAW,MAAM;IACrB,EAAE,EAAE,MAAM,CAAC;IACX,QAAQ,EAAE,MAAM,CAAC;IACjB,MAAM,EAAE,YAAY,CAAC;IACrB,UAAU,CAAC,EAAE,SAAS,CAAC;IACvB,SAAS,CAAC,EAAE,MAAM,CAAC;IACnB,WAAW,CAAC,EAAE,IAAI,CAAC;IACnB,QAAQ,CAAC,EAAE,IAAI,CAAC;IAChB,OAAO,EAAE,MAAM,CAA",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "src\\types\\core-entities.js": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\types directory"
      ],
      "metadata": {
        "path": "src\\types\\core-entities.js",
        "size": 2681,
        "modified": "2025-08-23T12:28:39.323Z",
        "extension": ".js",
        "basename": "core-entities.js",
        "directory": "src\\types",
        "content": "/**\n * Core Entity Interfaces for Eform Locker System\n * Following the design specification for multi-room locker management\n */\n// ============================================================================\n// EVENT ENTITIES\n// ============================================================================\nexport var EventType;\n(function (EventType) {\n    // System events\n    EventType[\"SYSTEM_RESTARTED\"] = \"restarted\";\n    EventType[\"KIOSK_ONLINE\"] = \"kiosk_online\";\n    EventType[\"KIOSK_OFFLINE\"",
        "lineCount": 57,
        "isEmpty": false
      }
    },
    "src\\types\\core-entities.js.map": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\types directory"
      ],
      "metadata": {
        "path": "src\\types\\core-entities.js.map",
        "size": 1056,
        "modified": "2025-08-23T12:28:39.322Z",
        "extension": ".map",
        "basename": "core-entities.js.map",
        "directory": "src\\types",
        "content": "{\"version\":3,\"file\":\"core-entities.js\",\"sourceRoot\":\"\",\"sources\":[\"core-entities.ts\"],\"names\":[],\"mappings\":\"AAAA;;;GAGG;AA4FH,+EAA+E;AAC/E,iBAAiB;AACjB,+EAA+E;AAE/E,MAAM,CAAN,IAAY,SAwCX;AAxCD,WAAY,SAAS;IACnB,gBAAgB;IAChB,2CAA8B,CAAA;IAC9B,0CAA6B,CAAA;IAC7B,4CAA+B,CAAA;IAE/B,cAAc;IACd,wCAA2B,CAAA;IAC3B,0CAA6B,CAAA;IAC7B,oCAAuB,CAAA;IACvB,sCAAyB,CAAA;IAEzB,eAAe;IACf,sCAAyB,CAAA;IACzB,wCAA2B,CAAA;IAC3B,4CAA+B,CAAA;IAC/B,oCAAuB,CAAA;IACvB,gDAAmC,CAAA;IAEnC,aAAa;IACb,0DAA6C,CAAA;IAC7C,4DAA+C,CAAA;IA",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "src\\types\\core-entities.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\types directory"
      ],
      "metadata": {
        "path": "src\\types\\core-entities.ts",
        "size": 15793,
        "modified": "2025-08-23T12:28:27.075Z",
        "extension": ".ts",
        "basename": "core-entities.ts",
        "directory": "src\\types",
        "content": "/**\r\n * Core Entity Interfaces for Eform Locker System\r\n * Following the design specification for multi-room locker management\r\n */\r\n\r\n// ============================================================================\r\n// LOCKER ENTITIES\r\n// ============================================================================\r\n\r\nexport type LockerStatus = 'Free' | 'Reserved' | 'Owned' | 'Opening' | 'Blocked';\r\nexport type OwnerType = 'rfid' | 'device' | 'vip';\r\n\r\nexport interface Locker {\r\n  id: number; // ",
        "lineCount": 610,
        "isEmpty": false
      }
    },
    "src\\types\\index.ts": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\types directory"
      ],
      "metadata": {
        "path": "src\\types\\index.ts",
        "size": 2099,
        "modified": "2025-08-20T09:18:22.633Z",
        "extension": ".ts",
        "basename": "index.ts",
        "directory": "src\\types",
        "content": "// Re-export core entities for backward compatibility\r\nexport * from './core-entities.js';\r\n\r\n// Provisioning-specific interfaces (legacy compatibility)\r\nexport interface KioskRegistrationRequest {\r\n  zone: string;\r\n  version: string;\r\n  hardware_id: string;\r\n}\r\n\r\nexport interface KioskRegistrationResponse {\r\n  kiosk_id: string;\r\n  registration_secret: string;\r\n  panel_url: string;\r\n  config_hash?: string;\r\n}\r\n\r\nexport interface ProvisioningToken {\r\n  token: string;\r\n  kiosk_id: string;\r\n  zone:",
        "lineCount": 80,
        "isEmpty": false
      }
    },
    "src\\views\\configuration-panel.html": {
      "primary": "active",
      "confidence": "high",
      "reasons": [
        "Located in src\\views directory"
      ],
      "metadata": {
        "path": "src\\views\\configuration-panel.html",
        "size": 15582,
        "modified": "2025-08-20T08:39:16.321Z",
        "extension": ".html",
        "basename": "configuration-panel.html",
        "directory": "src\\views",
        "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Configuration Management - Eform Locker System</title>\r\n    <style>\r\n        * {\r\n            margin: 0;\r\n            padding: 0;\r\n            box-sizing: border-box;\r\n        }\r\n\r\n        body {\r\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n            background-color: #f5f5f5;\r\n            ",
        "lineCount": 457,
        "isEmpty": false
      }
    },
    "task-16-acceptance-testing-report.json": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern"
      ],
      "alternatives": [],
      "metadata": {
        "path": "task-16-acceptance-testing-report.json",
        "size": 7611,
        "modified": "2025-08-27T03:38:22.299Z",
        "extension": ".json",
        "basename": "task-16-acceptance-testing-report.json",
        "directory": ".",
        "content": "{\n  \"timestamp\": \"2025-08-27T03:34:35.492Z\",\n  \"summary\": {\n    \"passed\": 47,\n    \"failed\": 0,\n    \"warnings\": 0,\n    \"successRate\": \"100.0%\"\n  },\n  \"details\": [\n    {\n      \"status\": \"PASS\",\n      \"description\": \"Always-visible background grid with blur effect\",\n      \"details\": \"Background grid structure found in HTML\"\n    },\n    {\n      \"status\": \"PASS\",\n      \"description\": \"Front overlay with Turkish prompt text\",\n      \"details\": \"Front overlay structure and Turkish text found\"\n    },\n    ",
        "lineCount": 247,
        "isEmpty": false
      }
    },
    "test-actual-rfid-assignment.js": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains active keywords: function, const"
      ],
      "alternatives": [
        "active"
      ],
      "metadata": {
        "path": "test-actual-rfid-assignment.js",
        "size": 5991,
        "modified": "2025-08-28T04:37:48.049Z",
        "extension": ".js",
        "basename": "test-actual-rfid-assignment.js",
        "directory": ".",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Test the actual RFID assignment flow that includes database updates\r\n */\r\n\r\nconst sqlite3 = require('sqlite3').verbose();\r\n\r\nconsole.log('🧪 Testing Actual RFID Assignment Flow...\\n');\r\n\r\n// Simulate the complete RFID assignment process\r\nasync function simulateRfidAssignment() {\r\n    const db = new sqlite3.Database('/home/pi/eform-locker/data/eform.db');\r\n    \r\n    return new Promise((resolve, reject) => {\r\n        const cardId = '0006851540';\r\n        const locker",
        "lineCount": 158,
        "isEmpty": false
      }
    },
    "test-assignment-debug.sh": {
      "primary": "documentation",
      "confidence": "low",
      "reasons": [
        "Contains documentation keywords: # "
      ],
      "alternatives": [],
      "metadata": {
        "path": "test-assignment-debug.sh",
        "size": 1118,
        "modified": "2025-08-27T19:14:16.874Z",
        "extension": ".sh",
        "basename": "test-assignment-debug.sh",
        "directory": ".",
        "content": "#!/bin/bash\n\necho \"=== Testing Locker Assignment Flow ===\"\n\n# Step 1: Get available lockers and session ID\necho \"1. Getting available lockers...\"\nRESPONSE=$(curl -s 'http://localhost:3002/api/lockers/available?kioskId=kiosk-1')\necho \"Response: $RESPONSE\"\n\n# Extract session ID\nSESSION_ID=$(echo \"$RESPONSE\" | grep -o '\"sessionId\":\"[^\"]*\"' | cut -d'\"' -f4)\necho \"Extracted Session ID: $SESSION_ID\"\n\nif [ -z \"$SESSION_ID\" ]; then\n    echo \"ERROR: No session ID found!\"\n    exit 1\nfi\n\n# Step 2: Test loc",
        "lineCount": 47,
        "isEmpty": false
      }
    },
    "test-assignment.json": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern"
      ],
      "alternatives": [],
      "metadata": {
        "path": "test-assignment.json",
        "size": 61,
        "modified": "2025-08-27T19:04:57.943Z",
        "extension": ".json",
        "basename": "test-assignment.json",
        "directory": ".",
        "content": "{\"cardId\": \"0006851540\", \"lockerId\": 5, \"kioskId\": \"kiosk-1\"}",
        "lineCount": 1,
        "isEmpty": false
      }
    },
    "test-env-vars.js": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains active keywords: var",
        "Contains config keywords: config"
      ],
      "alternatives": [
        "active",
        "config"
      ],
      "metadata": {
        "path": "test-env-vars.js",
        "size": 583,
        "modified": "2025-08-28T08:32:16.582Z",
        "extension": ".js",
        "basename": "test-env-vars.js",
        "directory": ".",
        "content": "// Test environment variables on Pi\r\nrequire('dotenv').config();\r\n\r\nconsole.log('🔍 Environment Variables Test:');\r\nconsole.log('MAKSI_BASE:', process.env.MAKSI_BASE || 'NOT SET');\r\nconsole.log('MAKSI_ENABLED:', process.env.MAKSI_ENABLED || 'NOT SET');\r\nconsole.log('MAKSI_BOOTSTRAP_COOKIE:', process.env.MAKSI_BOOTSTRAP_COOKIE ? 'SET (length: ' + process.env.MAKSI_BOOTSTRAP_COOKIE.length + ')' : 'NOT SET');\r\nconsole.log('MAKSI_SEARCH_PATH:', process.env.MAKSI_SEARCH_PATH || 'NOT SET');\r\nconsole.l",
        "lineCount": 9,
        "isEmpty": false
      }
    },
    "test-locker-assignment.js": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains active keywords: function, const"
      ],
      "alternatives": [
        "active"
      ],
      "metadata": {
        "path": "test-locker-assignment.js",
        "size": 3198,
        "modified": "2025-08-28T04:26:30.939Z",
        "extension": ".js",
        "basename": "test-locker-assignment.js",
        "directory": ".",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Test script to simulate proper locker assignment flow\r\n * This will help verify the status transitions work correctly\r\n */\r\n\r\nconst http = require('http');\r\nconst sqlite3 = require('sqlite3').verbose();\r\n\r\nconsole.log('🧪 Testing Locker Assignment Flow...\\n');\r\n\r\n// Simulate assigning a locker to an RFID card\r\nasync function assignLocker(lockerId, rfidCard) {\r\n    return new Promise((resolve, reject) => {\r\n        const db = new sqlite3.Database('/home/pi/eform-loc",
        "lineCount": 94,
        "isEmpty": false
      }
    },
    "test-maksisoft-button-fix.js": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains active keywords: const"
      ],
      "alternatives": [
        "active"
      ],
      "metadata": {
        "path": "test-maksisoft-button-fix.js",
        "size": 2076,
        "modified": "2025-08-28T19:43:30.755Z",
        "extension": ".js",
        "basename": "test-maksisoft-button-fix.js",
        "directory": ".",
        "content": "// Test script to verify Maksisoft button fix\r\n// Copy and paste this into browser console on the lockers page\r\n\r\nconsole.log('🔧 Testing Maksisoft Button Fix');\r\nconsole.log('================================');\r\n\r\n// 1. Check if DOM is loaded\r\nconsole.log('📋 DOM readyState:', document.readyState);\r\n\r\n// 2. Check if buttons exist\r\nconst maksiButtons = document.querySelectorAll('.btn-maksi');\r\nconsole.log('🔍 Found Maksisoft buttons:', maksiButtons.length);\r\n\r\nif (maksiButtons.length > 0) {\r\n   ",
        "lineCount": 58,
        "isEmpty": false
      }
    },
    "test-maksisoft-buttons-working.html": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains active keywords: type"
      ],
      "alternatives": [
        "active"
      ],
      "metadata": {
        "path": "test-maksisoft-buttons-working.html",
        "size": 12822,
        "modified": "2025-08-28T08:51:06.996Z",
        "extension": ".html",
        "basename": "test-maksisoft-buttons-working.html",
        "directory": ".",
        "content": "<!DOCTYPE html>\r\n<html lang=\"tr\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Maksisoft Button Test - Working</title>\r\n    <style>\r\n        body {\r\n            font-family: Arial, sans-serif;\r\n            max-width: 800px;\r\n            margin: 0 auto;\r\n            padding: 20px;\r\n            background: #f5f5f5;\r\n        }\r\n        .container {\r\n            background: white;\r\n            padding: 30px;\r\n            ",
        "lineCount": 344,
        "isEmpty": false
      }
    },
    "test-maksisoft-buttons.html": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains active keywords: type"
      ],
      "alternatives": [
        "active"
      ],
      "metadata": {
        "path": "test-maksisoft-buttons.html",
        "size": 5133,
        "modified": "2025-08-28T08:22:48.066Z",
        "extension": ".html",
        "basename": "test-maksisoft-buttons.html",
        "directory": ".",
        "content": "<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Test Maksisoft Buttons</title>\r\n    <style>\r\n        body { font-family: Arial, sans-serif; margin: 20px; }\r\n        .test-result { padding: 10px; margin: 10px 0; border-radius: 5px; }\r\n        .success { background: #d4edda; color: #155724; border: 1px solid #c3e6cb; }\r\n        .error { background: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }\r\n        .info { background: #d1ecf1; color: #0c5460; border: 1px solid #bee5eb; }\r\n        .code { b",
        "lineCount": 116,
        "isEmpty": false
      }
    },
    "test-maksisoft-connection.js": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains active keywords: function, const",
        "Contains documentation keywords: manual"
      ],
      "alternatives": [
        "active",
        "documentation"
      ],
      "metadata": {
        "path": "test-maksisoft-connection.js",
        "size": 7989,
        "modified": "2025-08-28T08:13:38.361Z",
        "extension": ".js",
        "basename": "test-maksisoft-connection.js",
        "directory": ".",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Test Maksisoft Integration Connection\r\n * \r\n * This script tests the connection to Maksisoft API using the configured\r\n * environment variables. It helps verify that the integration is working\r\n * before deploying to production.\r\n */\r\n\r\n// Load environment variables manually\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nfunction loadEnv() {\r\n    const envPath = path.join(__dirname, '.env');\r\n    const env = {};\r\n    \r\n    if (fs.existsSync(envPath)) ",
        "lineCount": 207,
        "isEmpty": false
      }
    },
    "test-maksisoft-final-verification.js": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains active keywords: const, let",
        "Contains config keywords: configuration, config"
      ],
      "alternatives": [
        "active",
        "config"
      ],
      "metadata": {
        "path": "test-maksisoft-final-verification.js",
        "size": 6669,
        "modified": "2025-08-28T08:53:37.171Z",
        "extension": ".js",
        "basename": "test-maksisoft-final-verification.js",
        "directory": ".",
        "content": "/**\r\n * Final Verification Test for Maksisoft Integration\r\n * \r\n * This script tests the complete Maksisoft integration workflow:\r\n * 1. API accessibility without authentication\r\n * 2. Real data retrieval from Maksisoft server\r\n * 3. Data mapping and formatting\r\n * 4. Error handling and rate limiting\r\n */\r\n\r\nconst https = require('https');\r\nconst http = require('http');\r\n\r\n// Test configuration\r\nconst PI_HOST = '192.168.1.8';\r\nconst PI_PORT = 3001;\r\nconst TEST_RFIDS = [\r\n    '0006851540', // Kno",
        "lineCount": 200,
        "isEmpty": false
      }
    },
    "test-maksisoft-timeout-fix.js": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains active keywords: function, const",
        "Contains config keywords: config"
      ],
      "alternatives": [
        "active",
        "config"
      ],
      "metadata": {
        "path": "test-maksisoft-timeout-fix.js",
        "size": 3161,
        "modified": "2025-08-28T17:10:24.427Z",
        "extension": ".js",
        "basename": "test-maksisoft-timeout-fix.js",
        "directory": ".",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Test script to verify Maksisoft timeout fix\r\n */\r\n\r\nconsole.log('🔍 Testing Maksisoft timeout fix...');\r\n\r\n// Test the API directly\r\nasync function testMaksiAPI() {\r\n  const config = {\r\n    baseUrl: process.env.MAKSI_BASE || 'https://eformhatay.maksionline.com',\r\n    searchPath: process.env.MAKSI_SEARCH_PATH || '/react-system/api_php/user_search/users.php',\r\n    criteriaForRfid: process.env.MAKSI_CRITERIA_FOR_RFID || '0',\r\n    bootstrapCookie: process.env.MAKSI_BOO",
        "lineCount": 102,
        "isEmpty": false
      }
    },
    "test-rfid-flow-fixed.js": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains active keywords: function, const"
      ],
      "alternatives": [
        "active"
      ],
      "metadata": {
        "path": "test-rfid-flow-fixed.js",
        "size": 4768,
        "modified": "2025-08-28T04:36:30.398Z",
        "extension": ".js",
        "basename": "test-rfid-flow-fixed.js",
        "directory": ".",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Test the complete RFID flow with the ownership confirmation fix\r\n */\r\n\r\nconst http = require('http');\r\n\r\nconsole.log('🧪 Testing Fixed RFID Flow...\\n');\r\n\r\n// Simulate the complete RFID flow via API\r\nasync function testRfidFlow() {\r\n    return new Promise((resolve, reject) => {\r\n        // Simulate locker selection via kiosk API\r\n        const postData = JSON.stringify({\r\n            locker_id: 1,\r\n            staff_user: 'test-rfid-flow',\r\n            reason: 'Tes",
        "lineCount": 136,
        "isEmpty": false
      }
    },
    "test-status-display.html": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains active keywords: type"
      ],
      "alternatives": [
        "active"
      ],
      "metadata": {
        "path": "test-status-display.html",
        "size": 3660,
        "modified": "2025-08-28T04:11:25.549Z",
        "extension": ".html",
        "basename": "test-status-display.html",
        "directory": ".",
        "content": "<!DOCTYPE html>\r\n<html lang=\"tr\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Status Display Test</title>\r\n    <style>\r\n        body { font-family: Arial, sans-serif; padding: 20px; }\r\n        .test-card { \r\n            border: 1px solid #ddd; \r\n            border-left: 4px solid #ddd;\r\n            padding: 15px; \r\n            margin: 10px 0; \r\n            border-radius: 5px;\r\n            background: white;\r\n        ",
        "lineCount": 99,
        "isEmpty": false
      }
    },
    "test-status-fix.js": {
      "primary": "temporary",
      "confidence": "medium",
      "reasons": [
        "Matches temporary filename pattern",
        "Contains active keywords: const",
        "Contains build keywords: deploy"
      ],
      "alternatives": [
        "active",
        "build"
      ],
      "metadata": {
        "path": "test-status-fix.js",
        "size": 6166,
        "modified": "2025-08-28T04:12:01.580Z",
        "extension": ".js",
        "basename": "test-status-fix.js",
        "directory": ".",
        "content": "#!/usr/bin/env node\r\n\r\n/**\r\n * Test script to verify status display fix\r\n * Run this on the Pi after deployment\r\n */\r\n\r\nconst http = require('http');\r\n\r\nconsole.log('🧪 Testing Status Display Fix...\\n');\r\n\r\n// Test data - simulate different locker statuses\r\nconst testStatuses = [\r\n    { status: 'Free', expected: 'Boş' },\r\n    { status: 'Owned', expected: 'Sahipli' },\r\n    { status: 'Reserved', expected: 'Rezerve' },\r\n    { status: 'Opening', expected: 'Açılıyor' },\r\n    { status: 'Blocked', expe",
        "lineCount": 179,
        "isEmpty": false
      }
    },
    "tests\\integration\\accessibility-requirements.test.ts": {
      "primary": "test",
      "confidence": "high",
      "reasons": [
        "Located in tests\\integration directory"
      ],
      "metadata": {
        "path": "tests\\integration\\accessibility-requirements.test.ts",
        "size": 10617,
        "modified": "2025-08-27T03:38:22.303Z",
        "extension": ".ts",
        "basename": "accessibility-requirements.test.ts",
        "directory": "tests\\integration",
        "content": "import { describe, it, expect, beforeEach } from 'vitest';\nimport { readFile } from 'fs/promises';\nimport { join } from 'path';\n\ndescribe('Accessibility Requirements Integration Tests', () => {\n  let kioskCSS: string;\n  let kioskHTML: string;\n\n  beforeEach(async () => {\n    // Read actual kiosk UI files for testing\n    try {\n      kioskCSS = await readFile(join(process.cwd(), 'app/kiosk/src/ui/static/styles.css'), 'utf-8');\n      kioskHTML = await readFile(join(process.cwd(), 'app/kiosk/src/ui/i",
        "lineCount": 332,
        "isEmpty": false
      }
    },
    "tests\\integration\\admin-panel-ui-improvements.test.ts": {
      "primary": "test",
      "confidence": "high",
      "reasons": [
        "Located in tests\\integration directory"
      ],
      "metadata": {
        "path": "tests\\integration\\admin-panel-ui-improvements.test.ts",
        "size": 16860,
        "modified": "2025-08-28T03:18:09.020Z",
        "extension": ".ts",
        "basename": "admin-panel-ui-improvements.test.ts",
        "directory": "tests\\integration",
        "content": "/**\r\n * Unit tests for Admin Panel UI Improvements\r\n * Task 4: Update locker card rendering logic\r\n */\r\n\r\nimport { describe, it, expect } from 'vitest';\r\nimport { g } from 'vitest/dist/chunks/suite.d.FvehnV49.js';\r\nimport { g } from 'vitest/dist/chunks/suite.d.FvehnV49.js';\r\n\r\n// Mock services that would be available in the browser environment\r\nconst StatusTranslationService = {\r\n  translateStatus: (dbStatus: string) => {\r\n    const translations: Record<string, string> = {\r\n      'Free': 'Boş',\r",
        "lineCount": 530,
        "isEmpty": false
      }
    },
    "tests\\integration\\backend-integration.test.ts": {
      "primary": "test",
      "confidence": "high",
      "reasons": [
        "Located in tests\\integration directory"
      ],
      "metadata": {
        "path": "tests\\integration\\backend-integration.test.ts",
        "size": 17245,
        "modified": "2025-08-27T05:46:43.768Z",
        "extension": ".ts",
        "basename": "backend-integration.test.ts",
        "directory": "tests\\integration",
        "content": "/**\r\n * Backend Integration Tests for Kiosk UI Overhaul\r\n * Tests integration with existing locker state manager, hardware controller, and session management\r\n * Requirements: 4.1, 4.2, 4.3, 4.4, 4.5, 4.6\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, afterEach, beforeAll, afterAll } from 'vitest';\r\nimport { LockerStateManager } from '../../shared/services/locker-state-manager';\r\nimport { ModbusController } from '../../app/kiosk/src/hardware/modbus-controller';\r\nimport { SessionManager } fro",
        "lineCount": 467,
        "isEmpty": false
      }
    },
    "tests\\integration\\real-time-state-sync.test.ts": {
      "primary": "test",
      "confidence": "high",
      "reasons": [
        "Located in tests\\integration directory"
      ],
      "metadata": {
        "path": "tests\\integration\\real-time-state-sync.test.ts",
        "size": 18327,
        "modified": "2025-08-27T03:38:22.304Z",
        "extension": ".ts",
        "basename": "real-time-state-sync.test.ts",
        "directory": "tests\\integration",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\nimport { LockerStateManager } from '../../shared/services/locker-state-manager';\nimport { WebSocketService } from '../../shared/services/websocket-service';\nimport { LockerNamingService } from '../../shared/services/locker-naming-service';\nimport WebSocket from 'ws';\n\ndescribe('Real-time State Synchronization Integration Tests', () => {\n  let stateManager: LockerStateManager;\n  let wsService: WebSocketService;\n  let naming",
        "lineCount": 595,
        "isEmpty": false
      }
    },
    "tests\\integration\\real-time-sync.test.ts": {
      "primary": "test",
      "confidence": "high",
      "reasons": [
        "Located in tests\\integration directory"
      ],
      "metadata": {
        "path": "tests\\integration\\real-time-sync.test.ts",
        "size": 17245,
        "modified": "2025-08-27T05:48:57.578Z",
        "extension": ".ts",
        "basename": "real-time-sync.test.ts",
        "directory": "tests\\integration",
        "content": "/**\r\n * Real-time State Synchronization Tests\r\n * Tests WebSocket integration and real-time updates between backend and frontend\r\n * Requirements: 4.1, 4.2, 4.3, 4.4, 4.5, 4.6\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, afterEach, beforeAll, afterAll } from 'vitest';\r\nimport { WebSocket } from 'ws';\r\nimport { webSocketService } from '../../shared/services/websocket-service';\r\nimport { LockerStateManager } from '../../shared/services/locker-state-manager';\r\nimport { SessionManager } from '",
        "lineCount": 535,
        "isEmpty": false
      }
    },
    "tests\\integration\\run-integration-tests.ts": {
      "primary": "test",
      "confidence": "high",
      "reasons": [
        "Located in tests\\integration directory"
      ],
      "metadata": {
        "path": "tests\\integration\\run-integration-tests.ts",
        "size": 9361,
        "modified": "2025-08-27T03:38:22.307Z",
        "extension": ".ts",
        "basename": "run-integration-tests.ts",
        "directory": "tests\\integration",
        "content": "#!/usr/bin/env tsx\n\n/**\n * Integration Test Runner for Locker UI Improvements\n * \n * This script runs comprehensive integration tests to validate:\n * - Session management lifecycle (Requirements 2.3, 8.2, 8.3, 8.4)\n * - Real-time state synchronization (Requirements 2.3, 7.6, 8.2, 8.3, 8.4)\n * - Turkish language display and error messages (Requirements 7.6)\n * - Accessibility requirements (Requirements 2.3, 8.2, 8.3, 8.4)\n */\n\nimport { execSync } from 'child_process';\nimport { existsSync } from '",
        "lineCount": 310,
        "isEmpty": false
      }
    },
    "tests\\integration\\session-management-lifecycle.test.ts": {
      "primary": "test",
      "confidence": "high",
      "reasons": [
        "Located in tests\\integration directory"
      ],
      "metadata": {
        "path": "tests\\integration\\session-management-lifecycle.test.ts",
        "size": 11590,
        "modified": "2025-08-27T03:38:22.308Z",
        "extension": ".ts",
        "basename": "session-management-lifecycle.test.ts",
        "directory": "tests\\integration",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\nimport { SessionManager } from '../../app/kiosk/src/controllers/session-manager';\nimport { LockerStateManager } from '../../shared/services/locker-state-manager';\nimport { WebSocketService } from '../../shared/services/websocket-service';\n\ndescribe('Session Management Lifecycle Integration Tests', () => {\n  let sessionManager: SessionManager;\n  let lockerStateManager: LockerStateManager;\n  let wsService: WebSocketService;\n",
        "lineCount": 347,
        "isEmpty": false
      }
    },
    "tests\\integration\\turkish-language-validation.test.ts": {
      "primary": "test",
      "confidence": "high",
      "reasons": [
        "Located in tests\\integration directory"
      ],
      "metadata": {
        "path": "tests\\integration\\turkish-language-validation.test.ts",
        "size": 10252,
        "modified": "2025-08-27T03:38:22.309Z",
        "extension": ".ts",
        "basename": "turkish-language-validation.test.ts",
        "directory": "tests\\integration",
        "content": "import { describe, it, expect, beforeEach, vi } from 'vitest';\nimport { I18nService } from '../../shared/services/i18n-service';\nimport { LockerNamingService } from '../../shared/services/locker-naming-service';\n\ndescribe('Turkish Language Display and Error Messages Integration Tests', () => {\n  let i18nService: I18nService;\n  let namingService: LockerNamingService;\n  let mockDatabase: any;\n\n  beforeEach(() => {\n    mockDatabase = {\n      get: vi.fn(),\n      run: vi.fn(),\n      all: vi.fn(),\n   ",
        "lineCount": 257,
        "isEmpty": false
      }
    },
    "tests\\integration\\websocket-realtime-ui-updates.test.ts": {
      "primary": "test",
      "confidence": "high",
      "reasons": [
        "Located in tests\\integration directory"
      ],
      "metadata": {
        "path": "tests\\integration\\websocket-realtime-ui-updates.test.ts",
        "size": 23167,
        "modified": "2025-08-28T03:27:20.336Z",
        "extension": ".ts",
        "basename": "websocket-realtime-ui-updates.test.ts",
        "directory": "tests\\integration",
        "content": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';\r\nimport { WebSocketService } from '../../shared/services/websocket-service';\r\nimport { LockerStateManager } from '../../shared/services/locker-state-manager';\r\nimport WebSocket from 'ws';\r\n\r\n/**\r\n * Integration tests for Task 5: Verify real-time WebSocket updates work with new UI elements\r\n * \r\n * Requirements tested:\r\n * - 5.1: WebSocket state updates properly refresh RFID display information\r\n * - 5.2: Status color chang",
        "lineCount": 672,
        "isEmpty": false
      }
    },
    "tsconfig.json": {
      "primary": "active",
      "confidence": "medium",
      "reasons": [
        "Matches active filename pattern",
        "Contains active keywords: import, function",
        "Contains config keywords: options"
      ],
      "alternatives": [
        "active",
        "config"
      ],
      "metadata": {
        "path": "tsconfig.json",
        "size": 1401,
        "modified": "2025-08-23T14:23:33.220Z",
        "extension": ".json",
        "basename": "tsconfig.json",
        "directory": ".",
        "content": "{\r\n  \"compilerOptions\": {\r\n    \"target\": \"ES2020\",\r\n    \"module\": \"CommonJS\",\r\n    \"moduleResolution\": \"node\",\r\n    \"allowSyntheticDefaultImports\": true,\r\n    \"esModuleInterop\": true,\r\n    \"allowJs\": true,\r\n    \"sourceMap\": true,\r\n    \"outDir\": \"./dist\",\r\n    \"strict\": true,\r\n    \"noImplicitAny\": true,\r\n    \"strictNullChecks\": true,\r\n    \"strictFunctionTypes\": true,\r\n    \"noImplicitThis\": true,\r\n    \"noImplicitReturns\": true,\r\n    \"noFallthroughCasesInSwitch\": true,\r\n    \"moduleDetection\": \"forc",
        "lineCount": 55,
        "isEmpty": false
      }
    }
  }
}